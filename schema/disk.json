{
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "description": "Represents a virtual disk device.", 
  "properties": {
    "comment": {
      "type": "string", 
      "description": "Free text containing comments about this object."
    }, 
    "logical_name": {
      "type": "string"
    }, 
    "wipe_after_delete": {
      "type": "boolean", 
      "description": "Indicates if the disk's blocks will be read back as zeros after it is deleted:\n\n- On block storage, the disk will be zeroed and only then deleted.\n\n- On file storage, since the file system already guarantees that previously removed blocks are read back as\nzeros, the disk will be deleted immediately."
    }, 
    "propagate_errors": {
      "type": "boolean", 
      "description": "Indicates if disk errors should cause virtual machine to be paused or if disk errors should be\npropagated to the the guest operating system instead."
    }, 
    "interface": {
      "enum": [
        "ide", 
        "spapr_vscsi", 
        "virtio", 
        "virtio_scsi"
      ], 
      "type": "string", 
      "description": "The type of interface driver used to connect the disk device to the virtual machine.\n\nIMPORTANT: This attribute only makes sense for disks that are actually connected to virtual machines, and in\nversion 4 of the API it has been moved to the <<types/disk_attachment, DiskAttachment>> type. It is preserved\nhere only for backwards compatibility, and it will be removed in the future."
    }, 
    "sgio": {
      "enum": [
        "filtered", 
        "unfiltered"
      ], 
      "type": "string"
    }, 
    "lun_storage": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "username": {
          "type": "string"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "nfs_timeo": {
          "type": "integer", 
          "description": "The time in tenths of a second to wait for a response before retrying NFS requests. The value must be in the\nrange of 0 to 65535. For more details see the description of the `timeo` mount option in the `nfs` man page.", 
          "format": "int32"
        }, 
        "logical_units": {
          "items": {
            "type": "object", 
            "properties": {
              "status": {
                "enum": [
                  "free", 
                  "unusable", 
                  "used"
                ], 
                "type": "string"
              }, 
              "username": {
                "type": "string"
              }, 
              "password": {
                "type": "string"
              }, 
              "discard_max_size": {
                "type": "integer", 
                "description": "The maximum number of bytes that can be discarded by the logical unit's\nunderlying storage in a single operation.\nA value of 0 means that the device does not support discard functionality.\n\nNOTE: This is the software limit, and not the hardware limit, as noted in the\nhttps://www.kernel.org/doc/Documentation/block/queue-sysfs.txt[documentation] of\n`queue-sysfs` for `discard_max_bytes`.", 
                "format": "int32"
              }, 
              "volume_group_id": {
                "type": "string"
              }, 
              "paths": {
                "type": "integer", 
                "format": "int32"
              }, 
              "vendor_id": {
                "type": "string"
              }, 
              "disk_id": {
                "type": "string"
              }, 
              "port": {
                "type": "integer", 
                "format": "int32"
              }, 
              "target": {
                "type": "string"
              }, 
              "portal": {
                "type": "string"
              }, 
              "discard_zeroes_data": {
                "type": "boolean", 
                "description": "True, if previously discarded blocks in the logical\nunit's underlying storage are read back as zeros.\nFor more information please see the\nhttps://www.kernel.org/doc/Documentation/block/queue-sysfs.txt[documentation]\nof `queue-sysfs` for `discard_zeroes_data`."
              }, 
              "lun_mapping": {
                "type": "integer", 
                "format": "int32"
              }, 
              "serial": {
                "type": "string"
              }, 
              "size": {
                "type": "integer", 
                "format": "int32"
              }, 
              "storage_domain_id": {
                "type": "string"
              }, 
              "id": {
                "type": "string"
              }, 
              "address": {
                "type": "string"
              }, 
              "product_id": {
                "type": "string"
              }
            }
          }, 
          "type": "array"
        }, 
        "nfs_retrans": {
          "type": "integer", 
          "description": "The number of times to retry a request before attempting further recovery actions. The value must be in the\nrange of 0 to 65535. For more details see the description of the `retrans` mount option in the `nfs` man page.", 
          "format": "int32"
        }, 
        "port": {
          "type": "integer", 
          "format": "int32"
        }, 
        "override_luns": {
          "type": "boolean"
        }, 
        "portal": {
          "type": "string"
        }, 
        "mount_options": {
          "type": "string"
        }, 
        "volume_group": {
          "type": "object", 
          "properties": {
            "logical_units": {
              "items": {
                "type": "object", 
                "properties": {
                  "status": {
                    "enum": [
                      "free", 
                      "unusable", 
                      "used"
                    ], 
                    "type": "string"
                  }, 
                  "username": {
                    "type": "string"
                  }, 
                  "password": {
                    "type": "string"
                  }, 
                  "discard_max_size": {
                    "type": "integer", 
                    "description": "The maximum number of bytes that can be discarded by the logical unit's\nunderlying storage in a single operation.\nA value of 0 means that the device does not support discard functionality.\n\nNOTE: This is the software limit, and not the hardware limit, as noted in the\nhttps://www.kernel.org/doc/Documentation/block/queue-sysfs.txt[documentation] of\n`queue-sysfs` for `discard_max_bytes`.", 
                    "format": "int32"
                  }, 
                  "volume_group_id": {
                    "type": "string"
                  }, 
                  "paths": {
                    "type": "integer", 
                    "format": "int32"
                  }, 
                  "vendor_id": {
                    "type": "string"
                  }, 
                  "disk_id": {
                    "type": "string"
                  }, 
                  "port": {
                    "type": "integer", 
                    "format": "int32"
                  }, 
                  "target": {
                    "type": "string"
                  }, 
                  "portal": {
                    "type": "string"
                  }, 
                  "discard_zeroes_data": {
                    "type": "boolean", 
                    "description": "True, if previously discarded blocks in the logical\nunit's underlying storage are read back as zeros.\nFor more information please see the\nhttps://www.kernel.org/doc/Documentation/block/queue-sysfs.txt[documentation]\nof `queue-sysfs` for `discard_zeroes_data`."
                  }, 
                  "lun_mapping": {
                    "type": "integer", 
                    "format": "int32"
                  }, 
                  "serial": {
                    "type": "string"
                  }, 
                  "size": {
                    "type": "integer", 
                    "format": "int32"
                  }, 
                  "storage_domain_id": {
                    "type": "string"
                  }, 
                  "id": {
                    "type": "string"
                  }, 
                  "address": {
                    "type": "string"
                  }, 
                  "product_id": {
                    "type": "string"
                  }
                }
              }, 
              "type": "array"
            }, 
            "id": {
              "type": "string"
            }, 
            "name": {
              "type": "string"
            }
          }
        }, 
        "address": {
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "path": {
          "type": "string"
        }, 
        "vfs_type": {
          "type": "string"
        }, 
        "password": {
          "type": "string"
        }, 
        "type": {
          "enum": [
            "cinder", 
            "fcp", 
            "glance", 
            "glusterfs", 
            "iscsi", 
            "localfs", 
            "nfs", 
            "posixfs"
          ], 
          "type": "string"
        }, 
        "nfs_version": {
          "enum": [
            "auto", 
            "v3", 
            "v4", 
            "v4_1", 
            "v4_2"
          ], 
          "type": "string"
        }, 
        "target": {
          "type": "string"
        }
      }
    }, 
    "id": {
      "type": "string", 
      "description": "A unique identifier."
    }, 
    "read_only": {
      "type": "boolean", 
      "description": "Indicates if the disk is in read-only mode.\n\nSince version 4.0 this attribute is not shown in the API and was moved to <<types/disk_attachment,DiskAttachment>>.\n\nSince version 4.1.2 of {engine-name} this attribute is deprecated, and it will be removed in the future.\nIn order to attach a disk in read only mode use the `read_only` attribute of the <<types/disk_attachment,\nDiskAttachment>> type. For example:\n\n....\nPOST /ovirt-engine/api/vms/123/diskattachments\n....\n\n[source,xml]\n----\n<disk_attachment>\n  <read_only>true</read_only>\n  ...\n</disk_attachment>\n----"
    }, 
    "uses_scsi_reservation": {
      "type": "boolean"
    }, 
    "provisioned_size": {
      "type": "integer", 
      "description": "The virtual size of the disk, in bytes.\n\nThis attribute is mandatory when creating a new disk.", 
      "format": "int32"
    }, 
    "status": {
      "enum": [
        "illegal", 
        "locked", 
        "ok"
      ], 
      "type": "string", 
      "description": "The status of the disk device."
    }, 
    "description": {
      "type": "string", 
      "description": "A human-readable description in plain text."
    }, 
    "format": {
      "enum": [
        "cow", 
        "raw"
      ], 
      "type": "string", 
      "description": "The underlying storage format."
    }, 
    "image_id": {
      "type": "string"
    }, 
    "qcow_version": {
      "enum": [
        "qcow2_v2", 
        "qcow2_v3"
      ], 
      "type": "string", 
      "description": "The underlying QCOW version of a QCOW volume.\nThe QCOW version specifies to the qemu which qemu version the volume supports.\nThis field can be updated using the update API and will be reported only for QCOW volumes.\nIt is determined by the version of the storage domain that the disk is created on.\nStorage domains with a version lower than V4 support QCOW2 volumes. V4 storage domains also support QCOW2v3.\nFor more information about features of the different QCOW versions, see http://wiki.qemu.org/Features/Qcow3[here]."
    }, 
    "active": {
      "type": "boolean", 
      "description": "Indicates if the disk is visible to the virtual machine.\n\nIMPORTANT: When adding a disk attachment to a virtual machine, if the server accepts requests that do not contain\nthis attribute the result is undefined. In some cases the disk will be automatically activated\nand in other cases it will not. To avoid issues it is strongly recommended to always include the this attribute\nwith the desired value."
    }, 
    "actual_size": {
      "type": "integer", 
      "description": "The actual size of the disk, in bytes.\n\nThe actual size is the number of bytes actually used by the disk. It will be smaller than the provisioned\nsize for disks that use the `cow` format.", 
      "format": "int32"
    }, 
    "name": {
      "type": "string", 
      "description": "A human-readable name in plain text."
    }, 
    "bootable": {
      "type": "boolean", 
      "description": "Indicates if the disk is marked as bootable.\n\nIMPORTANT: This attribute only makes sense for disks that are actually connected to virtual machines, and in\nversion 4 of the API it has been moved to the <<types/disk_attachment, DiskAttachment>> type. It is preserved\nhere only for backwards compatibility, and it will be removed in the future."
    }, 
    "initial_size": {
      "type": "integer", 
      "description": "The initial size of a sparse image disk created on block storage, in bytes.\n\nThe initial size is the number of bytes a sparse disk is initially allocated with when created on block storage.\nThe initial size will be smaller than the provisioned size. If not specified the default initial size used by the\nsystem will be allocated.", 
      "format": "int32"
    }, 
    "storage_type": {
      "enum": [
        "cinder", 
        "image", 
        "lun"
      ], 
      "type": "string"
    }, 
    "alias": {
      "type": "string"
    }, 
    "shareable": {
      "type": "boolean", 
      "description": "Indicates if the disk can be attached to multiple virtual machines.\n\nIMPORTANT: When a disk is attached to multiple virtual machines it is the responsibility of the guest\noperating systems of those virtual machines to coordinate access to it, to avoid corruption of the data, for\nexample using a shared file system like https://www.gluster.org[GlusterFS] or\nhttp://www.sourceware.org/cluster/gfs[GFS]."
    }, 
    "sparse": {
      "type": "boolean", 
      "description": "Indicates if the physical storage for the disk should not be preallocated."
    }
  }
}