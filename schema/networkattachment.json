{
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "description": "Describes how a host connects to a network.\n\nAn XML representation of a network attachment on a host:\n\n[source,xml]\n----\n<network_attachment href=\"/ovirt-engine/api/hosts/123/nics/456/networkattachments/789\" id=\"789\">\n  <network href=\"/ovirt-engine/api/networks/234\" id=\"234\"/>\n  <host_nic href=\"/ovirt-engine/api/hosts/123/nics/123\" id=\"123\"/>\n  <in_sync>true</in_sync>\n  <ip_address_assignments>\n    <ip_address_assignment>\n      <assignment_method>static</assignment_method>\n      <ip>\n        <address>192.168.122.39</address>\n        <gateway>192.168.122.1</gateway>\n        <netmask>255.255.255.0</netmask>\n        <version>v4</version>\n      </ip>\n    </ip_address_assignment>\n  </ip_address_assignments>\n  <reported_configurations>\n    <reported_configuration>\n      <name>mtu</name>\n      <expected_value>1500</expected_value>\n      <actual_value>1500</actual_value>\n      <in_sync>true</in_sync>\n    </reported_configuration>\n    <reported_configuration>\n      <name>bridged</name>\n      <expected_value>true</expected_value>\n      <actual_value>true</actual_value>\n      <in_sync>true</in_sync>\n    </reported_configuration>\n    ...\n  </reported_configurations>\n</network_attachment>\n----\n\nThe network element, with either a `name` or an `id`, is required in order to attach a network\nto a network interface card (NIC).\n\nFor example, to attach a network to a host network interface card, send a request like this:\n\n[source]\n----\nPOST /ovirt-engine/api/hosts/123/nics/456/networkattachments\n----\n\nWith a request body like this:\n\n[source,xml]\n----\n<networkattachment>\n  <network id=\"234\"/>\n</networkattachment>\n----\n\nTo attach a network to a host, send a request like this:\n\n[source]\n----\nPOST /ovirt-engine/api/hosts/123/networkattachments\n----\n\nWith a request body like this:\n\n[source,xml]\n----\n<network_attachment>\n  <network id=\"234\"/>\n  <host_nic id=\"456\"/>\n</network_attachment>\n----\n\nThe `ip_address_assignments` and `properties` elements are updatable post-creation.\n\nFor example, to update a network attachment, send a request like this:\n\n[source]\n----\nPUT /ovirt-engine/api/hosts/123/nics/456/networkattachments/789\n----\n\nWith a request body like this:\n\n[source,xml]\n----\n<network_attachment>\n  <ip_address_assignments>\n    <ip_address_assignment>\n      <assignment_method>static</assignment_method>\n      <ip>\n        <address>7.1.1.1</address>\n        <gateway>7.1.1.2</gateway>\n        <netmask>255.255.255.0</netmask>\n        <version>v4</version>\n      </ip>\n    </ip_address_assignment>\n  </ip_address_assignments>\n</network_attachment>\n----\n\nTo detach a network from the network interface card send a request like this:\n\n[source]\n----\nDELETE /ovirt-engine/api/hosts/123/nics/456/networkattachments/789\n----\n\nIMPORTANT: Changes to network attachment configuration must be explicitly committed.\n\nAn XML representation of a network attachment's `properties` sub-collection:\n\n[source, xml]\n----\n<network_attachment>\n  <properties>\n    <property>\n      <name>bridge_opts</name>\n      <value>\n        forward_delay=1500 group_fwd_mask=0x0 multicast_snooping=1\n      </value>\n    </property>\n  </properties>\n  ...\n</network_attachment>\n----", 
  "properties": {
    "comment": {
      "type": "string", 
      "description": "Free text containing comments about this object."
    }, 
    "reported_configurations": {
      "type": "object", 
      "properties": {
        "reported_configuration": {
          "items": {
            "type": "object", 
            "properties": {
              "expected_value": {
                "type": "string"
              }, 
              "actual_value": {
                "type": "string"
              }, 
              "name": {
                "type": "string"
              }, 
              "in_sync": {
                "type": "boolean", 
                "description": "`false` when the network attachment contains uncommitted network configuration."
              }
            }
          }, 
          "type": "array", 
          "description": "A read-only list of configuration properties."
        }
      }
    }, 
    "description": {
      "type": "string", 
      "description": "A human-readable description in plain text."
    }, 
    "dns_resolver_configuration": {
      "type": "object", 
      "description": "Represents the DNS resolver configuration.", 
      "properties": {
        "name_servers": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "Array of addresses of name servers. Either IPv4 or IPv6 addresses may be specified."
        }
      }
    }, 
    "in_sync": {
      "type": "boolean"
    }, 
    "id": {
      "type": "string", 
      "description": "A unique identifier."
    }, 
    "ip_address_assignments": {
      "type": "object", 
      "properties": {
        "ip_address_assignment": {
          "items": {
            "type": "object", 
            "description": "Represents an IP address assignment for a network device.\n\nFor a static boot protocol assignment, subnet mask and IP address\n(and optinally default gateway) must be provided in the IP configuration.", 
            "properties": {
              "ip": {
                "type": "object", 
                "description": "Represents the IP configuration of a network interface.", 
                "properties": {
                  "netmask": {
                    "type": "string", 
                    "description": "The network mask.\n\nFor IPv6 addresses the value is an integer in the range of 0-128, which represents the subnet prefix."
                  }, 
                  "version": {
                    "enum": [
                      "v4", 
                      "v6"
                    ], 
                    "type": "string", 
                    "description": "The version of the IP protocol.\n\nNOTE: From version 4.1 of the Manager this attribute will be optional, and when a value is not provided, it will\nbe inferred from the value of the `address` attribute."
                  }, 
                  "gateway": {
                    "type": "string", 
                    "description": "The address of the default gateway."
                  }, 
                  "address": {
                    "type": "string", 
                    "description": "The text representation of the IP address.\n\nFor example, an IPv4 address will be represented as follows:\n\n[source,xml]\n----\n<ip>\n  <address>192.168.0.1</address>\n  ...\n</ip>\n----\n\nAn IPv6 address will be represented as follows:\n\n[source,xml]\n----\n<ip>\n  <address>2620:52:0:20f0:4216:7eff:feaa:1b50</address>\n  ...\n</ip>\n----"
                  }
                }
              }, 
              "assignment_method": {
                "enum": [
                  "autoconf", 
                  "dhcp", 
                  "none", 
                  "static"
                ], 
                "type": "string", 
                "description": "Sets the boot protocol used to assign the IP configuration for a network device."
              }
            }
          }, 
          "type": "array", 
          "description": "The IP configuration of the network."
        }
      }
    }, 
    "properties": {
      "type": "object", 
      "properties": {
        "property": {
          "items": {
            "type": "object", 
            "properties": {
              "name": {
                "type": "string"
              }, 
              "value": {
                "type": "string"
              }
            }
          }, 
          "type": "array", 
          "description": "Defines custom properties for the network configuration.\n\nBridge options have the set name of bridge_opts. Separate multiple entries with a whitespace character.\nThe following keys are valid for `bridge_opts`:\n\n|===\n|Name |Default value\n\n|`forward_delay` |`1500`\n|`gc_timer` |`3765`\n|`group_addr` |`1:80:c2:0:0:0`\n|`group_fwd_mask` |`0x0`\n|`hash_elasticity` |`4`\n|`hash_max` |`512`\n|`hello_time` |`200`\n|`hello_timer` |`70`\n|`max_age` |`2000`\n|`multicast_last_member_count` |`2`\n|`multicast_last_member_interval` |`100`\n|`multicast_membership_interval` |`26000`\n|`multicast_querier` |`0`\n|`multicast_querier_interval` |`25500`\n|`multicast_query_interval` |`13000`\n|`multicast_query_response_interval` |`1000`\n|`multicast_query_use_ifaddr` |`0`\n|`multicast_router` |`1`\n|`multicast_snooping` |`1`\n|`multicast_startup_query_count` |`2`\n|`multicast_startup_query_interval` |`3125`\n\n|==="
        }
      }
    }, 
    "name": {
      "type": "string", 
      "description": "A human-readable name in plain text."
    }
  }
}