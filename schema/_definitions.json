{
  "definitions": {
    "Console": {
      "type": "object", 
      "description": "Representation for serial console device.", 
      "properties": {
        "enabled": {
          "type": "boolean", 
          "description": "Enable/disable the serial console device."
        }
      }
    }, 
    "GuestOperatingSystem": {
      "type": "object", 
      "description": "Represents an operating system installed on the virtual machine.\n\nTo get that information send a request like this:\n\n....\nGET /ovirt-engine/api/vms/123\n....\n\nThe result will be like this:\n\n[source,xml]\n----\n<vm href=\"/ovirt-engine/api/vms/123\" id=\"123\">\n...\n  <guest_operating_system>\n    <architecture>x86_64</architecture>\n    <codename>Maipo</codename>\n    <distribution>Red Hat Enterprise Linux Server</distribution>\n    <family>Linux</family>\n    <kernel>\n      <version>\n        <build>0</build>\n        <full_version>3.10.0-514.10.2.el7.x86_64</full_version>\n        <major>3</major>\n        <minor>10</minor>\n        <revision>514</revision>\n      </version>\n    </kernel>\n    <version>\n      <full_version>7.3</full_version>\n      <major>7</major>\n      <minor>3</minor>\n    </version>\n  </guest_operating_system>\n</vm>\n----", 
      "properties": {
        "kernel": {
          "description": "Kernel version of the operating system.", 
          "$ref": "#/definitions/Kernel"
        }, 
        "version": {
          "description": "Version of the installed operating system.", 
          "$ref": "#/definitions/Version"
        }, 
        "architecture": {
          "type": "string", 
          "description": "The architecture of the operating system, such as x86_64."
        }, 
        "family": {
          "type": "string", 
          "description": "Family of operating system, such as `Linux`."
        }, 
        "distribution": {
          "type": "string", 
          "description": "Full name of operating system distribution."
        }, 
        "codename": {
          "type": "string", 
          "description": "Code name of the operating system, such as `Maipo`."
        }
      }
    }, 
    "NetworkLabel": {
      "type": "object", 
      "description": "Represents a label which can be added to a host network interface and to a network.\nThe label binds the network to the host network interface by the label `id`.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "ApiSummary": {
      "type": "object", 
      "description": "A summary containing the total number of relevant objects, such as virtual machines, hosts, and storage domains.", 
      "properties": {
        "storage_domains": {
          "description": "The summary of storage domains.", 
          "$ref": "#/definitions/ApiSummaryItem"
        }, 
        "hosts": {
          "description": "The summary of hosts.", 
          "$ref": "#/definitions/ApiSummaryItem"
        }, 
        "users": {
          "description": "The summary of users.", 
          "$ref": "#/definitions/ApiSummaryItem"
        }, 
        "vms": {
          "description": "The summary of virtual machines.", 
          "$ref": "#/definitions/ApiSummaryItem"
        }
      }
    }, 
    "Role": {
      "type": "object", 
      "description": "Represents a system role.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "mutable": {
          "type": "boolean", 
          "description": "Defines the ability to update or delete the role.\n\nRoles with mutable set to `false` are predefined roles."
        }, 
        "administrative": {
          "type": "boolean", 
          "description": "Defines the role as administrative-only or not."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "Template": {
      "type": "object", 
      "description": "Type representing a virtual machine template.\nThis allows a rapid instanstiation of virtual machines with common configuration and disk states.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "origin": {
          "type": "string", 
          "description": "The origin of this virtual machine.\n\nPossible values:\n\n- `ovirt`\n- `rhev`\n- `vmware`\n- `xen`\n- `external`\n- `hosted_engine`\n- `managed_hosted_engine`\n- `kvm`\n- `physical_machine`\n- `hyperv`"
        }, 
        "domain": {
          "description": "Domain configured for this virtual machine.", 
          "$ref": "#/definitions/Domain"
        }, 
        "virtio_scsi": {
          "description": "Reference to VirtIO SCSI configuration.", 
          "$ref": "#/definitions/VirtioScsi"
        }, 
        "creation_time": {
          "type": "string", 
          "description": "The virtual machine creation date.", 
          "format": "epoch"
        }, 
        "custom_compatibility_version": {
          "description": "Virtual machine custom compatibility version.\n\nEnables a virtual machine to be customized to its own compatibility version.  If\n`custom_compatibility_version` is set, it overrides the cluster's compatibility version\nfor this particular virtual machine.\n\nThe compatibility version of a virtual machine is limited by the data center the virtual\nmachine resides in, and is checked against capabilities of the host the virtual machine is\nplanned to run on.", 
          "$ref": "#/definitions/Version"
        }, 
        "large_icon": {
          "description": "Virtual machine's large icon. Either set by user or refers to image set according to operating system.", 
          "$ref": "#/definitions/Icon"
        }, 
        "migration": {
          "description": "Reference to configuration of migration of running virtual machine to another host.", 
          "$ref": "#/definitions/MigrationOptions"
        }, 
        "io": {
          "description": "For performance tuning of IO threading.", 
          "$ref": "#/definitions/Io"
        }, 
        "migration_downtime": {
          "type": "integer", 
          "description": "Maximum time the virtual machine can be non responsive during its live migration to another host in ms.\n\nSet either explicitly for the virtual machine or by `engine-config -s DefaultMaximumMigrationDowntime=[value]`", 
          "format": "int32"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "high_availability": {
          "description": "The virtual machine high availability configuration.\nIf set, the virtual machine will be automatically restarted when it unexpectedly goes down.", 
          "$ref": "#/definitions/HighAvailability"
        }, 
        "console": {
          "description": "Console configured for this virtual machine.", 
          "$ref": "#/definitions/Console"
        }, 
        "usb": {
          "description": "Configuration of USB devices for this virtual machine (count, type).", 
          "$ref": "#/definitions/Usb"
        }, 
        "custom_properties": {
          "items": {
            "$ref": "#/definitions/CustomProperty"
          }, 
          "type": "array", 
          "description": "Properties sent to VDSM to configure various hooks."
        }, 
        "custom_emulated_machine": {
          "type": "string"
        }, 
        "bios": {
          "description": "Reference to virtual machine's BIOS configuration.", 
          "$ref": "#/definitions/Bios"
        }, 
        "version": {
          "description": "Indicates whether this is a base version or a sub version of another template.", 
          "$ref": "#/definitions/TemplateVersion"
        }, 
        "delete_protected": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine cannot be deleted."
        }, 
        "memory": {
          "type": "integer", 
          "description": "The virtual machine's memory, in bytes.\n\nFor example, to update a virtual machine to contain 1 Gibibyte (GiB) of memory, send the following request:\n\n[source]\n----\nPUT /ovirt-engine/api/vms/123\n----\n\nWith the following request body:\n\n[source,xml]\n----\n<vm>\n  <memory>1073741824</memory>\n</vm>\n----\n\nNOTE: Memory in the example is converted to bytes using the following formula: +\n1 GiB = 2^30^ bytes = 1073741824 bytes.\n\nNOTE: Memory hot plug is supported from {product-name} 3.6 onwards. You can use the example above to increase\nmemory while the virtual machine is running.", 
          "format": "int32"
        }, 
        "serial_number": {
          "description": "Virtual machine's serial number in a cluster.", 
          "$ref": "#/definitions/SerialNumber"
        }, 
        "tunnel_migration": {
          "type": "boolean", 
          "description": "If `true`, the network data transfer will be encrypted during virtual machine live migration."
        }, 
        "type": {
          "enum": [
            "desktop", 
            "server"
          ], 
          "type": "string", 
          "description": "Determines whether the virtual machine is optimized for desktop or server."
        }, 
        "lease": {
          "description": "Reference to the storage domain this virtual machine/template lease reside on.\n\nA virtual machine running with a lease requires checking while running that the lease is not taken by another\nhost, preventing another instance of this virtual machine from running on another host.\nThis provides protection against split-brain in highly available virtual machines.\nA template can also have a storage domain defined for a lease in order to have the virtual machines created\nfrom this template to be preconfigured with this storage domain as the location of the leases.", 
          "$ref": "#/definitions/StorageDomainLease"
        }, 
        "status": {
          "enum": [
            "illegal", 
            "locked", 
            "ok"
          ], 
          "type": "string", 
          "description": "The status of the template."
        }, 
        "rng_device": {
          "description": "Random Number Generator device configuration for this virtual machine.", 
          "$ref": "#/definitions/RngDevice"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "initialization": {
          "description": "Reference to virtual machine's initialization configuration.", 
          "$ref": "#/definitions/Initialization"
        }, 
        "vm": {
          "description": "The virtual machine configuration associated with this template.", 
          "$ref": "#/definitions/Vm"
        }, 
        "sso": {
          "description": "Reference to the Single Sign On configuration this virtual machine is configured for.\nThe user can be automatically signed in the virtual machine's operating system when console is opened.", 
          "$ref": "#/definitions/Sso"
        }, 
        "memory_policy": {
          "description": "Reference to virtual machine's memory management configuration.", 
          "$ref": "#/definitions/MemoryPolicy"
        }, 
        "soundcard_enabled": {
          "type": "boolean", 
          "description": "If `true`, the sound card is added to the virtual machine."
        }, 
        "stateless": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine is stateless - it's state (disks) are rolled-back after shutdown."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "custom_cpu_model": {
          "type": "string"
        }, 
        "time_zone": {
          "description": "The virtual machine's time zone set by oVirt.", 
          "$ref": "#/definitions/TimeZone"
        }, 
        "display": {
          "description": "The virtual machine display configuration.", 
          "$ref": "#/definitions/Display"
        }, 
        "start_paused": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine will be initially in 'paused' state after start."
        }, 
        "small_icon": {
          "description": "Virtual machine's small icon. Either set by user or refers to image set according to operating system.", 
          "$ref": "#/definitions/Icon"
        }, 
        "os": {
          "description": "Operating system type installed on the virtual machine.", 
          "$ref": "#/definitions/OperatingSystem"
        }, 
        "cpu": {
          "description": "The configuration of the virtual machine CPU.\n\nThe socket configuration can be updated without rebooting the virtual machine. The cores and the threads require\na reboot.\n\nFor example, to change the number of sockets to 4 immediately, and the number of cores and threads to 2 after\nreboot, send the following request:\n\n[source]\n----\nPUT /ovirt-engine/api/vms/123\n----\n\nWith a request body:\n\n[source,xml]\n----\n<vm>\n  <cpu>\n    <topology>\n      <sockets>4</sockets>\n      <cores>2</cores>\n      <threads>2</threads>\n    </topology>\n  </cpu>\n</vm>\n----", 
          "$ref": "#/definitions/Cpu"
        }, 
        "cpu_shares": {
          "type": "integer", 
          "format": "int32"
        }
      }
    }, 
    "DnsResolverConfiguration": {
      "type": "object", 
      "description": "Represents the DNS resolver configuration.", 
      "properties": {
        "name_servers": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "Array of addresses of name servers. Either IPv4 or IPv6 addresses may be specified."
        }
      }
    }, 
    "Ksm": {
      "type": "object", 
      "properties": {
        "enabled": {
          "type": "boolean"
        }, 
        "merge_across_nodes": {
          "type": "boolean"
        }
      }
    }, 
    "FencingPolicy": {
      "type": "object", 
      "description": "Type representing a cluster fencing policy.", 
      "properties": {
        "skip_if_gluster_bricks_up": {
          "type": "boolean", 
          "description": "A flag indicating if fencing should be skipped if Gluster bricks are up and running in the host being fenced.\nThis flag is optional, and the default value is `false`."
        }, 
        "enabled": {
          "type": "boolean", 
          "description": "Enable or disable fencing on this cluster."
        }, 
        "skip_if_connectivity_broken": {
          "description": "If enabled, we will not fence a host\nin case more than a configurable percentage\nof hosts in the cluster lost connectivity as well.\nThis comes to prevent fencing _storm_ in cases\nwhere there is a global networking issue in the\ncluster.", 
          "$ref": "#/definitions/SkipIfConnectivityBroken"
        }, 
        "skip_if_gluster_quorum_not_met": {
          "type": "boolean", 
          "description": "A flag indicating if fencing should be skipped if Gluster bricks are up and running and Gluster quorum will not\nbe met without those bricks.\nThis flag is optional, and the default value is `false`."
        }, 
        "skip_if_sd_active": {
          "description": "If enabled, we will skip fencing in case the host\nmaintains its lease in the storage. It means that\nif the host still has storage access then it won't\nget fenced.", 
          "$ref": "#/definitions/SkipIfSdActive"
        }
      }
    }, 
    "ClusterLevel": {
      "type": "object", 
      "description": "Describes the capabilities supported by a specific cluster level.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "permits": {
          "items": {
            "$ref": "#/definitions/Permit"
          }, 
          "type": "array", 
          "description": "The permits supported by this cluster level."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "cpu_types": {
          "items": {
            "$ref": "#/definitions/CpuType"
          }, 
          "type": "array", 
          "description": "The CPU types supported by this cluster level."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }
      }
    }, 
    "HostDevicePassthrough": {
      "type": "object", 
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    }, 
    "ReportedConfiguration": {
      "type": "object", 
      "properties": {
        "expected_value": {
          "type": "string"
        }, 
        "actual_value": {
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }, 
        "in_sync": {
          "type": "boolean", 
          "description": "`false` when the network attachment contains uncommitted network configuration."
        }
      }
    }, 
    "Vlan": {
      "type": "object", 
      "description": "Type representing a Virtual LAN (VLAN) type.", 
      "properties": {
        "id": {
          "type": "integer", 
          "description": "Virtual LAN ID.", 
          "format": "int32"
        }
      }
    }, 
    "AgentConfiguration": {
      "type": "object", 
      "properties": {
        "username": {
          "type": "string"
        }, 
        "broker_type": {
          "enum": [
            "qpid", 
            "rabbit_mq"
          ], 
          "type": "string"
        }, 
        "address": {
          "type": "string"
        }, 
        "password": {
          "type": "string"
        }, 
        "network_mappings": {
          "type": "string"
        }, 
        "port": {
          "type": "integer", 
          "format": "int32"
        }
      }
    }, 
    "Display": {
      "type": "object", 
      "description": "Represents a graphic console configuration.", 
      "properties": {
        "allow_override": {
          "type": "boolean", 
          "description": "Indicates if to override the display address per host.\nRelevant only for the `Host.display` attribute.\nIf set, the graphical console address of a virtual machine will be overridden by the host specified display address.\nif not set, the graphical console address of a virtual machine will not be overridden."
        }, 
        "file_transfer_enabled": {
          "type": "boolean", 
          "description": "Indicates if a user is able to drag and drop files from an external host into the graphic console.\nThis option is only available for the SPICE console type."
        }, 
        "disconnect_action": {
          "type": "string", 
          "description": "Returns the action that will take place when the graphic console is disconnected.\nThe options are:\n\nnone:: No action is taken.\nlock_screen:: Locks the currently active user session.\nlogout:: Logs out the currently active user session.\nreboot:: Initiates a graceful virtual machine reboot.\nshutdown:: Initiates a graceful virtual machine shutdown.\n\nThis option is only available for the SPICE console type."
        }, 
        "certificate": {
          "description": "The TLS certificate in case of a TLS connection.\nIf TLS isn't enabled then it won't be reported.", 
          "$ref": "#/definitions/Certificate"
        }, 
        "monitors": {
          "type": "integer", 
          "description": "The number of monitors opened for this graphic console.\nThis option is only available for the SPICE console type.\nPossible values are 1, 2 or 4.", 
          "format": "int32"
        }, 
        "address": {
          "type": "string", 
          "description": "The IP address of the guest to connect the graphic console client to."
        }, 
        "copy_paste_enabled": {
          "type": "boolean", 
          "description": "Indicates whether a user is able to copy and paste content from an external host into the graphic console.\nThis option is only available for the SPICE console type."
        }, 
        "secure_port": {
          "type": "integer", 
          "description": "The secured port address on the guest, in case of using TLS, to connect the graphic console client to.\nIf TLS isn't enabled then it won't be reported.", 
          "format": "int32"
        }, 
        "proxy": {
          "type": "string", 
          "description": "The proxy IP which will be used by the graphic console client to connect to the guest.\nIt is useful when the client is outside the guest's network.\nThis option is only available for the SPICE console type.\nThis proxy can be set in global configuration, cluster level, virtual machine pool level or disabled\nper virtual machine.\nIf the proxy is set in any of this mentioned places and not disabled for the virtual machine, it will be\nreturned by this method.\nIf the proxy is not set, nothing will be reported."
        }, 
        "smartcard_enabled": {
          "type": "boolean", 
          "description": "Indicates if to use smart card authentication.\nThis option is only available for the SPICE console type."
        }, 
        "single_qxl_pci": {
          "type": "boolean", 
          "description": "Indicates if to use one PCI slot for each monitor or to use a single PCI channel for all multiple monitors.\nThis option is only available for the SPICE console type and only for connecting a guest Linux based OS."
        }, 
        "keyboard_layout": {
          "type": "string", 
          "description": "The keyboard layout to use with this graphic console.\nThis option is only available for the VNC console type.\nIf no keyboard is enabled then it won't be reported."
        }, 
        "type": {
          "enum": [
            "spice", 
            "vnc"
          ], 
          "type": "string", 
          "description": "The graphic console protocol type."
        }, 
        "port": {
          "type": "integer", 
          "description": "The port address on the guest to connect the graphic console client to.", 
          "format": "int32"
        }
      }
    }, 
    "IpAddressAssignment": {
      "type": "object", 
      "description": "Represents an IP address assignment for a network device.\n\nFor a static boot protocol assignment, subnet mask and IP address\n(and optinally default gateway) must be provided in the IP configuration.", 
      "properties": {
        "ip": {
          "description": "Sets the IP configuration for a network device.", 
          "$ref": "#/definitions/Ip"
        }, 
        "assignment_method": {
          "enum": [
            "autoconf", 
            "dhcp", 
            "none", 
            "static"
          ], 
          "type": "string", 
          "description": "Sets the boot protocol used to assign the IP configuration for a network device."
        }
      }
    }, 
    "Host": {
      "type": "object", 
      "description": "Type representing a host.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "update_available": {
          "type": "boolean", 
          "description": "Specifies whether there is an oVirt-related update on this host."
        }, 
        "protocol": {
          "enum": [
            "stomp", 
            "xml"
          ], 
          "type": "string", 
          "description": "The protocol that the engine uses to communicate with\nthe host.\n\nWARNING: Since version 4.1 of the engine the protocol\nis always set to `stomp` since `xml` was removed."
        }, 
        "spm": {
          "description": "The host _storage pool manager_ (SPM) status and definition.\nUse it to set the SPM priority of this host, and to see whether this is the current\nSPM or not.", 
          "$ref": "#/definitions/Spm"
        }, 
        "hosted_engine": {
          "description": "The self-hosted engine status of this host.\n\nIMPORTANT: When a host or collection of hosts is retrieved, this attribute is not included unless the\n`all_content` parameter of the operation is explicitly set to `true`. See the documentation of the\noperations that retrieve <<services/host/methods/get/parameters/all_content, one>> or\n<<services/hosts/methods/list/parameters/all_content, multiple>> hosts for details.", 
          "$ref": "#/definitions/HostedEngine"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "external_status": {
          "enum": [
            "error", 
            "failure", 
            "info", 
            "ok", 
            "warning"
          ], 
          "type": "string", 
          "description": "The host external status.\nThis can be used by third-party software to change the host external status\nin case of an issue.\nThis has no effect on the host lifecycle, unless a third-party software checks for this\nstatus and acts accordingly."
        }, 
        "certificate": {
          "description": "The host certificate.", 
          "$ref": "#/definitions/Certificate"
        }, 
        "display": {
          "description": "Optionally specify the display address of this host explicitly.", 
          "$ref": "#/definitions/Display"
        }, 
        "iscsi": {
          "description": "The host iSCSI details.", 
          "$ref": "#/definitions/IscsiDetails"
        }, 
        "port": {
          "type": "integer", 
          "description": "The host port.", 
          "format": "int32"
        }, 
        "version": {
          "description": "The version of VDSM.\n\nFor example:\n\n[source]\n----\nGET /ovirt-engine/api/hosts/123\n----\n\nThis `GET` request will return the following output:\n\n[source,xml]\n----\n<host>\n  ...\n  <version>\n    <build>999</build>\n    <full_version>vdsm-4.18.999-419.gitcf06367.el7</full_version>\n    <major>4</major>\n    <minor>18</minor>\n    <revision>0</revision>\n  </version>\n  ...\n</host>\n----", 
          "$ref": "#/definitions/Version"
        }, 
        "memory": {
          "type": "integer", 
          "description": "The amount of physical memory on this host in bytes.", 
          "format": "int32"
        }, 
        "ksm": {
          "description": "Kernel SamePage Merging (KSM) reduces references to memory pages from multiple identical pages to a single page\nreference. This helps with optimization for memory density.\n\nFor example, to enable KSM for host `123`, send a request like this:\n\n....\nPUT /ovirt-engine/api/hosts/123\n....\n\nWith a request body like this:\n\n[source,xml]\n----\n<host>\n  <ksm>\n    <enabled>true</enabled>\n  </ksm>\n</host>\n----", 
          "$ref": "#/definitions/Ksm"
        }, 
        "se_linux": {
          "description": "The host SElinux status.\n_Security-Enhanced Linux (SELinux)_ is a component in the Linux kernel\nthat provides a mechanism for supporting access control security policies.", 
          "$ref": "#/definitions/SeLinux"
        }, 
        "type": {
          "enum": [
            "ovirt_node", 
            "rhel", 
            "rhev_h"
          ], 
          "type": "string", 
          "description": "Indicates if the host contains a full installation of the operating system or a scaled-down version intended\nonly to host virtual machines."
        }, 
        "status": {
          "enum": [
            "connecting", 
            "down", 
            "error", 
            "initializing", 
            "install_failed", 
            "installing", 
            "installing_os", 
            "kdumping", 
            "maintenance", 
            "non_operational", 
            "non_responsive", 
            "pending_approval", 
            "preparing_for_maintenance", 
            "reboot", 
            "unassigned", 
            "up"
          ], 
          "type": "string", 
          "description": "The host status."
        }, 
        "hardware_information": {
          "description": "The host hardware information.", 
          "$ref": "#/definitions/HardwareInformation"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "status_detail": {
          "type": "string", 
          "description": "The host status details. Relevant for Gluster hosts."
        }, 
        "transparent_hugepages": {
          "description": "Transparent huge page support expands the size of memory pages beyond the standard 4 KiB limit. This reduces\nmemory consumption and increases host performance.\n\nFor example, to enable transparent huge page support for host `123`, send a request like this:\n\n....\nPUT /ovirt-engine/api/hosts/123\n....\n\nWith a request body like this:\n\n[source,xml]\n----\n<host>\n  <transparent_hugepages>\n    <enabled>true</enabled>\n  </transparent_hugepages>\n</host>\n----", 
          "$ref": "#/definitions/TransparentHugePages"
        }, 
        "address": {
          "type": "string", 
          "description": "The host address (FQDN/IP)."
        }, 
        "override_iptables": {
          "type": "boolean", 
          "description": "Specifies whether we should override firewall definitions.\nThis applies only when the host is installed or re-installed."
        }, 
        "device_passthrough": {
          "description": "Specifies whether host device passthrough is enabled on this host.", 
          "$ref": "#/definitions/HostDevicePassthrough"
        }, 
        "ssh": {
          "description": "The SSH definitions.", 
          "$ref": "#/definitions/Ssh"
        }, 
        "numa_supported": {
          "type": "boolean", 
          "description": "Specifies whether _non uniform memory access_ (NUMA) is supported on this host."
        }, 
        "libvirt_version": {
          "description": "The host libvirt version.\nFor more information on libvirt please go to https://libvirt.org[libvirt].", 
          "$ref": "#/definitions/Version"
        }, 
        "power_management": {
          "description": "The host power management definitions.", 
          "$ref": "#/definitions/PowerManagement"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "max_scheduling_memory": {
          "type": "integer", 
          "description": "The max scheduling memory on this host in bytes.", 
          "format": "int32"
        }, 
        "summary": {
          "description": "The virtual machine summary - how many are active, migrating and total.", 
          "$ref": "#/definitions/VmSummary"
        }, 
        "auto_numa_status": {
          "enum": [
            "disable", 
            "enable", 
            "unknown"
          ], 
          "type": "string", 
          "description": "The host auto _non uniform memory access_ (NUMA) status."
        }, 
        "os": {
          "description": "The operating system on this host.", 
          "$ref": "#/definitions/OperatingSystem"
        }, 
        "cpu": {
          "description": "The CPU type of this host.", 
          "$ref": "#/definitions/Cpu"
        }, 
        "kdump_status": {
          "enum": [
            "disabled", 
            "enabled", 
            "unknown"
          ], 
          "type": "string", 
          "description": "The host KDUMP status.\nKDUMP happens when the host kernel has crashed and it is now going through memory dumping."
        }, 
        "root_password": {
          "type": "string", 
          "description": "When creating a new host, a root password is required if the password authentication method is chosen,\nbut this is not subsequently included in the representation."
        }
      }
    }, 
    "Ssh": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "authentication_method": {
          "enum": [
            "password", 
            "publickey"
          ], 
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "user": {
          "$ref": "#/definitions/User"
        }, 
        "fingerprint": {
          "type": "string"
        }, 
        "port": {
          "type": "integer", 
          "format": "int32"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "Cdrom": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "file": {
          "$ref": "#/definitions/File"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }
      }
    }, 
    "ExternalProvider": {
      "type": "object", 
      "description": "Represents an external provider.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "requires_authentication": {
          "type": "boolean", 
          "description": "Defines whether provider authentication is required or not.\n\nIf authentication is required, both `username` and `password` attributes will be used during authentication."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "url": {
          "type": "string", 
          "description": "Defines URL address of the external provider."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "username": {
          "type": "string", 
          "description": "Defines user name to be used during authentication process."
        }, 
        "authentication_url": {
          "type": "string", 
          "description": "Defines the external provider authentication URL address."
        }, 
        "password": {
          "type": "string", 
          "description": "Defines password for the user during the authentication process."
        }, 
        "properties": {
          "items": {
            "$ref": "#/definitions/Property"
          }, 
          "type": "array", 
          "description": "Array of provider name/value properties."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "TemplateVersion": {
      "type": "object", 
      "description": "Type representing a version of a virtual machine template.", 
      "properties": {
        "version_name": {
          "type": "string", 
          "description": "The name of this version."
        }, 
        "version_number": {
          "type": "integer", 
          "description": "The index of this version in the versions hierarchy of the template.\nThe index 1 represents the original version of a template that is also called base version.", 
          "format": "int32"
        }
      }
    }, 
    "Icon": {
      "type": "object", 
      "description": "Icon of virtual machine or template.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "media_type": {
          "type": "string", 
          "description": "Format of icon file.\n\nOne of:\n\n* `image/jpeg`\n* `image/png`\n* `image/gif`"
        }, 
        "data": {
          "type": "string", 
          "description": "Base64 encode content of the icon file."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "SshPublicKey": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "content": {
          "type": "string"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "user": {
          "$ref": "#/definitions/User"
        }
      }
    }, 
    "ExternalVmImport": {
      "type": "object", 
      "description": "Describes the parameters for the virtual machine import operation from an external system.", 
      "properties": {
        "username": {
          "type": "string", 
          "description": "The username to authenticate against the external hypervisor system."
        }, 
        "storage_domain": {
          "description": "Specifies the target storage domain for converted disks.", 
          "$ref": "#/definitions/StorageDomain"
        }, 
        "name": {
          "type": "string", 
          "description": "The name of the virtual machine to be imported, as is defined within the external system."
        }, 
        "url": {
          "type": "string", 
          "description": "The URL to be passed to the `virt-v2v` tool for conversion.\n\nExample:\n\n[source]\n----\nvpx://wmware_user@vcenter-host/DataCenter/Cluster/esxi-host?no_verify=1\n----\n\nMore examples can be found at http://libguestfs.org/virt-v2v.1.html."
        }, 
        "cpu_profile": {
          "description": "Optional. Specifies the CPU profile of the resulting virtual machine.", 
          "$ref": "#/definitions/CpuProfile"
        }, 
        "vm": {
          "description": "The virtual machine entity used to specify a name for the newly created virtual machine.\n\nIf a name is not specified, the source virtual machine name will be used.", 
          "$ref": "#/definitions/Vm"
        }, 
        "quota": {
          "description": "Optional. Specifies the quota that will be applied to the resulting virtual machine.", 
          "$ref": "#/definitions/Quota"
        }, 
        "cluster": {
          "description": "Specifies the target cluster for the resulting virtual machine.", 
          "$ref": "#/definitions/Cluster"
        }, 
        "host": {
          "description": "Optional. Specifies the host (using host's ID) to be used for the conversion process.\nIf not specified, one is selected automatically.", 
          "$ref": "#/definitions/Host"
        }, 
        "drivers_iso": {
          "description": "Optional. The name of the ISO containing drivers that can be used during the `virt-v2v` conversion process.", 
          "$ref": "#/definitions/File"
        }, 
        "sparse": {
          "type": "boolean", 
          "description": "Specifies the disk allocation policy of the resulting virtual machine: `true` for sparse, `false` for preallocated."
        }, 
        "provider": {
          "enum": [
            "kvm", 
            "vmware", 
            "xen"
          ], 
          "type": "string", 
          "description": "The type of external virtual machine provider."
        }, 
        "password": {
          "type": "string", 
          "description": "The password to authenticate against the external hypervisor system."
        }
      }
    }, 
    "SkipIfConnectivityBroken": {
      "type": "object", 
      "properties": {
        "threshold": {
          "type": "integer", 
          "description": "Threshold for connectivity testing.\nIf at least the threshold percentage of hosts in the cluster\nlost connectivity then fencing will not take place.", 
          "format": "int32"
        }, 
        "enabled": {
          "type": "boolean", 
          "description": "If enabled, we will not fence a host\nin case more than a configurable percentage\nof hosts in the cluster lost connectivity as well.\nThis comes to prevent fencing _storm_ in cases\nwhere there is a global networking issue in the\ncluster."
        }
      }
    }, 
    "GlusterBrickAdvancedDetails": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "fs_name": {
          "type": "string"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "pid": {
          "type": "integer", 
          "format": "int32"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "device": {
          "type": "string"
        }, 
        "mnt_options": {
          "type": "string"
        }, 
        "memory_pools": {
          "items": {
            "$ref": "#/definitions/GlusterMemoryPool"
          }, 
          "type": "array"
        }, 
        "gluster_clients": {
          "items": {
            "$ref": "#/definitions/GlusterClient"
          }, 
          "type": "array"
        }, 
        "port": {
          "type": "integer", 
          "format": "int32"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "PowerManagement": {
      "type": "object", 
      "properties": {
        "status": {
          "enum": [
            "off", 
            "on", 
            "unknown"
          ], 
          "type": "string", 
          "description": "Determines the power status of the host."
        }, 
        "username": {
          "type": "string", 
          "description": "A valid user name for power management."
        }, 
        "kdump_detection": {
          "type": "boolean", 
          "description": "Toggles whether to determine if kdump is running on the host before it is shut down.\nWhen set to `true`, the host will not shut down during a kdump process.\nThis is set to `true` when a host has power management enabled, unless disabled by the user."
        }, 
        "automatic_pm_enabled": {
          "type": "boolean", 
          "description": "Toggles the automated power control of the host in order to save energy.\nWhen set to true, the host will be automatically powered down if the cluster's load is low,\nand powered on again when required. This is set to true when a host is created, unless disabled by the user."
        }, 
        "enabled": {
          "type": "boolean", 
          "description": "Indicates whether power management configuration is enabled or disabled."
        }, 
        "pm_proxies": {
          "items": {
            "$ref": "#/definitions/PmProxy"
          }, 
          "type": "array", 
          "description": "Determines the power management proxy."
        }, 
        "agents": {
          "items": {
            "$ref": "#/definitions/Agent"
          }, 
          "type": "array", 
          "description": "Specifies fence agent options when multiple fences are used.\n\nUse the order sub-element to prioritize the fence agents. Agents are run sequentially according to their\norder until the fence action succeeds. When two or more fence agents have the same order,\nthey are run concurrently. Other sub-elements include type, ip, user, password, and options."
        }, 
        "address": {
          "type": "string", 
          "description": "The host name or IP address of the host."
        }, 
        "password": {
          "type": "string", 
          "description": "A valid, robust password for power management."
        }, 
        "type": {
          "type": "string", 
          "description": "Fencing device code.\n\nA list of valid fencing device codes are available in the `capabilities` collection."
        }, 
        "options": {
          "items": {
            "$ref": "#/definitions/Option"
          }, 
          "type": "array", 
          "description": "Fencing options for the selected type= specified with the option name=\"\" and value=\"\" strings."
        }
      }
    }, 
    "HostedEngine": {
      "type": "object", 
      "properties": {
        "active": {
          "type": "boolean"
        }, 
        "local_maintenance": {
          "type": "boolean"
        }, 
        "configured": {
          "type": "boolean"
        }, 
        "score": {
          "type": "integer", 
          "format": "int32"
        }, 
        "global_maintenance": {
          "type": "boolean"
        }
      }
    }, 
    "NfsProfileDetail": {
      "type": "object", 
      "properties": {
        "profile_details": {
          "items": {
            "$ref": "#/definitions/ProfileDetail"
          }, 
          "type": "array"
        }, 
        "nfs_server_ip": {
          "type": "string"
        }
      }
    }, 
    "NetworkFilter": {
      "type": "object", 
      "description": "Network filters filter packets sent to and from the virtual machine's NIC according to defined rules.\n\nThere are several types of network filters supported based on libvirt.\nFor more details about the different network filters see https://libvirt.org/firewall.html[here].\n\nIn addition to libvirt's network filters, there are two additional network filters:\nThe first is called `vdsm-no-mac-spoofing` and is composed of `no-mac-spoofing` and `no-arp-mac-spoofing`.\nThe second is called `ovirt-no-filter` and is used when no network filter is to be defined for the virtual machine's NIC.\nThe `ovirt-no-filter` network filter is only used for internal implementation, and\ndoes not exist on the NICs.\n\nThis is a example of the XML representation:\n\n[source,xml]\n----\n<network_filter id=\"00000019-0019-0019-0019-00000000026c\">\n  <name>example-filter</name>\n  <version>\n    <major>4</major>\n    <minor>0</minor>\n    <build>-1</build>\n    <revision>-1</revision>\n  </version>\n</network_filter>\n----\n\nIf any part of the version is not present, it is represented by -1.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "version": {
          "description": "The minimum supported version of a specific NetworkFilter. This is the version that the NetworkFilter was first introduced in.", 
          "$ref": "#/definitions/Version"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "AffinityRule": {
      "type": "object", 
      "description": "Generic rule definition for affinity group. Each supported resource type (virtual machine, host) is controlled\nby a separate rule. This allows expressing of rules like: no affinity between defined virtual machines, but hard\naffinity between defined virtual machines and virtual hosts.", 
      "properties": {
        "positive": {
          "type": "boolean", 
          "description": "Specifies whether the affinity group applies positive affinity or negative affinity to the resources\nthat are controlled by this rule. This argument is mandatory if the rule is enabled and is ignored\nwhen the rule is disabled."
        }, 
        "enforcing": {
          "type": "boolean", 
          "description": "Specifies whether the affinity group uses hard or soft enforcement of the affinity applied to the resources\nthat are controlled by this rule. This argument is mandatory if the rule is enabled and is ignored\nwhen the rule is disabled."
        }, 
        "enabled": {
          "type": "boolean", 
          "description": "Specifies whether the affinity group uses this rule or not.\nThis attribute is optional during creation and is considered to be `true` when it is not provided.\nIn case this attribute is not provided to the update operation, it is considered to be `true` if\nAffinityGroup `positive` attribute is set as well.\nThe backend `enabled` value will be preserved when both `enabled` and `positive` attributes are missing."
        }
      }
    }, 
    "ApiSummaryItem": {
      "type": "object", 
      "description": "This type contains an item of the API summary. Each item contains the total and active number of some kind of\nobject.", 
      "properties": {
        "active": {
          "type": "integer", 
          "description": "The total number of active objects.", 
          "format": "int32"
        }, 
        "total": {
          "type": "integer", 
          "description": "The total number of objects.", 
          "format": "int32"
        }
      }
    }, 
    "BaseDevice": {
      "type": "object", 
      "description": "A device wraps links to potential parents of a device.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "Core": {
      "type": "object", 
      "properties": {
        "index": {
          "type": "integer", 
          "format": "int32"
        }, 
        "socket": {
          "type": "integer", 
          "format": "int32"
        }
      }
    }, 
    "Agent": {
      "type": "object", 
      "description": "Type representing a fence agent.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "username": {
          "type": "string", 
          "description": "Fence agent user name."
        }, 
        "encrypt_options": {
          "type": "boolean", 
          "description": "Specifies whether the options should be encrypted."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "options": {
          "items": {
            "$ref": "#/definitions/Option"
          }, 
          "type": "array", 
          "description": "Fence agent options (comma-delimited list of\nkey-value pairs)."
        }, 
        "order": {
          "type": "integer", 
          "description": "The order of this agent if used with other agents.", 
          "format": "int32"
        }, 
        "concurrent": {
          "type": "boolean", 
          "description": "Specifies whether the agent should be used concurrently\nor sequentially."
        }, 
        "address": {
          "type": "string", 
          "description": "Fence agent address."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "password": {
          "type": "string", 
          "description": "Fence agent password."
        }, 
        "type": {
          "type": "string", 
          "description": "Fence agent type."
        }, 
        "port": {
          "type": "integer", 
          "description": "Fence agent port.", 
          "format": "int32"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "Hook": {
      "type": "object", 
      "description": "Represents a hook.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "event_name": {
          "type": "string", 
          "description": "Name of the event to execute the hook on."
        }, 
        "md5": {
          "type": "string", 
          "description": "Checksum of the hook."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "StorageDomain": {
      "type": "object", 
      "description": "Storage domain.\n\nAn XML representation of a NFS storage domain with identifier `123`:\n\n[source,xml]\n----\n<storage_domain href=\"/ovirt-engine/api/storagedomains/123\" id=\"123\">\n  <name>mydata</name>\n  <description>My data</description>\n  <available>38654705664</available>\n  <committed>1073741824</committed>\n  <critical_space_action_blocker>5</critical_space_action_blocker>\n  <external_status>ok</external_status>\n  <master>true</master>\n  <storage>\n    <address>mynfs.example.com</address>\n    <nfs_version>v3</nfs_version>\n    <path>/exports/mydata</path>\n    <type>nfs</type>\n  </storage>\n  <storage_format>v3</storage_format>\n  <type>data</type>\n  <used>13958643712</used>\n  <warning_low_space_indicator>10</warning_low_space_indicator>\n  <wipe_after_delete>false</wipe_after_delete>\n  <data_centers>\n    <data_center href=\"/ovirt-engine/api/datacenters/456\" id=\"456\"/>\n  </data_centers>\n</storage_domain>\n----", 
      "properties": {
        "available": {
          "type": "integer", 
          "format": "int32"
        }, 
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "supports_discard_zeroes_data": {
          "type": "boolean", 
          "description": "Indicates whether a block storage domain supports the property that\ndiscard zeroes the data.\nA <<types/storage_domain,storage domain>> only supports the property that\ndiscard zeroes the data if all of the\n<<types/logical_unit, logical unit>>s that it is built from support it;\nthat is, if each logical unit's `discard_zeroes_data` value is true.\nThis is one of the conditions necessary for a virtual disk in this\nstorage domain to have both `wipe_after_delete` and `pass_discard` attributes enabled.\nSince the engine cannot check if the underlying block device supports\nthe property that discard zeroes the data for file storage domains,\nthis attribute will not be reported for them at all."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "warning_low_space_indicator": {
          "type": "integer", 
          "format": "int32"
        }, 
        "wipe_after_delete": {
          "type": "boolean", 
          "description": "Serves as the default value of `wipe_after_delete` for <<types/disk, disk>>s on this\n<<types/storage_domain, storage domain>>.\n\nThat is, newly created disks will get their `wipe_after_delete` value from their storage domains by default.\nNote that the configuration value `SANWipeAfterDelete` serves as the default value of block storage domains'\n`wipe_after_delete` value."
        }, 
        "used": {
          "type": "integer", 
          "format": "int32"
        }, 
        "discard_after_delete": {
          "type": "boolean", 
          "description": "Indicates whether <<types/disk, disk>>s' blocks on block <<types/storage_domain, storage domain>>s will be\ndiscarded right before they are deleted.\n\nIf true, and a disk on this storage domain has its `wipe_after_delete` value enabled, then when the disk is\ndeleted:\n\n. It is first wiped.\n. Then its blocks are discarded.\n. Finally it is deleted.\n\nNote that:\n\n* Discard after delete will always be `false` for non block storage types.\n\n* Discard after delete can be set to `true` only if the storage domain\n<<types/storage_domain/attributes/supports_discard, supports discard>>."
        }, 
        "committed": {
          "type": "integer", 
          "format": "int32"
        }, 
        "import": {
          "type": "boolean"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "external_status": {
          "enum": [
            "error", 
            "failure", 
            "info", 
            "ok", 
            "warning"
          ], 
          "type": "string"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "critical_space_action_blocker": {
          "type": "integer", 
          "format": "int32"
        }, 
        "storage": {
          "$ref": "#/definitions/HostStorage"
        }, 
        "status": {
          "enum": [
            "activating", 
            "active", 
            "detaching", 
            "inactive", 
            "locked", 
            "maintenance", 
            "mixed", 
            "preparing_for_maintenance", 
            "unattached", 
            "unknown"
          ], 
          "type": "string"
        }, 
        "master": {
          "type": "boolean"
        }, 
        "type": {
          "enum": [
            "data", 
            "export", 
            "image", 
            "iso", 
            "volume"
          ], 
          "type": "string"
        }, 
        "storage_format": {
          "enum": [
            "v1", 
            "v2", 
            "v3", 
            "v4"
          ], 
          "type": "string"
        }, 
        "supports_discard": {
          "type": "boolean", 
          "description": "Indicates whether a block storage domain supports discard operations.\nA <<types/storage_domain,storage domain>> only supports discard\nif all of the <<types/logical_unit, logical unit>>s that it is built\nfrom support discard; that is, if each logical unit's `discard_max_size` value\nis greater than 0.\nThis is one of the conditions necessary for a virtual disk in this\nstorage domain to have its `pass_discard` attribute enabled.\nSince the engine cannot check if the underlying block device supports\ndiscard for file storage domains, this attribute will not be reported\nfor them at all."
        }
      }
    }, 
    "Tag": {
      "type": "object", 
      "description": "Represents a tag in the system.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "Spm": {
      "type": "object", 
      "properties": {
        "priority": {
          "type": "integer", 
          "format": "int32"
        }, 
        "status": {
          "enum": [
            "contending", 
            "none", 
            "spm"
          ], 
          "type": "string"
        }
      }
    }, 
    "Statistic": {
      "type": "object", 
      "description": "A generic type used for all kinds of statistics.\n\nStatistic contains the statistics values for various entities.\nThe following object contain statistics:\n\n* Disk\n* Host\n* HostNic\n* NumaNode\n* Nic\n* Vm\n* GlusterBrick\n* Step\n* GlusterVolume\n\nAn example of a XML representation:\n\n[source,xml]\n----\n<statistics>\n  <statistic id=\"1234\" href=\"/ovirt-engine/api/hosts/1234/nics/1234/statistics/1234\">\n    <name>data.current.rx</name>\n    <description>Receive data rate</description>\n    <values type=\"DECIMAL\">\n      <value>\n        <datum>0</datum>\n      </value>\n    </values>\n    <type>GAUGE</type>\n    <unit>BYTES_PER_SECOND</unit>\n    <host_nic id=\"1234\" href=\"/ovirt-engine/api/hosts/1234/nics/1234\"/>\n  </statistic>\n  ...\n</statistics>\n----\n\nNOTE: This statistics sub-collection is read-only.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "kind": {
          "enum": [
            "counter", 
            "gauge"
          ], 
          "type": "string", 
          "description": "The type of statistic measures."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "values": {
          "items": {
            "$ref": "#/definitions/Value"
          }, 
          "type": "array", 
          "description": "A data set that contains `datum`."
        }, 
        "type": {
          "enum": [
            "decimal", 
            "integer", 
            "string"
          ], 
          "type": "string", 
          "description": "The data type for the statistical values that follow."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "unit": {
          "enum": [
            "bits_per_second", 
            "bytes", 
            "bytes_per_second", 
            "count_per_second", 
            "none", 
            "percent", 
            "seconds"
          ], 
          "type": "string", 
          "description": "The unit or rate to measure of the statistical values."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "Disk": {
      "type": "object", 
      "description": "Represents a virtual disk device.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "logical_name": {
          "type": "string"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "format": {
          "enum": [
            "cow", 
            "raw"
          ], 
          "type": "string", 
          "description": "The underlying storage format."
        }, 
        "wipe_after_delete": {
          "type": "boolean", 
          "description": "Indicates if the disk's blocks will be read back as zeros after it is deleted:\n\n- On block storage, the disk will be zeroed and only then deleted.\n\n- On file storage, since the file system already guarantees that previously removed blocks are read back as\nzeros, the disk will be deleted immediately."
        }, 
        "propagate_errors": {
          "type": "boolean", 
          "description": "Indicates if disk errors should cause virtual machine to be paused or if disk errors should be\npropagated to the the guest operating system instead."
        }, 
        "lun_storage": {
          "$ref": "#/definitions/HostStorage"
        }, 
        "sgio": {
          "enum": [
            "filtered", 
            "unfiltered"
          ], 
          "type": "string"
        }, 
        "qcow_version": {
          "enum": [
            "qcow2_v2", 
            "qcow2_v3"
          ], 
          "type": "string", 
          "description": "The underlying QCOW version of a QCOW volume.\nThe QCOW version specifies to the qemu which qemu version the volume supports.\nThis field can be updated using the update API and will be reported only for QCOW volumes.\nIt is determined by the version of the storage domain that the disk is created on.\nStorage domains with a version lower than V4 support QCOW2 volumes. V4 storage domains also support QCOW2v3.\nFor more information about features of the different QCOW versions, see http://wiki.qemu.org/Features/Qcow3[here]."
        }, 
        "interface": {
          "enum": [
            "ide", 
            "spapr_vscsi", 
            "virtio", 
            "virtio_scsi"
          ], 
          "type": "string", 
          "description": "The type of interface driver used to connect the disk device to the virtual machine.\n\nIMPORTANT: This attribute only makes sense for disks that are actually connected to virtual machines, and in\nversion 4 of the API it has been moved to the <<types/disk_attachment, DiskAttachment>> type. It is preserved\nhere only for backwards compatibility, and it will be removed in the future."
        }, 
        "active": {
          "type": "boolean", 
          "description": "Indicates if the disk is visible to the virtual machine.\n\nIMPORTANT: When adding a disk attachment to a virtual machine, if the server accepts requests that do not contain\nthis attribute the result is undefined. In some cases the disk will be automatically activated\nand in other cases it will not. To avoid issues it is strongly recommended to always include the this attribute\nwith the desired value."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "actual_size": {
          "type": "integer", 
          "description": "The actual size of the disk, in bytes.\n\nThe actual size is the number of bytes actually used by the disk. It will be smaller than the provisioned\nsize for disks that use the `cow` format.", 
          "format": "int32"
        }, 
        "read_only": {
          "type": "boolean", 
          "description": "Indicates if the disk is in read-only mode.\n\nSince version 4.0 this attribute is not shown in the API and was moved to <<types/disk_attachment,DiskAttachment>>.\n\nSince version 4.1.2 of {engine-name} this attribute is deprecated, and it will be removed in the future.\nIn order to attach a disk in read only mode use the `read_only` attribute of the <<types/disk_attachment,\nDiskAttachment>> type. For example:\n\n....\nPOST /ovirt-engine/api/vms/123/diskattachments\n....\n\n[source,xml]\n----\n<disk_attachment>\n  <read_only>true</read_only>\n  ...\n</disk_attachment>\n----"
        }, 
        "uses_scsi_reservation": {
          "type": "boolean"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "provisioned_size": {
          "type": "integer", 
          "description": "The virtual size of the disk, in bytes.\n\nThis attribute is mandatory when creating a new disk.", 
          "format": "int32"
        }, 
        "image_id": {
          "type": "string"
        }, 
        "bootable": {
          "type": "boolean", 
          "description": "Indicates if the disk is marked as bootable.\n\nIMPORTANT: This attribute only makes sense for disks that are actually connected to virtual machines, and in\nversion 4 of the API it has been moved to the <<types/disk_attachment, DiskAttachment>> type. It is preserved\nhere only for backwards compatibility, and it will be removed in the future."
        }, 
        "initial_size": {
          "type": "integer", 
          "description": "The initial size of a sparse image disk created on block storage, in bytes.\n\nThe initial size is the number of bytes a sparse disk is initially allocated with when created on block storage.\nThe initial size will be smaller than the provisioned size. If not specified the default initial size used by the\nsystem will be allocated.", 
          "format": "int32"
        }, 
        "storage_type": {
          "enum": [
            "cinder", 
            "image", 
            "lun"
          ], 
          "type": "string"
        }, 
        "alias": {
          "type": "string"
        }, 
        "status": {
          "enum": [
            "illegal", 
            "locked", 
            "ok"
          ], 
          "type": "string", 
          "description": "The status of the disk device."
        }, 
        "sparse": {
          "type": "boolean", 
          "description": "Indicates if the physical storage for the disk should not be preallocated."
        }, 
        "shareable": {
          "type": "boolean", 
          "description": "Indicates if the disk can be attached to multiple virtual machines.\n\nIMPORTANT: When a disk is attached to multiple virtual machines it is the responsibility of the guest\noperating systems of those virtual machines to coordinate access to it, to avoid corruption of the data, for\nexample using a shared file system like https://www.gluster.org[GlusterFS] or\nhttp://www.sourceware.org/cluster/gfs[GFS]."
        }
      }
    }, 
    "NicConfiguration": {
      "type": "object", 
      "description": "The type describes the configuration of a virtual network interface.", 
      "properties": {
        "name": {
          "type": "string", 
          "description": "Network interface name."
        }, 
        "ipv6_boot_protocol": {
          "enum": [
            "autoconf", 
            "dhcp", 
            "none", 
            "static"
          ], 
          "type": "string", 
          "description": "IPv6 boot protocol."
        }, 
        "ip": {
          "description": "IPv4 address details.", 
          "$ref": "#/definitions/Ip"
        }, 
        "boot_protocol": {
          "enum": [
            "autoconf", 
            "dhcp", 
            "none", 
            "static"
          ], 
          "type": "string", 
          "description": "IPv4 boot protocol."
        }, 
        "ipv6": {
          "description": "IPv6 address details.", 
          "$ref": "#/definitions/Ip"
        }, 
        "on_boot": {
          "type": "boolean", 
          "description": "Specifies whether the network interface should be activated on the virtual machine guest operating system boot."
        }
      }
    }, 
    "Event": {
      "type": "object", 
      "description": "Type representing an event.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "origin": {
          "type": "string", 
          "description": "Free text identifying the origin of the event."
        }, 
        "custom_id": {
          "type": "integer", 
          "description": "A custom event identifier.", 
          "format": "int32"
        }, 
        "code": {
          "type": "integer", 
          "description": "The event code.", 
          "format": "int32"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "custom_data": {
          "type": "string", 
          "description": "Free text representing custom event data."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "correlation_id": {
          "type": "string", 
          "description": "The event correlation identifier. Used in order to correlate\nseveral events together."
        }, 
        "flood_rate": {
          "type": "integer", 
          "description": "Defines the flood rate.\nThis prevents flooding in case an event appeared\nmore than once in the defined rate.\nDefaults is 30 seconds.", 
          "format": "int32"
        }, 
        "time": {
          "type": "string", 
          "description": "The event time.", 
          "format": "epoch"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "severity": {
          "enum": [
            "alert", 
            "error", 
            "normal", 
            "warning"
          ], 
          "type": "string", 
          "description": "The event severity."
        }
      }
    }, 
    "CpuTopology": {
      "type": "object", 
      "properties": {
        "cores": {
          "type": "integer", 
          "format": "int32"
        }, 
        "threads": {
          "type": "integer", 
          "format": "int32"
        }, 
        "sockets": {
          "type": "integer", 
          "format": "int32"
        }
      }
    }, 
    "VirtioScsi": {
      "type": "object", 
      "description": "Type representing the support of virtio-SCSI.\nIf it supported we use virtio driver for SCSI guest device.", 
      "properties": {
        "enabled": {
          "type": "boolean", 
          "description": "Enable Virtio SCSI support."
        }
      }
    }, 
    "DiskSnapshot": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "logical_name": {
          "type": "string"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "format": {
          "enum": [
            "cow", 
            "raw"
          ], 
          "type": "string", 
          "description": "The underlying storage format."
        }, 
        "wipe_after_delete": {
          "type": "boolean", 
          "description": "Indicates if the disk's blocks will be read back as zeros after it is deleted:\n\n- On block storage, the disk will be zeroed and only then deleted.\n\n- On file storage, since the file system already guarantees that previously removed blocks are read back as\nzeros, the disk will be deleted immediately."
        }, 
        "propagate_errors": {
          "type": "boolean", 
          "description": "Indicates if disk errors should cause virtual machine to be paused or if disk errors should be\npropagated to the the guest operating system instead."
        }, 
        "lun_storage": {
          "$ref": "#/definitions/HostStorage"
        }, 
        "sgio": {
          "enum": [
            "filtered", 
            "unfiltered"
          ], 
          "type": "string"
        }, 
        "qcow_version": {
          "enum": [
            "qcow2_v2", 
            "qcow2_v3"
          ], 
          "type": "string", 
          "description": "The underlying QCOW version of a QCOW volume.\nThe QCOW version specifies to the qemu which qemu version the volume supports.\nThis field can be updated using the update API and will be reported only for QCOW volumes.\nIt is determined by the version of the storage domain that the disk is created on.\nStorage domains with a version lower than V4 support QCOW2 volumes. V4 storage domains also support QCOW2v3.\nFor more information about features of the different QCOW versions, see http://wiki.qemu.org/Features/Qcow3[here]."
        }, 
        "interface": {
          "enum": [
            "ide", 
            "spapr_vscsi", 
            "virtio", 
            "virtio_scsi"
          ], 
          "type": "string", 
          "description": "The type of interface driver used to connect the disk device to the virtual machine.\n\nIMPORTANT: This attribute only makes sense for disks that are actually connected to virtual machines, and in\nversion 4 of the API it has been moved to the <<types/disk_attachment, DiskAttachment>> type. It is preserved\nhere only for backwards compatibility, and it will be removed in the future."
        }, 
        "active": {
          "type": "boolean", 
          "description": "Indicates if the disk is visible to the virtual machine.\n\nIMPORTANT: When adding a disk attachment to a virtual machine, if the server accepts requests that do not contain\nthis attribute the result is undefined. In some cases the disk will be automatically activated\nand in other cases it will not. To avoid issues it is strongly recommended to always include the this attribute\nwith the desired value."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "actual_size": {
          "type": "integer", 
          "description": "The actual size of the disk, in bytes.\n\nThe actual size is the number of bytes actually used by the disk. It will be smaller than the provisioned\nsize for disks that use the `cow` format.", 
          "format": "int32"
        }, 
        "read_only": {
          "type": "boolean", 
          "description": "Indicates if the disk is in read-only mode.\n\nSince version 4.0 this attribute is not shown in the API and was moved to <<types/disk_attachment,DiskAttachment>>.\n\nSince version 4.1.2 of {engine-name} this attribute is deprecated, and it will be removed in the future.\nIn order to attach a disk in read only mode use the `read_only` attribute of the <<types/disk_attachment,\nDiskAttachment>> type. For example:\n\n....\nPOST /ovirt-engine/api/vms/123/diskattachments\n....\n\n[source,xml]\n----\n<disk_attachment>\n  <read_only>true</read_only>\n  ...\n</disk_attachment>\n----"
        }, 
        "uses_scsi_reservation": {
          "type": "boolean"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "provisioned_size": {
          "type": "integer", 
          "description": "The virtual size of the disk, in bytes.\n\nThis attribute is mandatory when creating a new disk.", 
          "format": "int32"
        }, 
        "image_id": {
          "type": "string"
        }, 
        "bootable": {
          "type": "boolean", 
          "description": "Indicates if the disk is marked as bootable.\n\nIMPORTANT: This attribute only makes sense for disks that are actually connected to virtual machines, and in\nversion 4 of the API it has been moved to the <<types/disk_attachment, DiskAttachment>> type. It is preserved\nhere only for backwards compatibility, and it will be removed in the future."
        }, 
        "initial_size": {
          "type": "integer", 
          "description": "The initial size of a sparse image disk created on block storage, in bytes.\n\nThe initial size is the number of bytes a sparse disk is initially allocated with when created on block storage.\nThe initial size will be smaller than the provisioned size. If not specified the default initial size used by the\nsystem will be allocated.", 
          "format": "int32"
        }, 
        "storage_type": {
          "enum": [
            "cinder", 
            "image", 
            "lun"
          ], 
          "type": "string"
        }, 
        "alias": {
          "type": "string"
        }, 
        "status": {
          "enum": [
            "illegal", 
            "locked", 
            "ok"
          ], 
          "type": "string", 
          "description": "The status of the disk device."
        }, 
        "sparse": {
          "type": "boolean", 
          "description": "Indicates if the physical storage for the disk should not be preallocated."
        }, 
        "shareable": {
          "type": "boolean", 
          "description": "Indicates if the disk can be attached to multiple virtual machines.\n\nIMPORTANT: When a disk is attached to multiple virtual machines it is the responsibility of the guest\noperating systems of those virtual machines to coordinate access to it, to avoid corruption of the data, for\nexample using a shared file system like https://www.gluster.org[GlusterFS] or\nhttp://www.sourceware.org/cluster/gfs[GFS]."
        }
      }
    }, 
    "MigrationBandwidth": {
      "type": "object", 
      "description": "Defines the bandwidth used by migration.", 
      "properties": {
        "custom_value": {
          "type": "integer", 
          "description": "Custom bandwidth in Mbps. Will be applied only if the `assignmentMethod` attribute is `custom`.", 
          "format": "int32"
        }, 
        "assignment_method": {
          "enum": [
            "auto", 
            "custom", 
            "hypervisor_default"
          ], 
          "type": "string", 
          "description": "The method used to assign the bandwidth."
        }
      }
    }, 
    "BlockStatistic": {
      "type": "object", 
      "properties": {
        "statistics": {
          "items": {
            "$ref": "#/definitions/Statistic"
          }, 
          "type": "array"
        }
      }
    }, 
    "NetworkAttachment": {
      "type": "object", 
      "description": "Describes how a host connects to a network.\n\nAn XML representation of a network attachment on a host:\n\n[source,xml]\n----\n<network_attachment href=\"/ovirt-engine/api/hosts/123/nics/456/networkattachments/789\" id=\"789\">\n  <network href=\"/ovirt-engine/api/networks/234\" id=\"234\"/>\n  <host_nic href=\"/ovirt-engine/api/hosts/123/nics/123\" id=\"123\"/>\n  <in_sync>true</in_sync>\n  <ip_address_assignments>\n    <ip_address_assignment>\n      <assignment_method>static</assignment_method>\n      <ip>\n        <address>192.168.122.39</address>\n        <gateway>192.168.122.1</gateway>\n        <netmask>255.255.255.0</netmask>\n        <version>v4</version>\n      </ip>\n    </ip_address_assignment>\n  </ip_address_assignments>\n  <reported_configurations>\n    <reported_configuration>\n      <name>mtu</name>\n      <expected_value>1500</expected_value>\n      <actual_value>1500</actual_value>\n      <in_sync>true</in_sync>\n    </reported_configuration>\n    <reported_configuration>\n      <name>bridged</name>\n      <expected_value>true</expected_value>\n      <actual_value>true</actual_value>\n      <in_sync>true</in_sync>\n    </reported_configuration>\n    ...\n  </reported_configurations>\n</network_attachment>\n----\n\nThe network element, with either a `name` or an `id`, is required in order to attach a network\nto a network interface card (NIC).\n\nFor example, to attach a network to a host network interface card, send a request like this:\n\n[source]\n----\nPOST /ovirt-engine/api/hosts/123/nics/456/networkattachments\n----\n\nWith a request body like this:\n\n[source,xml]\n----\n<networkattachment>\n  <network id=\"234\"/>\n</networkattachment>\n----\n\nTo attach a network to a host, send a request like this:\n\n[source]\n----\nPOST /ovirt-engine/api/hosts/123/networkattachments\n----\n\nWith a request body like this:\n\n[source,xml]\n----\n<network_attachment>\n  <network id=\"234\"/>\n  <host_nic id=\"456\"/>\n</network_attachment>\n----\n\nThe `ip_address_assignments` and `properties` elements are updatable post-creation.\n\nFor example, to update a network attachment, send a request like this:\n\n[source]\n----\nPUT /ovirt-engine/api/hosts/123/nics/456/networkattachments/789\n----\n\nWith a request body like this:\n\n[source,xml]\n----\n<network_attachment>\n  <ip_address_assignments>\n    <ip_address_assignment>\n      <assignment_method>static</assignment_method>\n      <ip>\n        <address>7.1.1.1</address>\n        <gateway>7.1.1.2</gateway>\n        <netmask>255.255.255.0</netmask>\n        <version>v4</version>\n      </ip>\n    </ip_address_assignment>\n  </ip_address_assignments>\n</network_attachment>\n----\n\nTo detach a network from the network interface card send a request like this:\n\n[source]\n----\nDELETE /ovirt-engine/api/hosts/123/nics/456/networkattachments/789\n----\n\nIMPORTANT: Changes to network attachment configuration must be explicitly committed.\n\nAn XML representation of a network attachment's `properties` sub-collection:\n\n[source, xml]\n----\n<network_attachment>\n  <properties>\n    <property>\n      <name>bridge_opts</name>\n      <value>\n        forward_delay=1500 group_fwd_mask=0x0 multicast_snooping=1\n      </value>\n    </property>\n  </properties>\n  ...\n</network_attachment>\n----", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "reported_configurations": {
          "items": {
            "$ref": "#/definitions/ReportedConfiguration"
          }, 
          "type": "array", 
          "description": "A read-only list of configuration properties."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "dns_resolver_configuration": {
          "description": "DNS resolver configuration will be reported when retrieving the network attachment using GET.\nIt is optional when creating a new network attachment or updating an existing one.", 
          "$ref": "#/definitions/DnsResolverConfiguration"
        }, 
        "in_sync": {
          "type": "boolean"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "ip_address_assignments": {
          "items": {
            "$ref": "#/definitions/IpAddressAssignment"
          }, 
          "type": "array", 
          "description": "The IP configuration of the network."
        }, 
        "properties": {
          "items": {
            "$ref": "#/definitions/Property"
          }, 
          "type": "array", 
          "description": "Defines custom properties for the network configuration.\n\nBridge options have the set name of bridge_opts. Separate multiple entries with a whitespace character.\nThe following keys are valid for `bridge_opts`:\n\n|===\n|Name |Default value\n\n|`forward_delay` |`1500`\n|`gc_timer` |`3765`\n|`group_addr` |`1:80:c2:0:0:0`\n|`group_fwd_mask` |`0x0`\n|`hash_elasticity` |`4`\n|`hash_max` |`512`\n|`hello_time` |`200`\n|`hello_timer` |`70`\n|`max_age` |`2000`\n|`multicast_last_member_count` |`2`\n|`multicast_last_member_interval` |`100`\n|`multicast_membership_interval` |`26000`\n|`multicast_querier` |`0`\n|`multicast_querier_interval` |`25500`\n|`multicast_query_interval` |`13000`\n|`multicast_query_response_interval` |`1000`\n|`multicast_query_use_ifaddr` |`0`\n|`multicast_router` |`1`\n|`multicast_snooping` |`1`\n|`multicast_startup_query_count` |`2`\n|`multicast_startup_query_interval` |`3125`\n\n|==="
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "Bios": {
      "type": "object", 
      "properties": {
        "boot_menu": {
          "$ref": "#/definitions/BootMenu"
        }
      }
    }, 
    "KatelloErratum": {
      "type": "object", 
      "description": "Type representing a Katello erratum.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "title": {
          "type": "string", 
          "description": "The title of the Katello erratum."
        }, 
        "issued": {
          "type": "string", 
          "description": "The date when the Katello erratum was issued.", 
          "format": "epoch"
        }, 
        "solution": {
          "type": "string", 
          "description": "The solution for the issue described by the Katello erratum."
        }, 
        "summary": {
          "type": "string", 
          "description": "The summary of the Katello erratum."
        }, 
        "packages": {
          "items": {
            "$ref": "#/definitions/Package"
          }, 
          "type": "array", 
          "description": "The list of packages which solve the issue reported by the Katello erratum."
        }, 
        "type": {
          "type": "string", 
          "description": "The type of the Katello erratum.\n\nThe supported types are `bugfix`, `enhancement` or `security`."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "severity": {
          "type": "string", 
          "description": "The severity of the Katello erratum.\n\nThe supported severities are `moderate`, `important` or `critical`."
        }
      }
    }, 
    "Version": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "major": {
          "type": "integer", 
          "format": "int32"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "full_version": {
          "type": "string"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "build": {
          "type": "integer", 
          "format": "int32"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "minor": {
          "type": "integer", 
          "format": "int32"
        }, 
        "revision": {
          "type": "integer", 
          "format": "int32"
        }
      }
    }, 
    "DiskAttachment": {
      "type": "object", 
      "description": "Describes how a disk is attached to a virtual machine.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "logical_name": {
          "type": "string", 
          "description": "The logical name of the virtual machine's disk, as seen from inside the virtual machine.\n\nThe logical name of a disk is reported only when the guest agent is installed and running inside the virtual\nmachine.\n\nFor example, if the guest operating system is Linux and the disk is connected via a VirtIO interface, the\nlogical name will be reported as `/dev/vda`:\n\n[source,xml]\n----\n<disk_attachment>\n  ...\n  <logical_name>/dev/vda</logical_name>\n</disk_attachment>\n----\n\nIf the guest operating system is Windows, the logical name will be reported as `\\\\.\\PHYSICALDRIVE0`."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "bootable": {
          "type": "boolean", 
          "description": "Defines whether the disk is bootable."
        }, 
        "active": {
          "type": "boolean", 
          "description": "Defines whether the disk is active in the virtual machine it's attached to.\n\nA disk attached to a virtual machine in an active status is connected to the virtual machine at run time and\ncan be used."
        }, 
        "interface": {
          "enum": [
            "ide", 
            "spapr_vscsi", 
            "virtio", 
            "virtio_scsi"
          ], 
          "type": "string", 
          "description": "The type of interface driver used to connect the disk device to the virtual machine."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "ExternalHostGroup": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "operating_system_name": {
          "type": "string"
        }, 
        "architecture_name": {
          "type": "string"
        }, 
        "domain_name": {
          "type": "string"
        }, 
        "subnet_name": {
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "StorageConnection": {
      "type": "object", 
      "description": "Represents a storage server connection.\n\nExample XML representation:\n\n[source,xml]\n----\n<storage_connection id=\"123\">\n  <address>mynfs.example.com</address>\n  <type>nfs</type>\n  <path>/exports/mydata</path>\n</storage_connection>\n----", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "username": {
          "type": "string"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "portal": {
          "type": "string"
        }, 
        "mount_options": {
          "type": "string"
        }, 
        "address": {
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "path": {
          "type": "string"
        }, 
        "password": {
          "type": "string"
        }, 
        "nfs_version": {
          "enum": [
            "auto", 
            "v3", 
            "v4", 
            "v4_1", 
            "v4_2"
          ], 
          "type": "string"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "nfs_timeo": {
          "type": "integer", 
          "format": "int32"
        }, 
        "target": {
          "type": "string"
        }, 
        "nfs_retrans": {
          "type": "integer", 
          "format": "int32"
        }, 
        "port": {
          "type": "integer", 
          "format": "int32"
        }, 
        "vfs_type": {
          "type": "string"
        }, 
        "type": {
          "enum": [
            "cinder", 
            "fcp", 
            "glance", 
            "glusterfs", 
            "iscsi", 
            "localfs", 
            "nfs", 
            "posixfs"
          ], 
          "type": "string"
        }
      }
    }, 
    "AffinityGroup": {
      "type": "object", 
      "description": "An affinity group represents a group of virtual machines with a defined relationship.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "positive": {
          "type": "boolean", 
          "description": "Specifies whether the affinity group applies positive affinity or negative affinity to virtual machines that are\nmembers of that affinity group.\n\nWARNING: Please note that this attribute has been deprecated since version 4.1 of the engine,\nand will be removed in the future. Use the `vms_rule` attribute from now on."
        }, 
        "enforcing": {
          "type": "boolean", 
          "description": "Specifies whether the affinity group uses hard or soft enforcement of the affinity applied to virtual machines\nthat are members of that affinity group.\n\nWARNING: Please note that this attribute has been deprecated since version 4.1 of the engine,\nand will be removed in the future. Use the `vms_rule` attribute from now on."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "cluster": {
          "description": "A reference to the cluster to which the affinity group applies.", 
          "$ref": "#/definitions/Cluster"
        }, 
        "vms_rule": {
          "description": "Specifies the affinity rule applied to virtual machines that are members of this affinity group.", 
          "$ref": "#/definitions/AffinityRule"
        }, 
        "hosts_rule": {
          "description": "Specifies the affinity rule applied between virtual machines and hosts that are members of this affinity group.", 
          "$ref": "#/definitions/AffinityRule"
        }, 
        "hosts": {
          "items": {
            "$ref": "#/definitions/Host"
          }, 
          "type": "array", 
          "description": "A list of all hosts assigned to this affinity group."
        }, 
        "vms": {
          "items": {
            "$ref": "#/definitions/Vm"
          }, 
          "type": "array", 
          "description": "A list of all virtual machines assigned to this affinity group."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "Step": {
      "type": "object", 
      "description": "Represents a step, which is part of `job` execution.\nStep is used to describe and track a specific execution unit which is part of a wider sequence.\nSome steps support reporting their progress.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "status": {
          "enum": [
            "aborted", 
            "failed", 
            "finished", 
            "started", 
            "unknown"
          ], 
          "type": "string", 
          "description": "The status of the step."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "start_time": {
          "type": "string", 
          "description": "The start time of the step.", 
          "format": "epoch"
        }, 
        "number": {
          "type": "integer", 
          "description": "The order of the step in current hierarchy level.", 
          "format": "int32"
        }, 
        "external_type": {
          "enum": [
            "gluster", 
            "vdsm"
          ], 
          "type": "string", 
          "description": "The external system which is referenced by the step."
        }, 
        "end_time": {
          "type": "string", 
          "description": "The end time of the step.", 
          "format": "epoch"
        }, 
        "external": {
          "type": "boolean", 
          "description": "Indicates if the step is originated by an external system.\nExternal steps are managed externally, by the creator of the step."
        }, 
        "progress": {
          "type": "integer", 
          "description": "The step progress (if reported) in percentages.", 
          "format": "int32"
        }, 
        "type": {
          "enum": [
            "executing", 
            "finalizing", 
            "rebalancing_volume", 
            "removing_bricks", 
            "unknown", 
            "validating"
          ], 
          "type": "string", 
          "description": "The type of the step."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "Vendor": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "Option": {
      "type": "object", 
      "properties": {
        "type": {
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }, 
        "value": {
          "type": "string"
        }
      }
    }, 
    "Permission": {
      "type": "object", 
      "description": "Type represents a permission.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "GracePeriod": {
      "type": "object", 
      "properties": {
        "expiry": {
          "type": "integer", 
          "format": "int32"
        }
      }
    }, 
    "OpenStackImageProvider": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "requires_authentication": {
          "type": "boolean", 
          "description": "Defines whether provider authentication is required or not.\n\nIf authentication is required, both `username` and `password` attributes will be used during authentication."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "url": {
          "type": "string", 
          "description": "Defines URL address of the external provider."
        }, 
        "tenant_name": {
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "username": {
          "type": "string", 
          "description": "Defines user name to be used during authentication process."
        }, 
        "authentication_url": {
          "type": "string", 
          "description": "Defines the external provider authentication URL address."
        }, 
        "password": {
          "type": "string", 
          "description": "Defines password for the user during the authentication process."
        }, 
        "properties": {
          "items": {
            "$ref": "#/definitions/Property"
          }, 
          "type": "array", 
          "description": "Array of provider name/value properties."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "Package": {
      "type": "object", 
      "description": "Type representing a package.\n\nThis is an example of the package element:\n\n[source,xml]\n----\n<package>\n  <name>libipa_hbac-1.9.2-82.11.el6_4.i686</name>\n</package>\n----", 
      "properties": {
        "name": {
          "type": "string", 
          "description": "The name of the package."
        }
      }
    }, 
    "Method": {
      "type": "object", 
      "properties": {
        "id": {
          "enum": [
            "guest_agent"
          ], 
          "type": "string"
        }
      }
    }, 
    "Job": {
      "type": "object", 
      "description": "Represents a job, which monitors execution of a flow in the system.\nA job can contain multiple steps in a hierarchic structure.\nThe steps can be processed in parallel, depends on the implementation of the flow.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "status": {
          "enum": [
            "aborted", 
            "failed", 
            "finished", 
            "started", 
            "unknown"
          ], 
          "type": "string", 
          "description": "The status of the job."
        }, 
        "last_updated": {
          "type": "string", 
          "description": "The last update date of the job.", 
          "format": "epoch"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "start_time": {
          "type": "string", 
          "description": "The start time of the job.", 
          "format": "epoch"
        }, 
        "end_time": {
          "type": "string", 
          "description": "The end time of the job.", 
          "format": "epoch"
        }, 
        "external": {
          "type": "boolean", 
          "description": "Indicates if the job is originated by an external system.\nExternal jobs are managed externally, by the creator of the job."
        }, 
        "auto_cleared": {
          "type": "boolean", 
          "description": "Indicates if the job should be cleared automatically after it was completed by the system."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "DiskProfile": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "MemoryOverCommit": {
      "type": "object", 
      "properties": {
        "percent": {
          "type": "integer", 
          "format": "int32"
        }
      }
    }, 
    "Configuration": {
      "type": "object", 
      "properties": {
        "data": {
          "type": "string", 
          "description": "The document describing the virtual machine.\n\nExample of the OVF document:\n\n[source,xml]\n----\n<?xml version='1.0' encoding='UTF-8'?>\n<ovf:Envelope xmlns:ovf=\"http://schemas.dmtf.org/ovf/envelope/1/\"\n  xmlns:rasd=\"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_ResourceAllocationSettingData\"\n  xmlns:vssd=\"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_VirtualSystemSettingData\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  ovf:version=\"3.5.0.0\">\n  <References/>\n  <Section xsi:type=\"ovf:NetworkSection_Type\">\n    <Info>List of networks</Info>\n    <Network ovf:name=\"Network 1\"/>\n  </Section>\n  <Section xsi:type=\"ovf:DiskSection_Type\">\n    <Info>List of Virtual Disks</Info>\n  </Section>\n  <Content ovf:id=\"out\" xsi:type=\"ovf:VirtualSystem_Type\">\n    <CreationDate>2014/12/03 04:25:45</CreationDate>\n    <ExportDate>2015/02/09 14:12:24</ExportDate>\n    <DeleteProtected>false</DeleteProtected>\n    <SsoMethod>guest_agent</SsoMethod>\n    <IsSmartcardEnabled>false</IsSmartcardEnabled>\n    <TimeZone>Etc/GMT</TimeZone>\n    <default_boot_sequence>0</default_boot_sequence>\n    <Generation>1</Generation>\n    <VmType>1</VmType>\n    <MinAllocatedMem>1024</MinAllocatedMem>\n    <IsStateless>false</IsStateless>\n    <IsRunAndPause>false</IsRunAndPause>\n    <AutoStartup>false</AutoStartup>\n    <Priority>1</Priority>\n    <CreatedByUserId>fdfc627c-d875-11e0-90f0-83df133b58cc</CreatedByUserId>\n    <IsBootMenuEnabled>false</IsBootMenuEnabled>\n    <IsSpiceFileTransferEnabled>true</IsSpiceFileTransferEnabled>\n    <IsSpiceCopyPasteEnabled>true</IsSpiceCopyPasteEnabled>\n    <Name>VM_export</Name>\n    <TemplateId>00000000-0000-0000-0000-000000000000</TemplateId>\n    <TemplateName>Blank</TemplateName>\n    <IsInitilized>false</IsInitilized>\n    <Origin>3</Origin>\n    <DefaultDisplayType>1</DefaultDisplayType>\n    <TrustedService>false</TrustedService>\n    <OriginalTemplateId>00000000-0000-0000-0000-000000000000</OriginalTemplateId>\n    <OriginalTemplateName>Blank</OriginalTemplateName>\n    <UseLatestVersion>false</UseLatestVersion>\n    <Section ovf:id=\"70b4d9a7-4f73-4def-89ca-24fc5f60e01a\"\n      ovf:required=\"false\"\n      xsi:type=\"ovf:OperatingSystemSection_Type\">\n      <Info>Guest Operating System</Info>\n      <Description>other</Description>\n    </Section>\n    <Section xsi:type=\"ovf:VirtualHardwareSection_Type\">\n      <Info>1 CPU, 1024 Memory</Info>\n      <System>\n        <vssd:VirtualSystemType>ENGINE 3.5.0.0</vssd:VirtualSystemType>\n      </System>\n      <Item>\n        <rasd:Caption>1 virtual cpu</rasd:Caption>\n        <rasd:Description>Number of virtual CPU</rasd:Description>\n        <rasd:InstanceId>1</rasd:InstanceId>\n        <rasd:ResourceType>3</rasd:ResourceType>\n        <rasd:num_of_sockets>1</rasd:num_of_sockets>\n        <rasd:cpu_per_socket>1</rasd:cpu_per_socket>\n      </Item>\n      <Item>\n        <rasd:Caption>1024 MB of memory</rasd:Caption>\n        <rasd:Description>Memory Size</rasd:Description>\n        <rasd:InstanceId>2</rasd:InstanceId>\n        <rasd:ResourceType>4</rasd:ResourceType>\n        <rasd:AllocationUnits>MegaBytes</rasd:AllocationUnits>\n        <rasd:VirtualQuantity>1024</rasd:VirtualQuantity>\n      </Item>\n      <Item>\n        <rasd:Caption>USB Controller</rasd:Caption>\n        <rasd:InstanceId>3</rasd:InstanceId>\n        <rasd:ResourceType>23</rasd:ResourceType>\n        <rasd:UsbPolicy>DISABLED</rasd:UsbPolicy>\n      </Item>\n    </Section>\n  </Content>\n</ovf:Envelope>\n----"
        }, 
        "type": {
          "enum": [
            "ovf"
          ], 
          "type": "string"
        }
      }
    }, 
    "OpenStackNetwork": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "IscsiDetails": {
      "type": "object", 
      "properties": {
        "status": {
          "type": "string"
        }, 
        "username": {
          "type": "string"
        }, 
        "volume_group_id": {
          "type": "string"
        }, 
        "vendor_id": {
          "type": "string"
        }, 
        "portal": {
          "type": "string"
        }, 
        "address": {
          "type": "string"
        }, 
        "lun_mapping": {
          "type": "integer", 
          "format": "int32"
        }, 
        "serial": {
          "type": "string"
        }, 
        "password": {
          "type": "string"
        }, 
        "port": {
          "type": "integer", 
          "format": "int32"
        }, 
        "target": {
          "type": "string"
        }, 
        "paths": {
          "type": "integer", 
          "format": "int32"
        }, 
        "initiator": {
          "type": "string"
        }, 
        "product_id": {
          "type": "string"
        }, 
        "storage_domain_id": {
          "type": "string"
        }, 
        "disk_id": {
          "type": "string"
        }, 
        "size": {
          "type": "integer", 
          "format": "int32"
        }
      }
    }, 
    "ErrorHandling": {
      "type": "object", 
      "properties": {
        "on_error": {
          "enum": [
            "do_not_migrate", 
            "migrate", 
            "migrate_highly_available"
          ], 
          "type": "string"
        }
      }
    }, 
    "CpuProfile": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "GraphicsConsole": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "protocol": {
          "enum": [
            "spice", 
            "vnc"
          ], 
          "type": "string"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "address": {
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "tls_port": {
          "type": "integer", 
          "format": "int32"
        }, 
        "port": {
          "type": "integer", 
          "format": "int32"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "Identified": {
      "type": "object", 
      "description": "This interface is the base model for all types that represent objects with an identifier.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "OpenStackImage": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "Range": {
      "type": "object", 
      "properties": {
        "to": {
          "type": "string"
        }, 
        "from": {
          "type": "string"
        }
      }
    }, 
    "StorageDomainLease": {
      "type": "object", 
      "description": "Represents a lease residing on a storage domain.\n\nA lease is a http://www.ovirt.org/develop/developer-guide/vdsm/sanlock[Sanlock] resource residing on a special\nvolume on the storage domain, this Sanlock resource is used to provide storage base locking.", 
      "properties": {
        "storage_domain": {
          "description": "Reference to the storage domain on which the lock resides on.", 
          "$ref": "#/definitions/StorageDomain"
        }
      }
    }, 
    "Property": {
      "type": "object", 
      "properties": {
        "name": {
          "type": "string"
        }, 
        "value": {
          "type": "string"
        }
      }
    }, 
    "PmProxy": {
      "type": "object", 
      "properties": {
        "type": {
          "enum": [
            "cluster", 
            "dc", 
            "other_dc"
          ], 
          "type": "string"
        }
      }
    }, 
    "Cpu": {
      "type": "object", 
      "properties": {
        "name": {
          "type": "string"
        }, 
        "level": {
          "type": "integer", 
          "format": "int32"
        }, 
        "speed": {
          "type": "number", 
          "format": "double"
        }, 
        "cpu_tune": {
          "$ref": "#/definitions/CpuTune"
        }, 
        "architecture": {
          "enum": [
            "ppc64", 
            "undefined", 
            "x86_64"
          ], 
          "type": "string"
        }, 
        "mode": {
          "enum": [
            "custom", 
            "host_model", 
            "host_passthrough"
          ], 
          "type": "string"
        }, 
        "cores": {
          "items": {
            "$ref": "#/definitions/Core"
          }, 
          "type": "array"
        }, 
        "type": {
          "type": "string"
        }, 
        "topology": {
          "$ref": "#/definitions/CpuTopology"
        }
      }
    }, 
    "DataCenter": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "status": {
          "enum": [
            "contend", 
            "maintenance", 
            "not_operational", 
            "problematic", 
            "uninitialized", 
            "up"
          ], 
          "type": "string"
        }, 
        "supported_versions": {
          "items": {
            "$ref": "#/definitions/Version"
          }, 
          "type": "array"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "quota_mode": {
          "enum": [
            "audit", 
            "disabled", 
            "enabled"
          ], 
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "version": {
          "description": "The compatibility version of the data center.\n\nAll clusters in this data center must already be set to at least this compatibility version.\n\nFor example:\n\n[source]\n----\nGET /ovirt-engine/api/datacenters/123\n----\n\nWill respond:\n\n[source,xml]\n----\n<data_center>\n  ...\n  <version>\n    <major>4</major>\n    <minor>0</minor>\n  </version>\n  ...\n</data_center>\n----\n\nTo update the compatibility version, use:\n\n[source]\n----\nPUT /ovirt-engine/api/datacenters/123\n----\n\nWith a request body:\n\n[source,xml]\n----\n<data_center>\n  <version>\n    <major>4</major>\n    <minor>1</minor>\n  </version>\n</data_center>\n----", 
          "$ref": "#/definitions/Version"
        }, 
        "local": {
          "type": "boolean"
        }, 
        "storage_format": {
          "enum": [
            "v1", 
            "v2", 
            "v3", 
            "v4"
          ], 
          "type": "string"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "Domain": {
      "type": "object", 
      "description": "This type represents a directory service domain.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "user": {
          "$ref": "#/definitions/User"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }
      }
    }, 
    "CpuTune": {
      "type": "object", 
      "properties": {
        "vcpu_pins": {
          "items": {
            "$ref": "#/definitions/VcpuPin"
          }, 
          "type": "array"
        }
      }
    }, 
    "Qos": {
      "type": "object", 
      "description": "This type represents the attributes to define Quality of service (QoS).\n\nFor storage the `type` is <<types/qos_type, storage>>, the attributes `max_throughput`, `max_read_throughput`,\n`max_write_throughput`, `max_iops`, `max_read_iops` and `max_write_iops` are relevant.\n\nFor resources with computing capabilities the `type` is <<types/qos_type, cpu>>, the attribute `cpu_limit` is\nrelevant.\n\nFor virtual machines networks the `type` is <<types/qos_type, network>>, the attributes `inbound_average`,\n`inbound_peak`, `inbound_burst`, `outbound_average`, `outbound_peak` and `outbound_burst` are relevant.\n\nFor host networks the `type` is <<types/qos_type, hostnetwork>>, the attributes `outbound_average_linkshare`,\n`outbound_average_upperlimit` and `outbound_average_realtime` are relevant.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "inbound_burst": {
          "type": "integer", 
          "description": "The amount of data that can be delivered in a single burst in MiB.\n\nUsed to configure virtual machines networks. If defined, `inbound_average` and `inbound_peak` also has to be set.\n\nSee https://libvirt.org/formatnetwork.html#elementQoS[Libvirt-QOS] for further details.", 
          "format": "int32"
        }, 
        "max_read_iops": {
          "type": "integer", 
          "description": "Maximum permitted number of input operations per second.\n\nUsed to configure storage. Must not be set if `max_iops` is set.", 
          "format": "int32"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "outbound_average_upperlimit": {
          "type": "integer", 
          "description": "The maximum bandwidth to be used by a network in Mbps.\n\nUsed to configure host networks. If `outboundAverageUpperlimit` and `outbound_average_realtime` are provided, the\n`outbound_averageUpperlimit` must not be lower than the `outbound_average_realtime`.\n\nSee https://libvirt.org/formatnetwork.html#elementQoS[Libvirt-QOS] for further details.", 
          "format": "int32"
        }, 
        "cpu_limit": {
          "type": "integer", 
          "description": "The maximum processing capability in %.\n\nUsed to configure computing resources.", 
          "format": "int32"
        }, 
        "outbound_burst": {
          "type": "integer", 
          "description": "The amount of data that can be sent in a single burst in MiB.\n\nUsed to configure virtual machines networks. If defined, `outbound_average` and `outbound_peak` also has to be\nset.\n\nSee https://libvirt.org/formatnetwork.html#elementQoS[Libvirt-QOS] for further details.", 
          "format": "int32"
        }, 
        "inbound_peak": {
          "type": "integer", 
          "description": "The maximum inbound rate in Mbps.\n\nUsed to configure virtual machines networks. If defined, `inbound_average` and `inbound_burst` also has to be set.\n\nSee https://libvirt.org/formatnetwork.html#elementQoS[Libvirt-QOS] for further details.", 
          "format": "int32"
        }, 
        "max_read_throughput": {
          "type": "integer", 
          "description": "Maximum permitted throughput for read operations.\n\nUsed to configure storage. Must not be set if `max_throughput` is set.", 
          "format": "int32"
        }, 
        "max_write_throughput": {
          "type": "integer", 
          "description": "Maximum permitted throughput for write operations.\n\nUsed to configure storage. Must not be set if `max_throughput` is set.", 
          "format": "int32"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "max_throughput": {
          "type": "integer", 
          "description": "Maximum permitted total throughput.\n\nUsed to configure storage. Must not be set if `max_read_throughput` or `max_write_throughput` is set.", 
          "format": "int32"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "max_write_iops": {
          "type": "integer", 
          "description": "Maximum permitted number of output operations per second.\n\nUsed to configure storage. Must not be set if `max_iops` is set.", 
          "format": "int32"
        }, 
        "inbound_average": {
          "type": "integer", 
          "description": "The desired average inbound bit rate in Mbps.\n\nUsed to configure virtual machines networks. If defined, `inbound_peak` and `inbound_burst` also has to be set.\n\nSee https://libvirt.org/formatnetwork.html#elementQoS[Libvirt-QOS] for further details.", 
          "format": "int32"
        }, 
        "outbound_average_realtime": {
          "type": "integer", 
          "description": "The committed rate in Mbps.\n\nUsed to configure host networks. The minimum bandwidth required by a network. The committed rate requested is not\nguaranteed and will vary depending on the network infrastructure and the committed rate requested by other\nnetworks on the same logical link.", 
          "format": "int32"
        }, 
        "max_iops": {
          "type": "integer", 
          "description": "Maximum permitted number of input and output operations per second.\n\nUsed to configure storage. Must not be set if `max_read_iops` or `max_write_iops` is set.", 
          "format": "int32"
        }, 
        "outbound_average": {
          "type": "integer", 
          "description": "The desired average outbound bit rate in Mbps.\n\nUsed to configure virtual machines networks. If defined, `outbound_peak` and `outbound_burst` also has to be set.\n\nSee https://libvirt.org/formatnetwork.html#elementQoS[Libvirt-QOS] for further details.", 
          "format": "int32"
        }, 
        "outbound_average_linkshare": {
          "type": "integer", 
          "description": "Weighted share.\n\nUsed to configure host networks. Signifies how much of the logical link's capacity a specific network should be\nallocated, relative to the other networks attached to the same logical link. The exact share depends on the sum\nof shares of all networks on that link. By default this is a number in the range 1-100.", 
          "format": "int32"
        }, 
        "type": {
          "enum": [
            "cpu", 
            "hostnetwork", 
            "network", 
            "storage"
          ], 
          "type": "string", 
          "description": "The kind of resources this entry can be assigned."
        }, 
        "outbound_peak": {
          "type": "integer", 
          "description": "The maximum outbound rate in Mbps.\n\nUsed to configure virtual machines networks. If defined, `outbound_average` and `outbound_burst` also has to be\nset.\n\nSee https://libvirt.org/formatnetwork.html#elementQoS[Libvirt-QOS] for further details.", 
          "format": "int32"
        }
      }
    }, 
    "SchedulingPolicyUnit": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "enabled": {
          "type": "boolean"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "internal": {
          "type": "boolean"
        }, 
        "type": {
          "enum": [
            "filter", 
            "load_balancing", 
            "weight"
          ], 
          "type": "string"
        }, 
        "properties": {
          "items": {
            "$ref": "#/definitions/Property"
          }, 
          "type": "array"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "CustomProperty": {
      "type": "object", 
      "description": "Custom property representation.", 
      "properties": {
        "regexp": {
          "type": "string", 
          "description": "A regular expression defining the available values a custom property can get."
        }, 
        "name": {
          "type": "string", 
          "description": "Property name."
        }, 
        "value": {
          "type": "string", 
          "description": "Property value."
        }
      }
    }, 
    "Image": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "VolumeGroup": {
      "type": "object", 
      "properties": {
        "logical_units": {
          "items": {
            "$ref": "#/definitions/LogicalUnit"
          }, 
          "type": "array"
        }, 
        "id": {
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }
      }
    }, 
    "TransparentHugePages": {
      "type": "object", 
      "description": "Type representing a transparent huge pages (THP) support.", 
      "properties": {
        "enabled": {
          "type": "boolean", 
          "description": "Enable THP support."
        }
      }
    }, 
    "Session": {
      "type": "object", 
      "description": "Describes a user session to a virtual machine.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "protocol": {
          "type": "string", 
          "description": "The protocol used by the session.\n\nCurrently not used. Intended for info about how the user is connected: through SPICE, VNC, SSH, or RDP."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "ip": {
          "description": "The IP address the user is connected from.\n\nCurrently only available for console users.", 
          "$ref": "#/definitions/Ip"
        }, 
        "console_user": {
          "type": "boolean", 
          "description": "Indicates if this is a console session.\n\nThe value will be `true` for console users (SPICE or VNC), and `false` for others (such as RDP or SSH)."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "IscsiBond": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "data_center": {
          "$ref": "#/definitions/DataCenter"
        }, 
        "networks": {
          "items": {
            "$ref": "#/definitions/Network"
          }, 
          "type": "array"
        }, 
        "storage_connections": {
          "items": {
            "$ref": "#/definitions/StorageConnection"
          }, 
          "type": "array"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }
      }
    }, 
    "HostDevice": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "product": {
          "$ref": "#/definitions/Product"
        }, 
        "vendor": {
          "$ref": "#/definitions/Vendor"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "virtual_functions": {
          "type": "integer", 
          "format": "int32"
        }, 
        "iommu_group": {
          "type": "integer", 
          "format": "int32"
        }, 
        "driver": {
          "type": "string", 
          "description": "The name of the driver this device is bound to.\n\nFor example: `pcieport` or `uhci_hcd`."
        }, 
        "capability": {
          "type": "string"
        }, 
        "physical_function": {
          "$ref": "#/definitions/HostDevice"
        }, 
        "placeholder": {
          "type": "boolean"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "ExternalHost": {
      "type": "object", 
      "description": "Represents a host provisioned by a host\nprovider (such as Foreman/Satellite).\n\nSee https://www.theforeman.org/ for more details on Foreman.\nSee https://access.redhat.com/products/red-hat-satellite\nfor more details on Red Hat Satellite.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "address": {
          "type": "string", 
          "description": "The address of the host, either IP address\nof FQDN (Fully Qualified Domain Name)."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }
      }
    }, 
    "GlusterHook": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "status": {
          "enum": [
            "disabled", 
            "enabled", 
            "missing"
          ], 
          "type": "string"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "checksum": {
          "type": "string"
        }, 
        "gluster_command": {
          "type": "string"
        }, 
        "content": {
          "type": "string"
        }, 
        "conflict_status": {
          "type": "integer", 
          "format": "int32"
        }, 
        "content_type": {
          "enum": [
            "binary", 
            "text"
          ], 
          "type": "string"
        }, 
        "conflicts": {
          "type": "string"
        }, 
        "stage": {
          "enum": [
            "post", 
            "pre"
          ], 
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "MemoryPolicy": {
      "type": "object", 
      "description": "Logical grouping of memory related properties of virtual machine-like entities.", 
      "properties": {
        "ballooning": {
          "type": "boolean"
        }, 
        "max": {
          "type": "integer", 
          "description": "Maximum virtual machine's memory, in bytes.\n\nThe user provides the value in bytes, and the engine rounds the value down to the nearest lower MiB value.\n\nFor example, if the user enters a value of 1073741825 (1 GiB + 1 byte), then the {engine-name} will truncate\nthat value to the nearest lower MiB boundary: in this case 1073741824 (1 GiB).", 
          "format": "int32"
        }, 
        "guaranteed": {
          "type": "integer", 
          "format": "int32"
        }, 
        "transparent_hugepages": {
          "$ref": "#/definitions/TransparentHugePages"
        }, 
        "over_commit": {
          "$ref": "#/definitions/MemoryOverCommit"
        }
      }
    }, 
    "Payload": {
      "type": "object", 
      "properties": {
        "files": {
          "items": {
            "$ref": "#/definitions/File"
          }, 
          "type": "array"
        }, 
        "type": {
          "enum": [
            "cdrom", 
            "floppy"
          ], 
          "type": "string"
        }, 
        "volume_id": {
          "type": "string"
        }
      }
    }, 
    "VmPool": {
      "type": "object", 
      "description": "Type represeting a virtual machines pool.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "use_latest_template_version": {
          "type": "boolean", 
          "description": "Indicates if virtual machines in the pool are updated to newer versions of the template the pool is based on."
        }, 
        "rng_device": {
          "description": "The random number generator device configured for virtual machines in the pool.", 
          "$ref": "#/definitions/RngDevice"
        }, 
        "soundcard_enabled": {
          "type": "boolean", 
          "description": "Indicates if sound card should be configured for virtual machines in the pool."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "max_user_vms": {
          "type": "integer", 
          "description": "The maximum number of virtual machines in the pool that could be assigned to a particular user.", 
          "format": "int32"
        }, 
        "auto_storage_select": {
          "type": "boolean", 
          "description": "Indicates if the pool should automatically distribute the disks of the virtual machines across the multiple\nstorage domains where the template is copied.\n\nWhen the template used by the pool is present in multiple storage domains, the disks of the virtual machines of\nthe pool will be created in one of those storage domains. By default, or when the value of this attribute is\n`false`, that storage domain is selected when the pool is created, and all virtual machines will use the same. If\nthis attribute is `true`, then, when a virtual machine is added to the pool, the storage domain that has more\nfree space is selected."
        }, 
        "prestarted_vms": {
          "type": "integer", 
          "description": "The system attempts to prestart the specified number of virtual machines from the pool.\n\nThese virtual machines are started without being attached to any user. That way, users can acquire virtual\nmachines from the pool faster.", 
          "format": "int32"
        }, 
        "stateful": {
          "type": "boolean", 
          "description": "Virtual machine pool's stateful flag.\n\nVirtual machines from a stateful virtual machine pool are always started in stateful mode (stateless snapshot is\nnot created). The state of the virtual machine is preserved even when the virtual machine is passed to a\ndifferent user."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "type": {
          "enum": [
            "automatic", 
            "manual"
          ], 
          "type": "string", 
          "description": "The deallocation policy of virtual machines in the pool."
        }, 
        "display": {
          "description": "The display settings configured for virtual machines in the pool.", 
          "$ref": "#/definitions/Display"
        }, 
        "size": {
          "type": "integer", 
          "description": "The number of virtual machines in the pool.", 
          "format": "int32"
        }
      }
    }, 
    "OpenStackVolumeType": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "properties": {
          "items": {
            "$ref": "#/definitions/Property"
          }, 
          "type": "array"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }
      }
    }, 
    "Group": {
      "type": "object", 
      "description": "This type represents all groups in the directory service.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "domain_entry_id": {
          "type": "string", 
          "description": "The containing directory service domain id."
        }, 
        "namespace": {
          "type": "string", 
          "description": "Namespace where group resides."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "Usb": {
      "type": "object", 
      "description": "Configuration of the USB device of a virtual machine.", 
      "properties": {
        "enabled": {
          "type": "boolean", 
          "description": "Determines whether the USB device should be included or not."
        }, 
        "type": {
          "enum": [
            "legacy", 
            "native"
          ], 
          "type": "string", 
          "description": "USB type, currently only `native` is supported."
        }
      }
    }, 
    "Certificate": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "content": {
          "type": "string"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "organization": {
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "subject": {
          "type": "string"
        }
      }
    }, 
    "VnicProfile": {
      "type": "object", 
      "description": "A vNIC profile is a collection of settings that can be applied to individual <<types/nic,NIC>>.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "migratable": {
          "type": "boolean", 
          "description": "Marks, whether `pass_through` NIC is migratable or not.\n\nIf `pass_through.mode` is set to `disabled` this option has no meaning, and it will be considered to be `true`.\nIf you omit this option from request, by default, this will be set to `true`.\n\nWhen migrating virtual machine, this virtual machine will be migrated only if all `pass_through` NICs are\nflagged as `migratable`."
        }, 
        "pass_through": {
          "description": "Enables the passthrough to a SR-IOV-enabled <<types/host_nic,host NIC>>.\n\nA vNIC profile enables a NIC to be directly connected to a\n<<types/host_nic_virtual_functions_configuration,virtual function (VF)>> of an SR-IOV-enabled\nhost NIC, if passthrough is enabled. The NIC will then bypass the software network virtualization and\nconnect directly to the VF for direct device assignment.\n\nThe passthrough cannot be enabled if the vNIC profile is already attached to a NIC.\nIf a vNIC profile has passthrough enabled, `qos` and `port_mirroring` are disabled for the vNIC profile.", 
          "$ref": "#/definitions/VnicPassThrough"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "custom_properties": {
          "items": {
            "$ref": "#/definitions/CustomProperty"
          }, 
          "type": "array", 
          "description": "Custom properties applied to the vNIC profile."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "port_mirroring": {
          "type": "boolean", 
          "description": "Enables port mirroring.\n\nPort mirroring copies layer 3 network traffic on a given <<types/network,logical network>>and\n<<types/host,host>> to a NIC on a <<types/vm,virtual machine>>. This virtual machine\ncan be used for network debugging and tuning, intrusion detection, and monitoring the behavior of other\nvirtual machine on the same host and logical network. The only\ntraffic copied is internal to one logical network on one host. There is no\nincrease on traffic on the network external to the host; however a virtual machine\nwith port mirroring enabled uses more host CPU and RAM than other virtual machines.\n\nPort mirroring has the following limitations:\n\n - Hot plugging NIC with a vNIC profile that has port mirroring enabled is not supported.\n - Port mirroring cannot be altered when the vNIC profile is attached to a virtual machine.\n\nGiven the above limitations, it is recommended that you enable port mirroring on an additional,\ndedicated vNIC profile.\n\nIMPORTANT: Enabling port mirroring reduces the privacy of other network users."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }
      }
    }, 
    "Boot": {
      "type": "object", 
      "description": "Configuration of the boot sequence of a virtual machine.", 
      "properties": {
        "devices": {
          "items": {
            "enum": [
              "cdrom", 
              "hd", 
              "network"
            ], 
            "type": "string"
          }, 
          "type": "array", 
          "description": "Ordered list of boot devices. The virtual machine will try to boot from the given boot devices, in the given\norder."
        }
      }
    }, 
    "VmSummary": {
      "type": "object", 
      "description": "Type containing information related to virtual machines on a particular host.", 
      "properties": {
        "active": {
          "type": "integer", 
          "description": "The number of virtual machines active on the host.", 
          "format": "int32"
        }, 
        "migrating": {
          "type": "integer", 
          "description": "The number of virtual machines migrating to or from the host.", 
          "format": "int32"
        }, 
        "total": {
          "type": "integer", 
          "description": "The number of virtual machines present on the host.", 
          "format": "int32"
        }
      }
    }, 
    "HardwareInformation": {
      "type": "object", 
      "description": "Represents hardware information of host.\n\nTo get that information send a request like this:\n\n....\nGET /ovirt-engine/api/hosts/123\n....\n\nThe result will be like this:\n\n[source,xml]\n----\n<host href=\"/ovirt-engine/api/hosts/123\" id=\"123\">\n  ...\n  <hardware_information>\n    <family>Red Hat Enterprise Linux</family>\n    <manufacturer>Red Hat</manufacturer>\n    <product_name>RHEV Hypervisor</product_name>\n    <serial_number>01234567-89AB-CDEF-0123-456789ABCDEF</serial_number>\n    <supported_rng_sources>\n      <supported_rng_source>random</supported_rng_source>\n    </supported_rng_sources>\n    <uuid>12345678-9ABC-DEF0-1234-56789ABCDEF0</uuid>\n    <version>1.2-34.5.el7ev</version>\n  </hardware_information>\n  ...\n</application>\n----", 
      "properties": {
        "version": {
          "type": "string", 
          "description": "Unique name for each of the manufacturer."
        }, 
        "uuid": {
          "type": "string", 
          "description": "Unique ID for each host."
        }, 
        "family": {
          "type": "string", 
          "description": "Type of host's CPU."
        }, 
        "serial_number": {
          "type": "string", 
          "description": "Unique ID for host's chassis."
        }, 
        "product_name": {
          "type": "string", 
          "description": "Host's product name (for example `RHEV Hypervisor`)."
        }, 
        "supported_rng_sources": {
          "items": {
            "enum": [
              "hwrng", 
              "random", 
              "urandom"
            ], 
            "type": "string"
          }, 
          "type": "array", 
          "description": "Supported sources of random number generator."
        }, 
        "manufacturer": {
          "type": "string", 
          "description": "Manufacturer of the host's machine and hardware vendor."
        }
      }
    }, 
    "EntityProfileDetail": {
      "type": "object", 
      "properties": {
        "profile_details": {
          "items": {
            "$ref": "#/definitions/ProfileDetail"
          }, 
          "type": "array"
        }
      }
    }, 
    "NumaNodePin": {
      "type": "object", 
      "description": "Represents the pinning of a virtual NUMA node to a physical NUMA node.", 
      "properties": {
        "pinned": {
          "type": "boolean", 
          "description": "Deprecated. Should always be `true`."
        }, 
        "index": {
          "type": "integer", 
          "description": "The index of a physical NUMA node to which the virtual NUMA node is pinned.", 
          "format": "int32"
        }, 
        "host_numa_node": {
          "description": "Deprecated. Has no function.", 
          "$ref": "#/definitions/NumaNode"
        }
      }
    }, 
    "Dns": {
      "type": "object", 
      "description": "Represents the DNS resolver configuration.", 
      "properties": {
        "search_domains": {
          "items": {
            "$ref": "#/definitions/Host"
          }, 
          "type": "array", 
          "description": "Array of hosts serving as search domains."
        }, 
        "servers": {
          "items": {
            "$ref": "#/definitions/Host"
          }, 
          "type": "array", 
          "description": "Array of hosts serving as DNS servers."
        }
      }
    }, 
    "PortMirroring": {
      "type": "object", 
      "properties": {}
    }, 
    "Network": {
      "type": "object", 
      "description": "The type for a logical network.\n\nAn example of the JSON representation of a logical network:\n\n[source,json]\n----\n{\n  \"network\" : [ {\n    \"data_center\" : {\n      \"href\" : \"/ovirt-engine/api/datacenters/123\",\n      \"id\" : \"123\"\n    },\n    \"stp\" : \"false\",\n    \"mtu\" : \"0\",\n    \"usages\" : {\n      \"usage\" : [ \"vm\" ]\n    },\n    \"name\" : \"ovirtmgmt\",\n    \"description\" : \"Management Network\",\n    \"href\" : \"/ovirt-engine/api/networks/456\",\n    \"id\" : \"456\",\n    \"link\" : [ {\n      \"href\" : \"/ovirt-engine/api/networks/456/permissions\",\n      \"rel\" : \"permissions\"\n    }, {\n      \"href\" : \"/ovirt-engine/api/networks/456/vnicprofiles\",\n      \"rel\" : \"vnicprofiles\"\n    }, {\n      \"href\" : \"/ovirt-engine/api/networks/456/labels\",\n      \"rel\" : \"labels\"\n    } ]\n  } ]\n}\n----\n\nAn example of the XML representation of the same logical network:\n\n[source,xml]\n----\n<network href=\"/ovirt-engine/api/networks/456\" id=\"456\">\n  <name>ovirtmgmt</name>\n  <description>Management Network</description>\n  <link href=\"/ovirt-engine/api/networks/456/permissions\" rel=\"permissions\"/>\n  <link href=\"/ovirt-engine/api/networks/456/vnicprofiles\" rel=\"vnicprofiles\"/>\n  <link href=\"/ovirt-engine/api/networks/456/labels\" rel=\"labels\"/>\n  <data_center href=\"/ovirt-engine/api/datacenters/123\" id=\"123\"/>\n  <stp>false</stp>\n  <mtu>0</mtu>\n  <usages>\n    <usage>vm</usage>\n  </usages>\n</network>\n----", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "status": {
          "enum": [
            "non_operational", 
            "operational"
          ], 
          "type": "string", 
          "description": "The status of the network. `non_operational` if the network defined as 'required' and\nomitted from any active cluster host. `operational` otherwise."
        }, 
        "usages": {
          "items": {
            "enum": [
              "default_route", 
              "display", 
              "gluster", 
              "management", 
              "migration", 
              "vm"
            ], 
            "type": "string"
          }, 
          "type": "array", 
          "description": "Defines a set of usage elements for the network.\n\nFor example, users can specify that the network is to be used for virtual machine traffic and also for\ndisplay traffic with the `vm` and `display` values."
        }, 
        "required": {
          "type": "boolean", 
          "description": "Defines whether the network is mandatory for all the hosts in the cluster. In case a 'required'\n`operational` network is omitted from a host, the host will be marked as `non_operational`,"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "ip": {
          "description": "Deprecated, not in use.", 
          "$ref": "#/definitions/Ip"
        }, 
        "vlan": {
          "description": "A VLAN tag.", 
          "$ref": "#/definitions/Vlan"
        }, 
        "profile_required": {
          "type": "boolean", 
          "description": "Specifies whether upon creation of the network a virtual network interface profile should automatically be\ncreated."
        }, 
        "mtu": {
          "type": "integer", 
          "description": "Specifies the maximum transmission unit for the network.", 
          "format": "int32"
        }, 
        "stp": {
          "type": "boolean", 
          "description": "Specifies whether the spanning tree protocol is enabled for the network."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "dns_resolver_configuration": {
          "$ref": "#/definitions/DnsResolverConfiguration"
        }, 
        "display": {
          "type": "boolean", 
          "description": "Deprecated, 'usages' should be used to define network as a display network."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "OperatingSystemInfo": {
      "type": "object", 
      "description": "Represents a guest operating system.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "large_icon": {
          "description": "Large icon of the guest operating system. Maximum dimensions width: 150px, height: 120px.", 
          "$ref": "#/definitions/Icon"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "small_icon": {
          "description": "Small icon of the guest operating system. Maximum dimensions width: 43px, height: 43px.", 
          "$ref": "#/definitions/Icon"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "StorageConnectionExtension": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "username": {
          "type": "string"
        }, 
        "target": {
          "type": "string"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "password": {
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "Initialization": {
      "type": "object", 
      "properties": {
        "org_name": {
          "type": "string"
        }, 
        "domain": {
          "type": "string"
        }, 
        "dns_servers": {
          "type": "string"
        }, 
        "authorized_ssh_keys": {
          "type": "string"
        }, 
        "custom_script": {
          "type": "string"
        }, 
        "user_locale": {
          "type": "string"
        }, 
        "root_password": {
          "type": "string"
        }, 
        "timezone": {
          "type": "string"
        }, 
        "nic_configurations": {
          "items": {
            "$ref": "#/definitions/NicConfiguration"
          }, 
          "type": "array"
        }, 
        "regenerate_ids": {
          "type": "boolean"
        }, 
        "input_locale": {
          "type": "string"
        }, 
        "configuration": {
          "$ref": "#/definitions/Configuration"
        }, 
        "system_locale": {
          "type": "string"
        }, 
        "active_directory_ou": {
          "type": "string"
        }, 
        "regenerate_ssh_keys": {
          "type": "boolean"
        }, 
        "dns_search": {
          "type": "string"
        }, 
        "windows_license_key": {
          "type": "string"
        }, 
        "host_name": {
          "type": "string"
        }, 
        "ui_language": {
          "type": "string"
        }, 
        "user_name": {
          "type": "string"
        }, 
        "cloud_init": {
          "$ref": "#/definitions/CloudInit"
        }
      }
    }, 
    "Sso": {
      "type": "object", 
      "properties": {
        "methods": {
          "items": {
            "$ref": "#/definitions/Method"
          }, 
          "type": "array"
        }
      }
    }, 
    "BootMenu": {
      "type": "object", 
      "description": "Represents boot menu configuration\nfor virtual machines and templates.", 
      "properties": {
        "enabled": {
          "type": "boolean", 
          "description": "Whether the boot menu is enabled\nfor this virtual machine (or template), or not."
        }
      }
    }, 
    "GlusterBrickMemoryInfo": {
      "type": "object", 
      "properties": {
        "memory_pools": {
          "items": {
            "$ref": "#/definitions/GlusterMemoryPool"
          }, 
          "type": "array"
        }
      }
    }, 
    "User": {
      "type": "object", 
      "description": "Represents a user in the system.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "last_name": {
          "type": "string"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "domain_entry_id": {
          "type": "string"
        }, 
        "namespace": {
          "type": "string", 
          "description": "Namespace where the user resides. When using the authorization provider that stores users in the LDAP server,\nthis attribute equals the naming context of the LDAP server.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-ldap for more information.\nWhen using the built-in authorization provider that stores users in the database this attribute is ignored.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-jdbc for more information."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "department": {
          "type": "string"
        }, 
        "logged_in": {
          "type": "boolean"
        }, 
        "password": {
          "type": "string"
        }, 
        "user_name": {
          "type": "string", 
          "description": "The user's username. The format depends on authorization provider type. In most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In Active Directory it is the User Principal Name (UPN). `UPN` or\n`uid` must be followed by the authorization provider name. For example, in the case of LDAP's `uid` attribute it is:\n`myuser@myextension-authz`. In the case of Active Directory using `UPN` it is:\n`myuser@mysubdomain.mydomain.com@myextension-authz`. This attribute is a required parameter when adding a new user."
        }, 
        "email": {
          "type": "string"
        }, 
        "principal": {
          "type": "string", 
          "description": "Similar to `user_name`. The format depends on the LDAP provider. With most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In the case of Active Directory it is the User Principal Name (UPN)."
        }
      }
    }, 
    "Application": {
      "type": "object", 
      "description": "Represents an application installed on a virtual machine. Applications are reported by the guest agent, if you\ndeploy one on the virtual machine operating system.\n\nTo get that information send a request like this:\n\n....\nGET /ovirt-engine/api/vms/123/applications/456\n....\n\nThe result will be like this:\n\n[source,xml]\n----\n<application href=\"/ovirt-engine/api/vms/123/applications/456\" id=\"456\">\n  <name>application-test-1.0.0-0.el7</name>\n  <vm href=\"/ovirt-engine/api/vms/123\" id=\"123\"/>\n</application>\n----", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "InstanceType": {
      "type": "object", 
      "description": "Describes the hardware configuration of virtual machines.\n\nFor example `medium` instance type includes 1 virtual CPU and 4 GiB of memory. It is a top-level\nentity (e.g. not bound to any data center or cluster). The attributes that are used for instance\ntypes and are common to virtual machine and template types are:\n\n- `console`\n- `cpu`\n- `custom_cpu_model`\n- `custom_emulated_machine`\n- `display`\n- `high_availability`\n- `io`\n- `memory`\n- `memory_policy`\n- `migration`\n- `migration_downtime`\n- `os`\n- `rng_device`\n- `soundcard_enabled`\n- `usb`\n- `virtio_scsi`\n\nWhen creating a virtual machine from both an instance type and a template, the virtual machine\nwill inherit the hardware configurations from the instance type\n\nNOTE: An instance type inherits it's attributes from the template entity although most template\nattributes are not used in instance types.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "origin": {
          "type": "string", 
          "description": "The origin of this virtual machine.\n\nPossible values:\n\n- `ovirt`\n- `rhev`\n- `vmware`\n- `xen`\n- `external`\n- `hosted_engine`\n- `managed_hosted_engine`\n- `kvm`\n- `physical_machine`\n- `hyperv`"
        }, 
        "domain": {
          "description": "Domain configured for this virtual machine.", 
          "$ref": "#/definitions/Domain"
        }, 
        "virtio_scsi": {
          "description": "Reference to VirtIO SCSI configuration.", 
          "$ref": "#/definitions/VirtioScsi"
        }, 
        "creation_time": {
          "type": "string", 
          "description": "The virtual machine creation date.", 
          "format": "epoch"
        }, 
        "custom_compatibility_version": {
          "description": "Virtual machine custom compatibility version.\n\nEnables a virtual machine to be customized to its own compatibility version.  If\n`custom_compatibility_version` is set, it overrides the cluster's compatibility version\nfor this particular virtual machine.\n\nThe compatibility version of a virtual machine is limited by the data center the virtual\nmachine resides in, and is checked against capabilities of the host the virtual machine is\nplanned to run on.", 
          "$ref": "#/definitions/Version"
        }, 
        "large_icon": {
          "description": "Virtual machine's large icon. Either set by user or refers to image set according to operating system.", 
          "$ref": "#/definitions/Icon"
        }, 
        "migration": {
          "description": "Reference to configuration of migration of running virtual machine to another host.", 
          "$ref": "#/definitions/MigrationOptions"
        }, 
        "io": {
          "description": "For performance tuning of IO threading.", 
          "$ref": "#/definitions/Io"
        }, 
        "migration_downtime": {
          "type": "integer", 
          "description": "Maximum time the virtual machine can be non responsive during its live migration to another host in ms.\n\nSet either explicitly for the virtual machine or by `engine-config -s DefaultMaximumMigrationDowntime=[value]`", 
          "format": "int32"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "high_availability": {
          "description": "The virtual machine high availability configuration.\nIf set, the virtual machine will be automatically restarted when it unexpectedly goes down.", 
          "$ref": "#/definitions/HighAvailability"
        }, 
        "console": {
          "description": "Console configured for this virtual machine.", 
          "$ref": "#/definitions/Console"
        }, 
        "usb": {
          "description": "Configuration of USB devices for this virtual machine (count, type).", 
          "$ref": "#/definitions/Usb"
        }, 
        "custom_properties": {
          "items": {
            "$ref": "#/definitions/CustomProperty"
          }, 
          "type": "array", 
          "description": "Properties sent to VDSM to configure various hooks."
        }, 
        "custom_emulated_machine": {
          "type": "string"
        }, 
        "bios": {
          "description": "Reference to virtual machine's BIOS configuration.", 
          "$ref": "#/definitions/Bios"
        }, 
        "version": {
          "description": "Indicates whether this is a base version or a sub version of another template.", 
          "$ref": "#/definitions/TemplateVersion"
        }, 
        "delete_protected": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine cannot be deleted."
        }, 
        "memory": {
          "type": "integer", 
          "description": "The virtual machine's memory, in bytes.\n\nFor example, to update a virtual machine to contain 1 Gibibyte (GiB) of memory, send the following request:\n\n[source]\n----\nPUT /ovirt-engine/api/vms/123\n----\n\nWith the following request body:\n\n[source,xml]\n----\n<vm>\n  <memory>1073741824</memory>\n</vm>\n----\n\nNOTE: Memory in the example is converted to bytes using the following formula: +\n1 GiB = 2^30^ bytes = 1073741824 bytes.\n\nNOTE: Memory hot plug is supported from {product-name} 3.6 onwards. You can use the example above to increase\nmemory while the virtual machine is running.", 
          "format": "int32"
        }, 
        "serial_number": {
          "description": "Virtual machine's serial number in a cluster.", 
          "$ref": "#/definitions/SerialNumber"
        }, 
        "tunnel_migration": {
          "type": "boolean", 
          "description": "If `true`, the network data transfer will be encrypted during virtual machine live migration."
        }, 
        "type": {
          "enum": [
            "desktop", 
            "server"
          ], 
          "type": "string", 
          "description": "Determines whether the virtual machine is optimized for desktop or server."
        }, 
        "lease": {
          "description": "Reference to the storage domain this virtual machine/template lease reside on.\n\nA virtual machine running with a lease requires checking while running that the lease is not taken by another\nhost, preventing another instance of this virtual machine from running on another host.\nThis provides protection against split-brain in highly available virtual machines.\nA template can also have a storage domain defined for a lease in order to have the virtual machines created\nfrom this template to be preconfigured with this storage domain as the location of the leases.", 
          "$ref": "#/definitions/StorageDomainLease"
        }, 
        "status": {
          "enum": [
            "illegal", 
            "locked", 
            "ok"
          ], 
          "type": "string", 
          "description": "The status of the template."
        }, 
        "rng_device": {
          "description": "Random Number Generator device configuration for this virtual machine.", 
          "$ref": "#/definitions/RngDevice"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "initialization": {
          "description": "Reference to virtual machine's initialization configuration.", 
          "$ref": "#/definitions/Initialization"
        }, 
        "vm": {
          "description": "The virtual machine configuration associated with this template.", 
          "$ref": "#/definitions/Vm"
        }, 
        "sso": {
          "description": "Reference to the Single Sign On configuration this virtual machine is configured for.\nThe user can be automatically signed in the virtual machine's operating system when console is opened.", 
          "$ref": "#/definitions/Sso"
        }, 
        "memory_policy": {
          "description": "Reference to virtual machine's memory management configuration.", 
          "$ref": "#/definitions/MemoryPolicy"
        }, 
        "soundcard_enabled": {
          "type": "boolean", 
          "description": "If `true`, the sound card is added to the virtual machine."
        }, 
        "stateless": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine is stateless - it's state (disks) are rolled-back after shutdown."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "custom_cpu_model": {
          "type": "string"
        }, 
        "time_zone": {
          "description": "The virtual machine's time zone set by oVirt.", 
          "$ref": "#/definitions/TimeZone"
        }, 
        "display": {
          "description": "The virtual machine display configuration.", 
          "$ref": "#/definitions/Display"
        }, 
        "start_paused": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine will be initially in 'paused' state after start."
        }, 
        "small_icon": {
          "description": "Virtual machine's small icon. Either set by user or refers to image set according to operating system.", 
          "$ref": "#/definitions/Icon"
        }, 
        "os": {
          "description": "Operating system type installed on the virtual machine.", 
          "$ref": "#/definitions/OperatingSystem"
        }, 
        "cpu": {
          "description": "The configuration of the virtual machine CPU.\n\nThe socket configuration can be updated without rebooting the virtual machine. The cores and the threads require\na reboot.\n\nFor example, to change the number of sockets to 4 immediately, and the number of cores and threads to 2 after\nreboot, send the following request:\n\n[source]\n----\nPUT /ovirt-engine/api/vms/123\n----\n\nWith a request body:\n\n[source,xml]\n----\n<vm>\n  <cpu>\n    <topology>\n      <sockets>4</sockets>\n      <cores>2</cores>\n      <threads>2</threads>\n    </topology>\n  </cpu>\n</vm>\n----", 
          "$ref": "#/definitions/Cpu"
        }, 
        "cpu_shares": {
          "type": "integer", 
          "format": "int32"
        }
      }
    }, 
    "BrickProfileDetail": {
      "type": "object", 
      "properties": {
        "profile_details": {
          "items": {
            "$ref": "#/definitions/ProfileDetail"
          }, 
          "type": "array"
        }
      }
    }, 
    "ExternalComputeResource": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "provider": {
          "type": "string"
        }, 
        "url": {
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "user": {
          "type": "string"
        }
      }
    }, 
    "Kernel": {
      "type": "object", 
      "properties": {
        "version": {
          "$ref": "#/definitions/Version"
        }
      }
    }, 
    "NumaNode": {
      "type": "object", 
      "description": "Represents a physical NUMA node.\n\nExample XML representation:\n\n[source,xml]\n----\n<host_numa_node href=\"/ovirt-engine/api/hosts/0923f1ea/numanodes/007cf1ab\" id=\"007cf1ab\">\n  <cpu>\n    <cores>\n      <core>\n        <index>0</index>\n      </core>\n    </cores>\n  </cpu>\n  <index>0</index>\n  <memory>65536</memory>\n  <node_distance>40 20 40 10</node_distance>\n  <host href=\"/ovirt-engine/api/hosts/0923f1ea\" id=\"0923f1ea\"/>\n</host_numa_node>\n----", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "index": {
          "type": "integer", 
          "format": "int32"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "memory": {
          "type": "integer", 
          "description": "Memory of the NUMA node in MB.", 
          "format": "int32"
        }, 
        "cpu": {
          "$ref": "#/definitions/Cpu"
        }, 
        "node_distance": {
          "type": "string"
        }
      }
    }, 
    "CloudInit": {
      "type": "object", 
      "properties": {
        "files": {
          "items": {
            "$ref": "#/definitions/File"
          }, 
          "type": "array"
        }, 
        "authorized_keys": {
          "items": {
            "$ref": "#/definitions/AuthorizedKey"
          }, 
          "type": "array"
        }, 
        "host": {
          "$ref": "#/definitions/Host"
        }, 
        "network_configuration": {
          "$ref": "#/definitions/NetworkConfiguration"
        }, 
        "users": {
          "items": {
            "$ref": "#/definitions/User"
          }, 
          "type": "array"
        }, 
        "timezone": {
          "type": "string"
        }, 
        "regenerate_ssh_keys": {
          "type": "boolean"
        }
      }
    }, 
    "GlusterClient": {
      "type": "object", 
      "properties": {
        "bytes_read": {
          "type": "integer", 
          "format": "int32"
        }, 
        "bytes_written": {
          "type": "integer", 
          "format": "int32"
        }, 
        "client_port": {
          "type": "integer", 
          "format": "int32"
        }, 
        "host_name": {
          "type": "string"
        }
      }
    }, 
    "MigrationOptions": {
      "type": "object", 
      "description": "The type for migration options.", 
      "properties": {
        "auto_converge": {
          "enum": [
            "false", 
            "inherit", 
            "true"
          ], 
          "type": "string"
        }, 
        "bandwidth": {
          "description": "The bandwidth that is allowed to be used by the migration.", 
          "$ref": "#/definitions/MigrationBandwidth"
        }, 
        "compressed": {
          "enum": [
            "false", 
            "inherit", 
            "true"
          ], 
          "type": "string"
        }
      }
    }, 
    "Filter": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "position": {
          "type": "integer", 
          "format": "int32"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "OpenStackSubnet": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "dns_servers": {
          "items": {
            "type": "string"
          }, 
          "type": "array", 
          "description": "Defines a list of DNS servers."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "ip_version": {
          "type": "string", 
          "description": "Defines IP version.\n\nValues can be `v4' for IPv4 or `v6` for IPv6."
        }, 
        "cidr": {
          "type": "string", 
          "description": "Defines network CIDR."
        }, 
        "gateway": {
          "type": "string", 
          "description": "Defines IP gateway."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "NetworkFilterParameter": {
      "type": "object", 
      "description": "Parameter for the <<types/network_filter,network filter>>.\n\nSee https://libvirt.org/formatnwfilter.html#nwfconceptsvars[Libvirt-Filters] for further details.\nThis is a example of the XML representation:\n\n[source,xml]\n----\n<network_filter_parameter id=\"123\">\n  <name>IP</name>\n  <value>10.0.1.2</value>\n</network_filter_parameter>\n----", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "nic": {
          "description": "The virtual machine NIC the parameter is assiciated to.", 
          "$ref": "#/definitions/Nic"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "value": {
          "type": "string", 
          "description": "Represents the value of the parameter."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "Snapshot": {
      "type": "object", 
      "description": "Represents a snapshot object.\n\nExample XML representation:\n\n[source,xml]\n----\n<snapshot id=\"456\" href=\"/ovirt-engine/api/vms/123/snapshots/456\">\n  <actions>\n    <link rel=\"restore\" href=\"/ovirt-engine/api/vms/123/snapshots/456/restore\"/>\n  </actions>\n  <vm id=\"123\" href=\"/ovirt-engine/api/vms/123\"/>\n  <description>Virtual Machine 1 - Snapshot A</description>\n  <type>active</type>\n  <date>2010-08-16T14:24:29</date>\n  <persist_memorystate>false</persist_memorystate>\n</snapshot>\n----", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "origin": {
          "type": "string", 
          "description": "The origin of this virtual machine.\n\nPossible values:\n\n- `ovirt`\n- `rhev`\n- `vmware`\n- `xen`\n- `external`\n- `hosted_engine`\n- `managed_hosted_engine`\n- `kvm`\n- `physical_machine`\n- `hyperv`"
        }, 
        "domain": {
          "description": "Domain configured for this virtual machine.", 
          "$ref": "#/definitions/Domain"
        }, 
        "virtio_scsi": {
          "description": "Reference to VirtIO SCSI configuration.", 
          "$ref": "#/definitions/VirtioScsi"
        }, 
        "placement_policy": {
          "description": "The configuration of the virtual machine's placement policy.\n\nThis configuration can be updated to pin a virtual machine to one or more hosts.\n\nNOTE: Virtual machines that are pinned to multiple hosts cannot be live migrated, but in the event of a host\nfailure, any virtual machine configured to be highly available is automatically restarted on one of the other\nhosts to which the virtual machine is pinned.\n\nFor example, to pin a virtual machine to two hosts, send the following request:\n\n[source]\n----\nPUT /api/vms/123\n----\n\nWith a request body like this:\n\n[source,xml]\n----\n<vm>\n  <high_availability>\n    <enabled>true</enabled>\n    <priority>1</priority>\n  </high_availability>\n  <placement_policy>\n    <hosts>\n      <host>\n        <name>Host1</name>\n      </host>\n      <host>\n        <name>Host2</name>\n      </host>\n    </hosts>\n    <affinity>pinned</affinity>\n  </placement_policy>\n</vm>\n----", 
          "$ref": "#/definitions/VmPlacementPolicy"
        }, 
        "guest_operating_system": {
          "description": "What operating system is installed on the virtual machine.", 
          "$ref": "#/definitions/GuestOperatingSystem"
        }, 
        "creation_time": {
          "type": "string", 
          "description": "The virtual machine creation date.", 
          "format": "epoch"
        }, 
        "custom_compatibility_version": {
          "description": "Virtual machine custom compatibility version.\n\nEnables a virtual machine to be customized to its own compatibility version.  If\n`custom_compatibility_version` is set, it overrides the cluster's compatibility version\nfor this particular virtual machine.\n\nThe compatibility version of a virtual machine is limited by the data center the virtual\nmachine resides in, and is checked against capabilities of the host the virtual machine is\nplanned to run on.", 
          "$ref": "#/definitions/Version"
        }, 
        "fqdn": {
          "type": "string", 
          "description": "Fully qualified domain name of the virtual machine."
        }, 
        "large_icon": {
          "description": "Virtual machine's large icon. Either set by user or refers to image set according to operating system.", 
          "$ref": "#/definitions/Icon"
        }, 
        "migration": {
          "description": "Reference to configuration of migration of running virtual machine to another host.", 
          "$ref": "#/definitions/MigrationOptions"
        }, 
        "io": {
          "description": "For performance tuning of IO threading.", 
          "$ref": "#/definitions/Io"
        }, 
        "migration_downtime": {
          "type": "integer", 
          "description": "Maximum time the virtual machine can be non responsive during its live migration to another host in ms.\n\nSet either explicitly for the virtual machine or by `engine-config -s DefaultMaximumMigrationDowntime=[value]`", 
          "format": "int32"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "high_availability": {
          "description": "The virtual machine high availability configuration.\nIf set, the virtual machine will be automatically restarted when it unexpectedly goes down.", 
          "$ref": "#/definitions/HighAvailability"
        }, 
        "numa_tune_mode": {
          "enum": [
            "interleave", 
            "preferred", 
            "strict"
          ], 
          "type": "string", 
          "description": "How the NUMA topology is applied."
        }, 
        "console": {
          "description": "Console configured for this virtual machine.", 
          "$ref": "#/definitions/Console"
        }, 
        "usb": {
          "description": "Configuration of USB devices for this virtual machine (count, type).", 
          "$ref": "#/definitions/Usb"
        }, 
        "start_paused": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine will be initially in 'paused' state after start."
        }, 
        "custom_properties": {
          "items": {
            "$ref": "#/definitions/CustomProperty"
          }, 
          "type": "array", 
          "description": "Properties sent to VDSM to configure various hooks."
        }, 
        "guest_time_zone": {
          "description": "What time zone is used by the virtual machine (as returned by guest agent).", 
          "$ref": "#/definitions/TimeZone"
        }, 
        "custom_emulated_machine": {
          "type": "string"
        }, 
        "bios": {
          "description": "Reference to virtual machine's BIOS configuration.", 
          "$ref": "#/definitions/Bios"
        }, 
        "payloads": {
          "items": {
            "$ref": "#/definitions/Payload"
          }, 
          "type": "array", 
          "description": "Optional payloads of the virtual machine, used for ISOs to configure it."
        }, 
        "delete_protected": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine cannot be deleted."
        }, 
        "memory": {
          "type": "integer", 
          "description": "The virtual machine's memory, in bytes.\n\nFor example, to update a virtual machine to contain 1 Gibibyte (GiB) of memory, send the following request:\n\n[source]\n----\nPUT /ovirt-engine/api/vms/123\n----\n\nWith the following request body:\n\n[source,xml]\n----\n<vm>\n  <memory>1073741824</memory>\n</vm>\n----\n\nNOTE: Memory in the example is converted to bytes using the following formula: +\n1 GiB = 2^30^ bytes = 1073741824 bytes.\n\nNOTE: Memory hot plug is supported from {product-name} 3.6 onwards. You can use the example above to increase\nmemory while the virtual machine is running.", 
          "format": "int32"
        }, 
        "serial_number": {
          "description": "Virtual machine's serial number in a cluster.", 
          "$ref": "#/definitions/SerialNumber"
        }, 
        "tunnel_migration": {
          "type": "boolean", 
          "description": "If `true`, the network data transfer will be encrypted during virtual machine live migration."
        }, 
        "type": {
          "enum": [
            "desktop", 
            "server"
          ], 
          "type": "string", 
          "description": "Determines whether the virtual machine is optimized for desktop or server."
        }, 
        "initialization": {
          "description": "Reference to virtual machine's initialization configuration.", 
          "$ref": "#/definitions/Initialization"
        }, 
        "snapshot_status": {
          "enum": [
            "in_preview", 
            "locked", 
            "ok"
          ], 
          "type": "string", 
          "description": "Status of the snapshot."
        }, 
        "stop_time": {
          "type": "string", 
          "description": "The date in which the virtual machine was stopped.", 
          "format": "epoch"
        }, 
        "status": {
          "enum": [
            "down", 
            "image_locked", 
            "migrating", 
            "not_responding", 
            "paused", 
            "powering_down", 
            "powering_up", 
            "reboot_in_progress", 
            "restoring_state", 
            "saving_state", 
            "suspended", 
            "unassigned", 
            "unknown", 
            "up", 
            "wait_for_launch"
          ], 
          "type": "string", 
          "description": "The current status of the virtual machine."
        }, 
        "rng_device": {
          "description": "Random Number Generator device configuration for this virtual machine.", 
          "$ref": "#/definitions/RngDevice"
        }, 
        "next_run_configuration_exists": {
          "type": "boolean", 
          "description": "Virtual machine configuration has been changed and requires restart of the virtual machine.\nChanged configuration is applied at processing the virtual machine's _shut down_."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "start_time": {
          "type": "string", 
          "description": "The date in which the virtual machine was started.", 
          "format": "epoch"
        }, 
        "status_detail": {
          "type": "string", 
          "description": "Human readable detail of current status."
        }, 
        "run_once": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine has been started using the _run once_ command, meaning\nit's configuration might differ from the stored one for the purpose of this single run."
        }, 
        "sso": {
          "description": "Reference to the Single Sign On configuration this virtual machine is configured for.\nThe user can be automatically signed in the virtual machine's operating system when console is opened.", 
          "$ref": "#/definitions/Sso"
        }, 
        "memory_policy": {
          "description": "Reference to virtual machine's memory management configuration.", 
          "$ref": "#/definitions/MemoryPolicy"
        }, 
        "date": {
          "type": "string", 
          "description": "The date when this snapshot has been created.", 
          "format": "epoch"
        }, 
        "soundcard_enabled": {
          "type": "boolean", 
          "description": "If `true`, the sound card is added to the virtual machine."
        }, 
        "use_latest_template_version": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine is reconfigured to the latest version of it's template when it is started."
        }, 
        "stateless": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine is stateless - it's state (disks) are rolled-back after shutdown."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "stop_reason": {
          "type": "string", 
          "description": "The reason the virtual machine was stopped.\nOptionally set by user when shutting down the virtual machine."
        }, 
        "persist_memorystate": {
          "type": "boolean", 
          "description": "Indicates if the content of the memory of the virtual machine is included in the snapshot.\n\nWhen a snapshot is created the default value is `true`."
        }, 
        "time_zone": {
          "description": "The virtual machine's time zone set by oVirt.", 
          "$ref": "#/definitions/TimeZone"
        }, 
        "snapshot_type": {
          "enum": [
            "active", 
            "preview", 
            "regular", 
            "stateless"
          ], 
          "type": "string", 
          "description": "Type of the snapshot."
        }, 
        "display": {
          "description": "The virtual machine display configuration.", 
          "$ref": "#/definitions/Display"
        }, 
        "custom_cpu_model": {
          "type": "string"
        }, 
        "small_icon": {
          "description": "Virtual machine's small icon. Either set by user or refers to image set according to operating system.", 
          "$ref": "#/definitions/Icon"
        }, 
        "lease": {
          "description": "Reference to the storage domain this virtual machine/template lease reside on.\n\nA virtual machine running with a lease requires checking while running that the lease is not taken by another\nhost, preventing another instance of this virtual machine from running on another host.\nThis provides protection against split-brain in highly available virtual machines.\nA template can also have a storage domain defined for a lease in order to have the virtual machines created\nfrom this template to be preconfigured with this storage domain as the location of the leases.", 
          "$ref": "#/definitions/StorageDomainLease"
        }, 
        "os": {
          "description": "Operating system type installed on the virtual machine.", 
          "$ref": "#/definitions/OperatingSystem"
        }, 
        "cpu": {
          "description": "The configuration of the virtual machine CPU.\n\nThe socket configuration can be updated without rebooting the virtual machine. The cores and the threads require\na reboot.\n\nFor example, to change the number of sockets to 4 immediately, and the number of cores and threads to 2 after\nreboot, send the following request:\n\n[source]\n----\nPUT /ovirt-engine/api/vms/123\n----\n\nWith a request body:\n\n[source,xml]\n----\n<vm>\n  <cpu>\n    <topology>\n      <sockets>4</sockets>\n      <cores>2</cores>\n      <threads>2</threads>\n    </topology>\n  </cpu>\n</vm>\n----", 
          "$ref": "#/definitions/Cpu"
        }, 
        "cpu_shares": {
          "type": "integer", 
          "format": "int32"
        }
      }
    }, 
    "Permit": {
      "type": "object", 
      "description": "Type represents a permit.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "administrative": {
          "type": "boolean", 
          "description": "Specifies whether permit is administrative or not."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "Action": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "exclusive": {
          "type": "boolean"
        }, 
        "proxy_ticket": {
          "$ref": "#/definitions/ProxyTicket"
        }, 
        "bricks": {
          "items": {
            "$ref": "#/definitions/GlusterBrick"
          }, 
          "type": "array"
        }, 
        "image": {
          "type": "string"
        }, 
        "check_connectivity": {
          "type": "boolean"
        }, 
        "modified_network_attachments": {
          "items": {
            "$ref": "#/definitions/NetworkAttachment"
          }, 
          "type": "array"
        }, 
        "remote_viewer_connection_file": {
          "type": "string"
        }, 
        "disk": {
          "$ref": "#/definitions/Disk"
        }, 
        "ticket": {
          "$ref": "#/definitions/Ticket"
        }, 
        "pause": {
          "type": "boolean"
        }, 
        "storage_domain": {
          "$ref": "#/definitions/StorageDomain"
        }, 
        "logical_units": {
          "items": {
            "$ref": "#/definitions/LogicalUnit"
          }, 
          "type": "array"
        }, 
        "stop_gluster_service": {
          "type": "boolean"
        }, 
        "reason": {
          "type": "string"
        }, 
        "clone_permissions": {
          "type": "boolean"
        }, 
        "restore_memory": {
          "type": "boolean"
        }, 
        "details": {
          "$ref": "#/definitions/GlusterVolumeProfileDetails"
        }, 
        "virtual_functions_configuration": {
          "$ref": "#/definitions/HostNicVirtualFunctionsConfiguration"
        }, 
        "option": {
          "$ref": "#/definitions/Option"
        }, 
        "permission": {
          "$ref": "#/definitions/Permission"
        }, 
        "vm": {
          "$ref": "#/definitions/Vm"
        }, 
        "root_password": {
          "type": "string"
        }, 
        "discard_snapshots": {
          "type": "boolean"
        }, 
        "use_cloud_init": {
          "type": "boolean"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "fix_layout": {
          "type": "boolean"
        }, 
        "disks": {
          "items": {
            "$ref": "#/definitions/Disk"
          }, 
          "type": "array"
        }, 
        "use_sysprep": {
          "type": "boolean"
        }, 
        "authorized_key": {
          "$ref": "#/definitions/AuthorizedKey"
        }, 
        "async": {
          "type": "boolean"
        }, 
        "clone": {
          "type": "boolean"
        }, 
        "storage_domains": {
          "items": {
            "$ref": "#/definitions/StorageDomain"
          }, 
          "type": "array"
        }, 
        "force": {
          "type": "boolean"
        }, 
        "job": {
          "$ref": "#/definitions/Job"
        }, 
        "is_attached": {
          "type": "boolean"
        }, 
        "connectivity_timeout": {
          "type": "integer", 
          "format": "int32"
        }, 
        "cluster": {
          "$ref": "#/definitions/Cluster"
        }, 
        "data_center": {
          "$ref": "#/definitions/DataCenter"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "vnic_profile_mappings": {
          "items": {
            "$ref": "#/definitions/VnicProfileMapping"
          }, 
          "type": "array"
        }, 
        "filter": {
          "type": "boolean"
        }, 
        "iscsi": {
          "$ref": "#/definitions/IscsiDetails"
        }, 
        "connection": {
          "$ref": "#/definitions/StorageConnection"
        }, 
        "removed_bonds": {
          "items": {
            "$ref": "#/definitions/HostNic"
          }, 
          "type": "array"
        }, 
        "attachment": {
          "$ref": "#/definitions/DiskAttachment"
        }, 
        "template": {
          "$ref": "#/definitions/Template"
        }, 
        "certificates": {
          "items": {
            "$ref": "#/definitions/Certificate"
          }, 
          "type": "array"
        }, 
        "iscsi_targets": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "modified_bonds": {
          "items": {
            "$ref": "#/definitions/HostNic"
          }, 
          "type": "array"
        }, 
        "resolution_type": {
          "type": "string"
        }, 
        "removed_network_attachments": {
          "items": {
            "$ref": "#/definitions/NetworkAttachment"
          }, 
          "type": "array"
        }, 
        "status": {
          "type": "string"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "deploy_hosted_engine": {
          "type": "boolean"
        }, 
        "fence_type": {
          "type": "string"
        }, 
        "collapse_snapshots": {
          "type": "boolean"
        }, 
        "host": {
          "$ref": "#/definitions/Host"
        }, 
        "undeploy_hosted_engine": {
          "type": "boolean"
        }, 
        "grace_period": {
          "$ref": "#/definitions/GracePeriod"
        }, 
        "power_management": {
          "$ref": "#/definitions/PowerManagement"
        }, 
        "removed_labels": {
          "items": {
            "$ref": "#/definitions/NetworkLabel"
          }, 
          "type": "array"
        }, 
        "succeeded": {
          "type": "boolean"
        }, 
        "fault": {
          "$ref": "#/definitions/Fault"
        }, 
        "modified_labels": {
          "items": {
            "$ref": "#/definitions/NetworkLabel"
          }, 
          "type": "array"
        }, 
        "maintenance_enabled": {
          "type": "boolean"
        }, 
        "reassign_bad_macs": {
          "type": "boolean"
        }, 
        "snapshot": {
          "$ref": "#/definitions/Snapshot"
        }, 
        "allow_partial_import": {
          "type": "boolean"
        }, 
        "import_as_template": {
          "type": "boolean"
        }, 
        "synchronized_network_attachments": {
          "items": {
            "$ref": "#/definitions/NetworkAttachment"
          }, 
          "type": "array"
        }, 
        "ssh": {
          "$ref": "#/definitions/Ssh"
        }
      }
    }, 
    "Floppy": {
      "type": "object", 
      "description": "The underlying representation of a floppy file.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "file": {
          "description": "File object that represent the Floppy device's content and its type.", 
          "$ref": "#/definitions/File"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "template": {
          "description": "Optionally references to a template the device is used by.", 
          "$ref": "#/definitions/Template"
        }
      }
    }, 
    "Balance": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "NetworkConfiguration": {
      "type": "object", 
      "properties": {
        "nics": {
          "items": {
            "$ref": "#/definitions/Nic"
          }, 
          "type": "array"
        }, 
        "dns": {
          "$ref": "#/definitions/Dns"
        }
      }
    }, 
    "Weight": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "factor": {
          "type": "integer", 
          "format": "int32"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }
      }
    }, 
    "HostStorage": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "username": {
          "type": "string"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "portal": {
          "type": "string"
        }, 
        "mount_options": {
          "type": "string"
        }, 
        "address": {
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "path": {
          "type": "string"
        }, 
        "override_luns": {
          "type": "boolean"
        }, 
        "password": {
          "type": "string"
        }, 
        "nfs_version": {
          "enum": [
            "auto", 
            "v3", 
            "v4", 
            "v4_1", 
            "v4_2"
          ], 
          "type": "string"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "nfs_timeo": {
          "type": "integer", 
          "description": "The time in tenths of a second to wait for a response before retrying NFS requests. The value must be in the\nrange of 0 to 65535. For more details see the description of the `timeo` mount option in the `nfs` man page.", 
          "format": "int32"
        }, 
        "target": {
          "type": "string"
        }, 
        "logical_units": {
          "items": {
            "$ref": "#/definitions/LogicalUnit"
          }, 
          "type": "array"
        }, 
        "nfs_retrans": {
          "type": "integer", 
          "description": "The number of times to retry a request before attempting further recovery actions. The value must be in the\nrange of 0 to 65535. For more details see the description of the `retrans` mount option in the `nfs` man page.", 
          "format": "int32"
        }, 
        "port": {
          "type": "integer", 
          "format": "int32"
        }, 
        "volume_group": {
          "$ref": "#/definitions/VolumeGroup"
        }, 
        "vfs_type": {
          "type": "string"
        }, 
        "type": {
          "enum": [
            "cinder", 
            "fcp", 
            "glance", 
            "glusterfs", 
            "iscsi", 
            "localfs", 
            "nfs", 
            "posixfs"
          ], 
          "type": "string"
        }
      }
    }, 
    "ProxyTicket": {
      "type": "object", 
      "properties": {
        "value": {
          "type": "string"
        }
      }
    }, 
    "AffinityLabel": {
      "type": "object", 
      "description": "The affinity label can influence virtual machine scheduling.\nIt is most frequently used to create a sub-cluster from the available hosts.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "read_only": {
          "type": "boolean", 
          "description": "The `read_only` property marks a label that can not be modified.\nThis is usually the case when listing internally-generated labels."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "OpenStackVolumeProvider": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "requires_authentication": {
          "type": "boolean", 
          "description": "Defines whether provider authentication is required or not.\n\nIf authentication is required, both `username` and `password` attributes will be used during authentication."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "url": {
          "type": "string", 
          "description": "Defines URL address of the external provider."
        }, 
        "tenant_name": {
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "username": {
          "type": "string", 
          "description": "Defines user name to be used during authentication process."
        }, 
        "authentication_url": {
          "type": "string", 
          "description": "Defines the external provider authentication URL address."
        }, 
        "password": {
          "type": "string", 
          "description": "Defines password for the user during the authentication process."
        }, 
        "properties": {
          "items": {
            "$ref": "#/definitions/Property"
          }, 
          "type": "array", 
          "description": "Array of provider name/value properties."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "HostNicVirtualFunctionsConfiguration": {
      "type": "object", 
      "description": "Describes the virtual functions configuration of an SR-IOV-enabled physical function NIC.", 
      "properties": {
        "all_networks_allowed": {
          "type": "boolean", 
          "description": "Defines whether all networks are allowed to be defined on the related virtual functions, or specified ones only."
        }, 
        "number_of_virtual_functions": {
          "type": "integer", 
          "description": "The number of virtual functions currently defined. A user-defined value between 0 and\n`max_number_of_virtual_functions`.", 
          "format": "int32"
        }, 
        "max_number_of_virtual_functions": {
          "type": "integer", 
          "description": "The maximum number of virtual functions the NIC supports. This property is read-only.", 
          "format": "int32"
        }
      }
    }, 
    "Bonding": {
      "type": "object", 
      "description": "Represents a network interfaces bond.", 
      "properties": {
        "ad_partner_mac": {
          "description": "The `ad_partner_mac` property of the partner bond in mode 4. Bond mode 4 is the 802.3ad standard, which is\nalso called dynamic link aggregation. See\nhttps://en.wikipedia.org/wiki/Link_aggregation[Wikipedia] and\nhttp://www.ieee802.org/3/hssg/public/apr07/frazier_01_0407.pdf[Presentation] for more information.\n`ad_partner_mac` is the MAC address of the system (switch) at the other end of a bond.\nThis parameter is read-only. Setting it will have no effect on the bond.\nIt is retrieved from `/sys/class/net/bondX/bonding/ad_partner_mac` file on the system where the bond is located.", 
          "$ref": "#/definitions/Mac"
        }, 
        "options": {
          "items": {
            "$ref": "#/definitions/Option"
          }, 
          "type": "array", 
          "description": "A list of option elements for a bonded interface. Each option contains property name and value attributes.\nOnly required when adding bonded interfaces."
        }, 
        "slaves": {
          "items": {
            "$ref": "#/definitions/HostNic"
          }, 
          "type": "array", 
          "description": "A list of slave NICs for a bonded interface.\nOnly required when adding bonded interfaces."
        }
      }
    }, 
    "Cluster": {
      "type": "object", 
      "description": "Type representation of a cluster.\n\nA JSON representation of a cluster\n\n[source]\n----\n{\n  \"cluster\" : [ {\n    \"ballooning_enabled\" : \"false\",\n    \"cpu\" : {\n      \"architecture\" : \"x86_64\",\n      \"type\" : \"Intel SandyBridge Family\"\n    },\n    \"custom_scheduling_policy_properties\" : {\n      \"property\" : [ {\n        \"name\" : \"HighUtilization\",\n        \"value\" : \"80\"\n      }, {\n        \"name\" : \"CpuOverCommitDurationMinutes\",\n        \"value\" : \"2\"\n      } ]\n    },\n    \"error_handling\" : {\n      \"on_error\" : \"migrate\"\n    },\n    \"fencing_policy\" : {\n      \"enabled\" : \"true\",\n      \"skip_if_connectivity_broken\" : {\n        \"enabled\" : \"false\",\n        \"threshold\" : \"50\"\n      },\n      \"skip_if_gluster_bricks_up\" : \"false\",\n      \"skip_if_gluster_quorum_not_met\" : \"false\",\n      \"skip_if_sd_active\" : {\n        \"enabled\" : \"false\"\n      }\n    },\n    \"gluster_service\" : \"false\",\n    \"ha_reservation\" : \"false\",\n    \"ksm\" : {\n      \"enabled\" : \"true\",\n      \"merge_across_nodes\" : \"true\"\n    },\n    \"maintenance_reason_required\" : \"false\",\n    \"memory_policy\" : {\n      \"over_commit\" : {\n        \"percent\" : \"100\"\n      },\n      \"transparent_hugepages\" : {\n        \"enabled\" : \"true\"\n      }\n    },\n    \"migration\" : {\n      \"auto_converge\" : \"inherit\",\n      \"bandwidth\" : {\n        \"assignment_method\" : \"auto\"\n      },\n      \"compressed\" : \"inherit\",\n      \"policy\" : {\n        \"id\" : \"00000000-0000-0000-0000-000000000000\"\n      }\n    },\n    \"optional_reason\" : \"false\",\n    \"required_rng_sources\" : {\n      \"required_rng_source\" : [ \"random\" ]\n    },\n    \"switch_type\" : \"legacy\",\n    \"threads_as_cores\" : \"false\",\n    \"trusted_service\" : \"false\",\n    \"tunnel_migration\" : \"false\",\n    \"version\" : {\n      \"major\" : \"4\",\n      \"minor\" : \"1\"\n    },\n    \"virt_service\" : \"true\",\n    \"data_center\" : {\n      \"href\" : \"/ovirt-engine/api/datacenters/123\",\n      \"id\" : \"123\"\n    },\n    \"mac_pool\" : {\n      \"href\" : \"/ovirt-engine/api/macpools/456\",\n      \"id\" : \"456\"\n    },\n    \"scheduling_policy\" : {\n      \"href\" : \"/ovirt-engine/api/schedulingpolicies/789\",\n      \"id\" : \"789\"\n    },\n    \"actions\" : {\n      \"link\" : [ {\n        \"href\" : \"/ovirt-engine/api/clusters/234/resetemulatedmachine\",\n        \"rel\" : \"resetemulatedmachine\"\n      } ]\n    },\n    \"name\" : \"Default\",\n    \"description\" : \"The default server cluster\",\n    \"href\" : \"/ovirt-engine/api/clusters/234\",\n    \"id\" : \"234\",\n    \"link\" : [ {\n      \"href\" : \"/ovirt-engine/api/clusters/234/permissions\",\n      \"rel\" : \"permissions\"\n    }, {\n      \"href\" : \"/ovirt-engine/api/clusters/234/cpuprofiles\",\n      \"rel\" : \"cpuprofiles\"\n    }, {\n      \"href\" : \"/ovirt-engine/api/clusters/234/networkfilters\",\n      \"rel\" : \"networkfilters\"\n    }, {\n      \"href\" : \"/ovirt-engine/api/clusters/234/networks\",\n      \"rel\" : \"networks\"\n    }, {\n      \"href\" : \"/ovirt-engine/api/clusters/234/affinitygroups\",\n      \"rel\" : \"affinitygroups\"\n    }, {\n      \"href\" : \"/ovirt-engine/api/clusters/234/glusterhooks\",\n      \"rel\" : \"glusterhooks\"\n    }, {\n      \"href\" : \"/ovirt-engine/api/clusters/234/glustervolumes\",\n      \"rel\" : \"glustervolumes\"\n    } ]\n  } ]\n}\n----", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "ha_reservation": {
          "type": "boolean"
        }, 
        "fencing_policy": {
          "description": "Custom fencing policy can be defined for a cluster.\n\nHere is an example:\n\n[source]\n----\nPUT /ovirt-engine/api/cluster/123\n----\n\nWith request body:\n\n[source,xml]\n----\n<cluster>\n  <fencing_policy>\n    <enabled>true</enabled>\n    <skip_if_sd_active>\n      <enabled>false</enabled>\n    </skip_if_sd_active>\n    <skip_if_connectivity_broken>\n      <enabled>false</enabled>\n      <threshold>50</threshold>\n    </skip_if_connectivity_broken>\n  </fencing_policy>\n</cluster>\n----", 
          "$ref": "#/definitions/FencingPolicy"
        }, 
        "custom_scheduling_policy_properties": {
          "items": {
            "$ref": "#/definitions/Property"
          }, 
          "type": "array", 
          "description": "Custom scheduling policy properties of the cluster.\nThese optional properties override the properties of the\nscheduling policy specified by the `scheduling_policy` link,\nand apply only for this specific cluster.\n\nFor example, to update the custom properties of the cluster,\nsend a request:\n\n[source]\n----\nPUT /ovirt-engine/api/clusters/123\n----\n\nWith a request body:\n\n[source,xml]\n----\n<cluster>\n  <custom_scheduling_policy_properties>\n    <property>\n      <name>HighUtilization</name>\n      <value>70</value>\n    </property>\n  </custom_scheduling_policy_properties>\n</cluster>\n----\n\nUpdate operations using the `custom_scheduling_policy_properties` attribute\nwill not update the the properties of the scheduling policy specified by\nthe `scheduling_policy` link,\nthey will only be reflected on this specific cluster."
        }, 
        "optional_reason": {
          "type": "boolean"
        }, 
        "threads_as_cores": {
          "type": "boolean"
        }, 
        "gluster_service": {
          "type": "boolean"
        }, 
        "migration": {
          "$ref": "#/definitions/MigrationOptions"
        }, 
        "memory_policy": {
          "$ref": "#/definitions/MemoryPolicy"
        }, 
        "maintenance_reason_required": {
          "type": "boolean"
        }, 
        "error_handling": {
          "$ref": "#/definitions/ErrorHandling"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "switch_type": {
          "enum": [
            "legacy", 
            "ovs"
          ], 
          "type": "string", 
          "description": "Type of switch to be used by all networks in given cluster."
        }, 
        "supported_versions": {
          "items": {
            "$ref": "#/definitions/Version"
          }, 
          "type": "array"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "gluster_tuned_profile": {
          "type": "string", 
          "description": "The name of the https://fedorahosted.org/tuned[tuned] profile\nto set on all the hosts in the cluster. This is not mandatory\nand relevant only for clusters with gluster service."
        }, 
        "required_rng_sources": {
          "items": {
            "enum": [
              "hwrng", 
              "random", 
              "urandom"
            ], 
            "type": "string"
          }, 
          "type": "array", 
          "description": "Set of random number generator (RNG) sources required from each host in the cluster.\n\nWhen read, it returns the implicit `urandom` (for cluster version 4.1 and higher) or `random` (for cluster\nversion 4.0 and lower) plus additional selected RNG sources. When written, the implicit `urandom` and `random`\nRNG sources cannot be removed.\n\n[IMPORTANT]\n====\nBefore version 4.1 of the engine, the set of required random number generators was completely controllable by the\nadministrator; any source could be added or removed, including the `random` source. But starting with version 4.1,\nthe `urandom` and `random` sources will always be part of the set, and can't be removed.\n====\n\n[IMPORTANT]\n====\nEngine version 4.1 introduces a new RNG source `urandom` that replaces `random` RNG source in clusters with\ncompatibility version 4.1 or higher.\n===="
        }, 
        "cpu": {
          "$ref": "#/definitions/Cpu"
        }, 
        "ballooning_enabled": {
          "type": "boolean"
        }, 
        "version": {
          "description": "The compatibility version of the cluster.\n\nAll hosts in this cluster must support at least this compatibility version.\n\nFor example:\n\n[source]\n----\nGET /ovirt-engine/api/clusters/123\n----\n\nWill respond:\n\n[source,xml]\n----\n<cluster>\n  ...\n  <version>\n    <major>4</major>\n    <minor>0</minor>\n  </version>\n  ...\n</cluster>\n----\n\nTo update the compatibility version, use:\n\n[source]\n----\nPUT /ovirt-engine/api/clusters/123\n----\n\nWith a request body:\n\n[source,xml]\n----\n<cluster>\n  <version>\n    <major>4</major>\n    <minor>1</minor>\n  </version>\n</cluster>\n----\n\nIn order to update the cluster compatibility version, all hosts in the cluster must support the new compatibility version.", 
          "$ref": "#/definitions/Version"
        }, 
        "virt_service": {
          "type": "boolean"
        }, 
        "ksm": {
          "$ref": "#/definitions/Ksm"
        }, 
        "serial_number": {
          "$ref": "#/definitions/SerialNumber"
        }, 
        "trusted_service": {
          "type": "boolean"
        }, 
        "tunnel_migration": {
          "type": "boolean"
        }, 
        "display": {
          "$ref": "#/definitions/Display"
        }
      }
    }, 
    "VirtualNumaNode": {
      "type": "object", 
      "description": "Represents the virtual NUMA node.\n\nAn example XML representation:\n\n[source,xml]\n----\n<vm_numa_node href=\"/ovirt-engine/api/vms/123/numanodes/456\" id=\"456\">\n  <cpu>\n    <cores>\n      <core>\n        <index>0</index>\n      </core>\n    </cores>\n  </cpu>\n  <index>0</index>\n  <memory>1024</memory>\n  <numa_node_pins>\n    <numa_node_pin>\n      <index>0</index>\n    </numa_node_pin>\n  </numa_node_pins>\n  <vm href=\"/ovirt-engine/api/vms/123\" id=\"123\" />\n</vm_numa_node>\n----", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "index": {
          "type": "integer", 
          "format": "int32"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "numa_node_pins": {
          "items": {
            "$ref": "#/definitions/NumaNodePin"
          }, 
          "type": "array"
        }, 
        "memory": {
          "type": "integer", 
          "description": "Memory of the NUMA node in MB.", 
          "format": "int32"
        }, 
        "cpu": {
          "$ref": "#/definitions/Cpu"
        }, 
        "node_distance": {
          "type": "string"
        }
      }
    }, 
    "ProductInfo": {
      "type": "object", 
      "description": "Product information.\n\nThe entry point contains a `product_info` element to help an API user determine the legitimacy of the\n{product-name} environment. This includes the name of the product, the `vendor` and the `version`.\n\nVerify a genuine {product-name} environment\n\nThe follow elements identify a genuine {product-name} environment:\n\n[source]\n----\n<api>\n...\n<product_info>\n  <name>oVirt Engine</name>\n  <vendor>ovirt.org</vendor>\n  <version>\n    <build>0</build>\n    <full_version>4.1.0_master</full_version>\n    <major>4</major>\n    <minor>1</minor>\n    <revision>0</revision>\n  </version>\n</product_info>\n...\n</api>\n----", 
      "properties": {
        "version": {
          "description": "The version number of the product.", 
          "$ref": "#/definitions/Version"
        }, 
        "vendor": {
          "type": "string", 
          "description": "The name of the vendor, for example `ovirt.org`."
        }, 
        "name": {
          "type": "string", 
          "description": "The name of the product, for example `oVirt Engine`."
        }
      }
    }, 
    "Watchdog": {
      "type": "object", 
      "description": "This type represents a watchdog configuration.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "action": {
          "enum": [
            "dump", 
            "none", 
            "pause", 
            "poweroff", 
            "reset"
          ], 
          "type": "string", 
          "description": "Watchdog action to be performed when watchdog is triggered."
        }, 
        "model": {
          "enum": [
            "i6300esb"
          ], 
          "type": "string", 
          "description": "Model of watchdog device. Currently supported only I6300ESB."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "OpenStackProvider": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "requires_authentication": {
          "type": "boolean", 
          "description": "Defines whether provider authentication is required or not.\n\nIf authentication is required, both `username` and `password` attributes will be used during authentication."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "url": {
          "type": "string", 
          "description": "Defines URL address of the external provider."
        }, 
        "tenant_name": {
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "username": {
          "type": "string", 
          "description": "Defines user name to be used during authentication process."
        }, 
        "authentication_url": {
          "type": "string", 
          "description": "Defines the external provider authentication URL address."
        }, 
        "password": {
          "type": "string", 
          "description": "Defines password for the user during the authentication process."
        }, 
        "properties": {
          "items": {
            "$ref": "#/definitions/Property"
          }, 
          "type": "array", 
          "description": "Array of provider name/value properties."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "AuthorizedKey": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "key": {
          "type": "string"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }
      }
    }, 
    "Bookmark": {
      "type": "object", 
      "description": "Represents a bookmark in the system.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "value": {
          "type": "string", 
          "description": "The bookmark value, representing a search\nin the engine."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "QuotaStorageLimit": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "limit": {
          "type": "integer", 
          "format": "int32"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "usage": {
          "type": "number", 
          "format": "double"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "SerialNumber": {
      "type": "object", 
      "properties": {
        "policy": {
          "enum": [
            "custom", 
            "host", 
            "vm"
          ], 
          "type": "string"
        }, 
        "value": {
          "type": "string"
        }
      }
    }, 
    "VnicPassThrough": {
      "type": "object", 
      "properties": {
        "mode": {
          "enum": [
            "disabled", 
            "enabled"
          ], 
          "type": "string", 
          "description": "Defines whether the vNIC will be implemented as a virtual device, or as a pass-through to a host device."
        }
      }
    }, 
    "FopStatistic": {
      "type": "object", 
      "properties": {
        "statistics": {
          "items": {
            "$ref": "#/definitions/Statistic"
          }, 
          "type": "array"
        }, 
        "name": {
          "type": "string"
        }
      }
    }, 
    "GlusterMemoryPool": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "hot_count": {
          "type": "integer", 
          "format": "int32"
        }, 
        "max_stdalloc": {
          "type": "integer", 
          "format": "int32"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "max_alloc": {
          "type": "integer", 
          "format": "int32"
        }, 
        "cold_count": {
          "type": "integer", 
          "format": "int32"
        }, 
        "padded_size": {
          "type": "integer", 
          "format": "int32"
        }, 
        "alloc_count": {
          "type": "integer", 
          "format": "int32"
        }, 
        "type": {
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "pool_misses": {
          "type": "integer", 
          "format": "int32"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "TimeZone": {
      "type": "object", 
      "description": "Time zone representation.", 
      "properties": {
        "utc_offset": {
          "type": "string", 
          "description": "Offset from https://en.wikipedia.org/wiki/Coordinated_Universal_Time[UTC]."
        }, 
        "name": {
          "type": "string", 
          "description": "Name of the time zone."
        }
      }
    }, 
    "OperatingSystem": {
      "type": "object", 
      "description": "Information describing the operating system. This is used for both virtual machines and hosts.", 
      "properties": {
        "kernel": {
          "type": "string", 
          "description": "Path to custom kernel on ISO storage domain if Linux operating system is used.\n\nFor example `iso://vmlinuz-3.10.0-514.6.1.el7.x86_64`.\n\nNOTE: Not used for hosts."
        }, 
        "reported_kernel_cmdline": {
          "type": "string", 
          "description": "The host kernel command line as reported by a running host.\n\nThis is a read-only attribute. Attempts to change this attribute are silently ignored.\n\nNOTE: This attribute is currently only used for hosts."
        }, 
        "boot": {
          "description": "Configuration of the boot sequence.\n\nNOTE: Not used for hosts.", 
          "$ref": "#/definitions/Boot"
        }, 
        "cmdline": {
          "type": "string", 
          "description": "Custom kernel parameters for start the virtual machine with if Linux operating system is used.\n\nNOTE: Not used for hosts."
        }, 
        "initrd": {
          "type": "string", 
          "description": "Path to custom initial ramdisk on ISO storage domain if Linux operating system is used.\n\nFor example `iso://initramfs-3.10.0-514.6.1.el7.x86_64.img`.\n\nNOTE: Not used for hosts."
        }, 
        "version": {
          "$ref": "#/definitions/Version"
        }, 
        "custom_kernel_cmdline": {
          "type": "string", 
          "description": "A custom part of the host kernel command line. This will be merged with the existing kernel command line.\n\nYou must reinstall and then reboot the host to apply the changes implemented by this attribute.\n\nDuring each host deploy procedure, kernel parameters that were added\nin the previous host deploy procedure are removed using\n`grubby --update-kernel DEFAULT --remove-args <previous_custom_params>`, and the current\nkernel command line customization is applied using\n`grubby --update-kernel DEFAULT --args <custom_params>`. The Manager internally keeps track of the\nlast-applied kernel parameters customization.\n\nNOTE: This attribute is currently only used for hosts."
        }, 
        "type": {
          "type": "string", 
          "description": "Operating system name in human readable form.\n\nFor example `Fedora` or `RHEL`. In general one of the names returned by the <<services/operating_systems,\noperating system>> service.\n\nNOTE: Read only for hosts."
        }
      }
    }, 
    "ProfileDetail": {
      "type": "object", 
      "properties": {
        "duration": {
          "type": "integer", 
          "format": "int32"
        }, 
        "statistics": {
          "items": {
            "$ref": "#/definitions/Statistic"
          }, 
          "type": "array"
        }, 
        "fop_statistics": {
          "items": {
            "$ref": "#/definitions/FopStatistic"
          }, 
          "type": "array"
        }, 
        "profile_type": {
          "type": "string"
        }, 
        "block_statistics": {
          "items": {
            "$ref": "#/definitions/BlockStatistic"
          }, 
          "type": "array"
        }
      }
    }, 
    "Product": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "HostNic": {
      "type": "object", 
      "description": "Represents a host NIC.\n\nFor example, the XML representation of a host NIC looks like this:\n\n[source,xml]\n----\n<host_nic href=\"/ovirt-engine/api/hosts/123/nics/456\" id=\"456\">\n  <name>eth0</name>\n  <boot_protocol>static</boot_protocol>\n  <bridged>true</bridged>\n  <custom_configuration>true</custom_configuration>\n  <ip>\n    <address>192.168.122.39</address>\n    <gateway>192.168.122.1</gateway>\n    <netmask>255.255.255.0</netmask>\n    <version>v4</version>\n  </ip>\n  <ipv6>\n    <gateway>::</gateway>\n    <version>v6</version>\n  </ipv6>\n  <ipv6_boot_protocol>none</ipv6_boot_protocol>\n  <mac>\n    <address>52:54:00:0c:79:1d</address>\n  </mac>\n  <mtu>1500</mtu>\n  <status>up</status>\n</host_nic>\n----\n\nA bonded interface is represented as a <<types/host_nic, HostNic>> object\ncontaining the `bonding` and `slaves` attributes.\n\nFor example, the XML representation of a bonded host NIC looks like this:\n\n[source,xml]\n----\n<host_nic href=\"/ovirt-engine/api/hosts/123/nics/456\" id=\"456\">\n  <name>bond0</name>\n  <mac address=\"00:00:00:00:00:00\"/>\n  <ip>\n    <address>192.168.122.39</address>\n    <gateway>192.168.122.1</gateway>\n    <netmask>255.255.255.0</netmask>\n    <version>v4</version>\n  </ip>\n  <boot_protocol>dhcp</boot_protocol>\n  <bonding>\n    <options>\n      <option>\n        <name>mode</name>\n        <value>4</value>\n        <type>Dynamic link aggregation (802.3ad)</type>\n      </option>\n      <option>\n        <name>miimon</name>\n        <value>100</value>\n      </option>\n    </options>\n    <slaves>\n      <host_nic id=\"123\"/>\n      <host_nic id=\"456\"/>\n    </slaves>\n  </bonding>\n  <mtu>1500</mtu>\n  <bridged>true</bridged>\n  <custom_configuration>false</custom_configuration>\n</host_nic>\n----", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "status": {
          "enum": [
            "down", 
            "up"
          ], 
          "type": "string"
        }, 
        "virtual_functions_configuration": {
          "description": "Describes the virtual functions configuration of a physical function NIC.", 
          "$ref": "#/definitions/HostNicVirtualFunctionsConfiguration"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "custom_configuration": {
          "type": "boolean"
        }, 
        "ipv6_boot_protocol": {
          "enum": [
            "autoconf", 
            "dhcp", 
            "none", 
            "static"
          ], 
          "type": "string", 
          "description": "The IPv6 boot protocol configuration of the NIC."
        }, 
        "base_interface": {
          "type": "string", 
          "description": "The base interface of the NIC."
        }, 
        "boot_protocol": {
          "enum": [
            "autoconf", 
            "dhcp", 
            "none", 
            "static"
          ], 
          "type": "string", 
          "description": "The IPv4 boot protocol configuration of the NIC."
        }, 
        "vlan": {
          "$ref": "#/definitions/Vlan"
        }, 
        "ad_aggregator_id": {
          "type": "integer", 
          "description": "The `ad_aggregator_id` property of a bond or bond slave, for bonds in mode 4.\nBond mode 4 is the 802.3ad standard, also called dynamic link aggregation.\n(See https://en.wikipedia.org/wiki/Link_aggregation[Wikipedia] and\nhttp://www.ieee802.org/3/hssg/public/apr07/frazier_01_0407.pdf[Presentation] for more information).\nThis is only valid for bonds in mode 4, or NICs which are part of a bond.\nIt is not present for bonds in other modes, or NICs which are not part of a bond in mode 4.\nThe `ad_aggregator_id` property indicates which of the bond slaves are active. The value of the\n`ad_aggregator_id` of an active slave is the same as the value of the `ad_aggregator_id` property of the bond.\nThis parameter is read only. Setting it will have no effect on the bond/NIC.\nIt is retrieved from the `/sys/class/net/bondX/bonding/ad_aggregator` file for a bond, and the\n`/sys/class/net/ensX/bonding_slave/ad_aggregator_id` file for a NIC.", 
          "format": "int32"
        }, 
        "mac": {
          "description": "The MAC address of the NIC.", 
          "$ref": "#/definitions/Mac"
        }, 
        "check_connectivity": {
          "type": "boolean"
        }, 
        "mtu": {
          "type": "integer", 
          "description": "The maximum transmission unit for the interface.", 
          "format": "int32"
        }, 
        "speed": {
          "type": "integer", 
          "format": "int32"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "bonding": {
          "description": "The bonding parameters of the NIC.", 
          "$ref": "#/definitions/Bonding"
        }, 
        "statistics": {
          "items": {
            "$ref": "#/definitions/Statistic"
          }, 
          "type": "array", 
          "description": "A link to the statistics of the NIC.\n\nThe data types for HostNic statistical values:\n\n* data.current.rx - The rate in bytes per second of data received.\n* data.current.tx - The rate in bytes per second of data transmitted.\n* data.total.rx - Total received data.\n* data.total.tx - Total transmitted data.\n* errors.total.rx - Total errors from receiving data.\n* errors.total.tx - Total errors from transmitting data."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "override_configuration": {
          "type": "boolean"
        }, 
        "network_labels": {
          "items": {
            "$ref": "#/definitions/NetworkLabel"
          }, 
          "type": "array", 
          "description": "The labels that are applied to this NIC."
        }, 
        "properties": {
          "items": {
            "$ref": "#/definitions/Property"
          }, 
          "type": "array"
        }, 
        "ip": {
          "description": "The IPv4 address of the NIC.", 
          "$ref": "#/definitions/Ip"
        }, 
        "bridged": {
          "type": "boolean", 
          "description": "Defines the bridged network status. Set to `true` for a bridged network\nand `false` for a bridgeless network."
        }, 
        "ipv6": {
          "description": "The IPv6 address of the NIC.", 
          "$ref": "#/definitions/Ip"
        }
      }
    }, 
    "Nic": {
      "type": "object", 
      "description": "Represents a virtual machine NIC.\n\nFor example, the XML representation of a NIC will look like this:\n\n[source,xml]\n----\n<nic href=\"/ovirt-engine/api/vms/123/nics/456\" id=\"456\">\n  <name>nic1</name>\n  <vm href=\"/ovirt-engine/api/vms/123\" id=\"123\"/>\n  <interface>virtio</interface>\n  <linked>true</linked>\n  <mac>\n    <address>02:00:00:00:00:00</address>\n  </mac>\n  <plugged>true</plugged>\n  <vnic_profile href=\"/ovirt-engine/api/vnicprofiles/789\" id=\"789\"/>\n</nic>\n----", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "linked": {
          "type": "boolean", 
          "description": "Defines if the NIC is linked to the virtual machine."
        }, 
        "boot_protocol": {
          "enum": [
            "autoconf", 
            "dhcp", 
            "none", 
            "static"
          ], 
          "type": "string", 
          "description": "Defines how an IP address is assigned to the NIC."
        }, 
        "plugged": {
          "type": "boolean", 
          "description": "Defines if the NIC is plugged in to the virtual machine."
        }, 
        "mac": {
          "description": "The MAC address of the interface.", 
          "$ref": "#/definitions/Mac"
        }, 
        "on_boot": {
          "type": "boolean", 
          "description": "Defines if the network interface should be activated upon operation system startup."
        }, 
        "interface": {
          "enum": [
            "e1000", 
            "pci_passthrough", 
            "rtl8139", 
            "rtl8139_virtio", 
            "spapr_vlan", 
            "virtio"
          ], 
          "type": "string", 
          "description": "The type of driver used for the NIC."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "SeLinux": {
      "type": "object", 
      "description": "Represents SELinux in the system.", 
      "properties": {
        "mode": {
          "enum": [
            "disabled", 
            "enforcing", 
            "permissive"
          ], 
          "type": "string", 
          "description": "SELinux current mode."
        }
      }
    }, 
    "Quota": {
      "type": "object", 
      "description": "Represents a quota object.\n\nAn example XML representation of a quota:\n\n[source,xml]\n----\n<quota href=\"/ovirt-engine/api/datacenters/7044934e/quotas/dcad5ddc\" id=\"dcad5ddc\">\n  <name>My Quota</name>\n  <description>A quota for my oVirt environment</description>\n  <cluster_hard_limit_pct>0</cluster_hard_limit_pct>\n  <cluster_soft_limit_pct>0</cluster_soft_limit_pct>\n  <data_center href=\"/ovirt-engine/api/datacenters/7044934e\" id=\"7044934e\"/>\n  <storage_hard_limit_pct>0</storage_hard_limit_pct>\n  <storage_soft_limit_pct>0</storage_soft_limit_pct>\n</quota>\n----", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "disks": {
          "items": {
            "$ref": "#/definitions/Disk"
          }, 
          "type": "array"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "cluster_soft_limit_pct": {
          "type": "integer", 
          "format": "int32"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "cluster_hard_limit_pct": {
          "type": "integer", 
          "format": "int32"
        }, 
        "storage_hard_limit_pct": {
          "type": "integer", 
          "format": "int32"
        }, 
        "data_center": {
          "$ref": "#/definitions/DataCenter"
        }, 
        "storage_soft_limit_pct": {
          "type": "integer", 
          "format": "int32"
        }, 
        "vms": {
          "items": {
            "$ref": "#/definitions/Vm"
          }, 
          "type": "array"
        }, 
        "users": {
          "items": {
            "$ref": "#/definitions/User"
          }, 
          "type": "array"
        }
      }
    }, 
    "VnicProfileMapping": {
      "type": "object", 
      "description": "Maps an external virtual NIC profile to one that exists in the {engine-name}.\n\nIf, for example, the desired virtual NIC profile's mapping includes the following two lines:\n\n[cols=\"25,35,40\"]\n|===\n|Source network name|Source network profile name|Target virtual NIC profile ID\n\n|`red`\n|`gold`\n|`738dd914-8ec8-4a8b-8628-34672a5d449b`\n\n|`blue`\n|`silver`\n|`892a12ec-2028-4451-80aa-ff3bf55d6bac`\n\n|===\n\nIt should be expressed in the following form:\n\n[source,xml]\n----\n<vnic_profile_mappings>\n  <vnic_profile_mapping>\n    <source_network_name>red</source_network_name>\n    <source_network_profile_name>gold</source_network_profile_name>\n    <target_vnic_profile id=\"738dd914-8ec8-4a8b-8628-34672a5d449b\"/>\n  </vnic_profile_mapping>\n  <vnic_profile_mapping>\n    <source_network_name>blue</source_network_name>\n    <source_network_profile_name>silver</source_network_profile_name>\n    <target_vnic_profile id=\"892a12ec-2028-4451-80aa-ff3bf55d6bac\"/>\n  </vnic_profile_mapping>\n</vnic_profile_mappings>\n----", 
      "properties": {
        "target_vnic_profile": {
          "description": "Points to an existing virtual NIC profile.", 
          "$ref": "#/definitions/VnicProfile"
        }, 
        "source_network_name": {
          "type": "string", 
          "description": "Specifies the name of the external network."
        }, 
        "source_network_profile_name": {
          "type": "string", 
          "description": "Specifies the name of the external network profile."
        }
      }
    }, 
    "Mac": {
      "type": "object", 
      "description": "Represents a MAC address of a virtual network interface.", 
      "properties": {
        "address": {
          "type": "string", 
          "description": "MAC address."
        }
      }
    }, 
    "ExternalDiscoveredHost": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "ip": {
          "type": "string"
        }, 
        "mac": {
          "type": "string"
        }, 
        "subnet_name": {
          "type": "string"
        }, 
        "last_report": {
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "HighAvailability": {
      "type": "object", 
      "description": "Type representing high availability of a virtual machine.", 
      "properties": {
        "priority": {
          "type": "integer", 
          "description": "Indicates the priority of the virtual machine inside the run and migration queues.\n\nVirtual machines with higher priorities will be started and migrated before virtual machines with lower\npriorities.\n\nThe value is an integer between 0 and 100. The higher the value, the higher the priority.\n\nThe graphical user interface (GUI) does not allow specifying all the possible values, instead\nit only allows you to select _Low_, _Medium_ or _High_. When the value is set using the API, the GUI\nwill set the label as follows:\n\n|===\n|API Value |GUI Label\n\n|0 - 25 |Low\n|26 - 74 |Medium\n|75 - 100 |High\n\n|===\n\nWhen the label is selected using the GUI, the value in the API will be set as follows:\n\n|===\n|GUI Label |API Value\n\n|Low |1\n|Medium |50\n|High |100\n\n|===", 
          "format": "int32"
        }, 
        "enabled": {
          "type": "boolean", 
          "description": "Define if the virtual machine should be consider highly available."
        }
      }
    }, 
    "VcpuPin": {
      "type": "object", 
      "properties": {
        "cpu_set": {
          "type": "string"
        }, 
        "vcpu": {
          "type": "integer", 
          "format": "int32"
        }
      }
    }, 
    "CpuType": {
      "type": "object", 
      "description": "Describes a supported CPU type.", 
      "properties": {
        "level": {
          "type": "integer", 
          "description": "The level of the CPU type.", 
          "format": "int32"
        }, 
        "architecture": {
          "enum": [
            "ppc64", 
            "undefined", 
            "x86_64"
          ], 
          "type": "string", 
          "description": "The architecture of the CPU."
        }, 
        "name": {
          "type": "string", 
          "description": "The name of the CPU type, for example `Intel Conroe Family`."
        }
      }
    }, 
    "Ticket": {
      "type": "object", 
      "description": "Type representing a ticket that allows virtual machine access.", 
      "properties": {
        "value": {
          "type": "string", 
          "description": "The virtual machine access ticket."
        }, 
        "expiry": {
          "type": "integer", 
          "description": "Time to live for the ticket in seconds.", 
          "format": "int32"
        }
      }
    }, 
    "GlusterServerHook": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "status": {
          "enum": [
            "disabled", 
            "enabled", 
            "missing"
          ], 
          "type": "string"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "content_type": {
          "enum": [
            "binary", 
            "text"
          ], 
          "type": "string"
        }, 
        "checksum": {
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }
      }
    }, 
    "GlusterVolumeProfileDetails": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "nfs_profile_details": {
          "items": {
            "$ref": "#/definitions/NfsProfileDetail"
          }, 
          "type": "array"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "brick_profile_details": {
          "items": {
            "$ref": "#/definitions/BrickProfileDetail"
          }, 
          "type": "array"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "GlusterVolume": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "redundancy_count": {
          "type": "integer", 
          "format": "int32"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "replica_count": {
          "type": "integer", 
          "format": "int32"
        }, 
        "volume_type": {
          "enum": [
            "disperse", 
            "distribute", 
            "distributed_disperse", 
            "distributed_replicate", 
            "distributed_stripe", 
            "distributed_striped_replicate", 
            "replicate", 
            "stripe", 
            "striped_replicate"
          ], 
          "type": "string"
        }, 
        "options": {
          "items": {
            "$ref": "#/definitions/Option"
          }, 
          "type": "array"
        }, 
        "transport_types": {
          "items": {
            "enum": [
              "rdma", 
              "tcp"
            ], 
            "type": "string"
          }, 
          "type": "array"
        }, 
        "disperse_count": {
          "type": "integer", 
          "format": "int32"
        }, 
        "status": {
          "enum": [
            "down", 
            "unknown", 
            "up"
          ], 
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "stripe_count": {
          "type": "integer", 
          "format": "int32"
        }
      }
    }, 
    "GlusterBrick": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "status": {
          "enum": [
            "down", 
            "unknown", 
            "up"
          ], 
          "type": "string"
        }, 
        "fs_name": {
          "type": "string"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "pid": {
          "type": "integer", 
          "format": "int32"
        }, 
        "server_id": {
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "device": {
          "type": "string"
        }, 
        "mnt_options": {
          "type": "string"
        }, 
        "memory_pools": {
          "items": {
            "$ref": "#/definitions/GlusterMemoryPool"
          }, 
          "type": "array"
        }, 
        "brick_dir": {
          "type": "string"
        }, 
        "gluster_clients": {
          "items": {
            "$ref": "#/definitions/GlusterClient"
          }, 
          "type": "array"
        }, 
        "port": {
          "type": "integer", 
          "format": "int32"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "QuotaClusterLimit": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "memory_limit": {
          "type": "number", 
          "format": "double"
        }, 
        "memory_usage": {
          "type": "number", 
          "format": "double"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "vcpu_usage": {
          "type": "integer", 
          "format": "int32"
        }, 
        "vcpu_limit": {
          "type": "integer", 
          "format": "int32"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "File": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "content": {
          "type": "string"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "type": {
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "VmPlacementPolicy": {
      "type": "object", 
      "properties": {
        "affinity": {
          "enum": [
            "migratable", 
            "pinned", 
            "user_migratable"
          ], 
          "type": "string"
        }
      }
    }, 
    "SchedulingPolicy": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "locked": {
          "type": "boolean"
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "default_policy": {
          "type": "boolean"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "properties": {
          "items": {
            "$ref": "#/definitions/Property"
          }, 
          "type": "array"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }
      }
    }, 
    "OpenStackNetworkProvider": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "read_only": {
          "type": "boolean", 
          "description": "Indicates whether the provider is read-only.\n\nA read-only provider does not allow adding, modifying, or deleting of networks or subnets. Port-related\noperations are allowed, as they are required for the provisioning of virtual NICs."
        }, 
        "agent_configuration": {
          "description": "Agent configuration settings.", 
          "$ref": "#/definitions/AgentConfiguration"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "url": {
          "type": "string", 
          "description": "Defines URL address of the external provider."
        }, 
        "tenant_name": {
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "username": {
          "type": "string", 
          "description": "Defines user name to be used during authentication process."
        }, 
        "authentication_url": {
          "type": "string", 
          "description": "Defines the external provider authentication URL address."
        }, 
        "requires_authentication": {
          "type": "boolean", 
          "description": "Defines whether provider authentication is required or not.\n\nIf authentication is required, both `username` and `password` attributes will be used during authentication."
        }, 
        "password": {
          "type": "string", 
          "description": "Defines password for the user during the authentication process."
        }, 
        "type": {
          "enum": [
            "external", 
            "neutron"
          ], 
          "type": "string", 
          "description": "The type of provider."
        }, 
        "properties": {
          "items": {
            "$ref": "#/definitions/Property"
          }, 
          "type": "array", 
          "description": "Array of provider name/value properties."
        }, 
        "plugin_type": {
          "enum": [
            "open_vswitch"
          ], 
          "type": "string", 
          "description": "Network plugin type."
        }
      }
    }, 
    "OpenstackVolumeAuthenticationKey": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "value": {
          "type": "string"
        }, 
        "creation_date": {
          "type": "string", 
          "format": "epoch"
        }, 
        "usage_type": {
          "enum": [
            "ceph"
          ], 
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "uuid": {
          "type": "string"
        }
      }
    }, 
    "Value": {
      "type": "object", 
      "properties": {
        "datum": {
          "type": "number", 
          "format": "double"
        }, 
        "detail": {
          "type": "string"
        }
      }
    }, 
    "ExternalHostProvider": {
      "type": "object", 
      "description": "Represents an external host provider,\nsuch as Foreman or Satellite.\n\nSee https://www.theforeman.org/ for more details on Foreman.\nSee https://access.redhat.com/products/red-hat-satellite\nfor more details on Red Hat Satellite.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "requires_authentication": {
          "type": "boolean", 
          "description": "Defines whether provider authentication is required or not.\n\nIf authentication is required, both `username` and `password` attributes will be used during authentication."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "url": {
          "type": "string", 
          "description": "Defines URL address of the external provider."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "username": {
          "type": "string", 
          "description": "Defines user name to be used during authentication process."
        }, 
        "authentication_url": {
          "type": "string", 
          "description": "Defines the external provider authentication URL address."
        }, 
        "password": {
          "type": "string", 
          "description": "Defines password for the user during the authentication process."
        }, 
        "properties": {
          "items": {
            "$ref": "#/definitions/Property"
          }, 
          "type": "array", 
          "description": "Array of provider name/value properties."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "MigrationPolicy": {
      "type": "object", 
      "description": "A policy describing how the migration is treated, such as convergence or\nhow many parallel migrations are allowed.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "RngDevice": {
      "type": "object", 
      "description": "Random number generator (RNG) device model.", 
      "properties": {
        "source": {
          "enum": [
            "hwrng", 
            "random", 
            "urandom"
          ], 
          "type": "string", 
          "description": "Backend of the random number generator device."
        }, 
        "rate": {
          "description": "Determines maximum speed of consumption of bytes from random number generator device.", 
          "$ref": "#/definitions/Rate"
        }
      }
    }, 
    "UnmanagedNetwork": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "VmBase": {
      "type": "object", 
      "description": "Represents basic virtual machine configuration.\nThis is used by virtual machines, templates and instance types.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "origin": {
          "type": "string", 
          "description": "The origin of this virtual machine.\n\nPossible values:\n\n- `ovirt`\n- `rhev`\n- `vmware`\n- `xen`\n- `external`\n- `hosted_engine`\n- `managed_hosted_engine`\n- `kvm`\n- `physical_machine`\n- `hyperv`"
        }, 
        "domain": {
          "description": "Domain configured for this virtual machine.", 
          "$ref": "#/definitions/Domain"
        }, 
        "virtio_scsi": {
          "description": "Reference to VirtIO SCSI configuration.", 
          "$ref": "#/definitions/VirtioScsi"
        }, 
        "creation_time": {
          "type": "string", 
          "description": "The virtual machine creation date.", 
          "format": "epoch"
        }, 
        "custom_compatibility_version": {
          "description": "Virtual machine custom compatibility version.\n\nEnables a virtual machine to be customized to its own compatibility version.  If\n`custom_compatibility_version` is set, it overrides the cluster's compatibility version\nfor this particular virtual machine.\n\nThe compatibility version of a virtual machine is limited by the data center the virtual\nmachine resides in, and is checked against capabilities of the host the virtual machine is\nplanned to run on.", 
          "$ref": "#/definitions/Version"
        }, 
        "large_icon": {
          "description": "Virtual machine's large icon. Either set by user or refers to image set according to operating system.", 
          "$ref": "#/definitions/Icon"
        }, 
        "migration": {
          "description": "Reference to configuration of migration of running virtual machine to another host.", 
          "$ref": "#/definitions/MigrationOptions"
        }, 
        "io": {
          "description": "For performance tuning of IO threading.", 
          "$ref": "#/definitions/Io"
        }, 
        "migration_downtime": {
          "type": "integer", 
          "description": "Maximum time the virtual machine can be non responsive during its live migration to another host in ms.\n\nSet either explicitly for the virtual machine or by `engine-config -s DefaultMaximumMigrationDowntime=[value]`", 
          "format": "int32"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "high_availability": {
          "description": "The virtual machine high availability configuration.\nIf set, the virtual machine will be automatically restarted when it unexpectedly goes down.", 
          "$ref": "#/definitions/HighAvailability"
        }, 
        "console": {
          "description": "Console configured for this virtual machine.", 
          "$ref": "#/definitions/Console"
        }, 
        "usb": {
          "description": "Configuration of USB devices for this virtual machine (count, type).", 
          "$ref": "#/definitions/Usb"
        }, 
        "custom_properties": {
          "items": {
            "$ref": "#/definitions/CustomProperty"
          }, 
          "type": "array", 
          "description": "Properties sent to VDSM to configure various hooks."
        }, 
        "custom_emulated_machine": {
          "type": "string"
        }, 
        "bios": {
          "description": "Reference to virtual machine's BIOS configuration.", 
          "$ref": "#/definitions/Bios"
        }, 
        "delete_protected": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine cannot be deleted."
        }, 
        "memory": {
          "type": "integer", 
          "description": "The virtual machine's memory, in bytes.\n\nFor example, to update a virtual machine to contain 1 Gibibyte (GiB) of memory, send the following request:\n\n[source]\n----\nPUT /ovirt-engine/api/vms/123\n----\n\nWith the following request body:\n\n[source,xml]\n----\n<vm>\n  <memory>1073741824</memory>\n</vm>\n----\n\nNOTE: Memory in the example is converted to bytes using the following formula: +\n1 GiB = 2^30^ bytes = 1073741824 bytes.\n\nNOTE: Memory hot plug is supported from {product-name} 3.6 onwards. You can use the example above to increase\nmemory while the virtual machine is running.", 
          "format": "int32"
        }, 
        "serial_number": {
          "description": "Virtual machine's serial number in a cluster.", 
          "$ref": "#/definitions/SerialNumber"
        }, 
        "tunnel_migration": {
          "type": "boolean", 
          "description": "If `true`, the network data transfer will be encrypted during virtual machine live migration."
        }, 
        "type": {
          "enum": [
            "desktop", 
            "server"
          ], 
          "type": "string", 
          "description": "Determines whether the virtual machine is optimized for desktop or server."
        }, 
        "lease": {
          "description": "Reference to the storage domain this virtual machine/template lease reside on.\n\nA virtual machine running with a lease requires checking while running that the lease is not taken by another\nhost, preventing another instance of this virtual machine from running on another host.\nThis provides protection against split-brain in highly available virtual machines.\nA template can also have a storage domain defined for a lease in order to have the virtual machines created\nfrom this template to be preconfigured with this storage domain as the location of the leases.", 
          "$ref": "#/definitions/StorageDomainLease"
        }, 
        "rng_device": {
          "description": "Random Number Generator device configuration for this virtual machine.", 
          "$ref": "#/definitions/RngDevice"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "initialization": {
          "description": "Reference to virtual machine's initialization configuration.", 
          "$ref": "#/definitions/Initialization"
        }, 
        "sso": {
          "description": "Reference to the Single Sign On configuration this virtual machine is configured for.\nThe user can be automatically signed in the virtual machine's operating system when console is opened.", 
          "$ref": "#/definitions/Sso"
        }, 
        "memory_policy": {
          "description": "Reference to virtual machine's memory management configuration.", 
          "$ref": "#/definitions/MemoryPolicy"
        }, 
        "soundcard_enabled": {
          "type": "boolean", 
          "description": "If `true`, the sound card is added to the virtual machine."
        }, 
        "stateless": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine is stateless - it's state (disks) are rolled-back after shutdown."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "custom_cpu_model": {
          "type": "string"
        }, 
        "time_zone": {
          "description": "The virtual machine's time zone set by oVirt.", 
          "$ref": "#/definitions/TimeZone"
        }, 
        "display": {
          "description": "The virtual machine display configuration.", 
          "$ref": "#/definitions/Display"
        }, 
        "start_paused": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine will be initially in 'paused' state after start."
        }, 
        "small_icon": {
          "description": "Virtual machine's small icon. Either set by user or refers to image set according to operating system.", 
          "$ref": "#/definitions/Icon"
        }, 
        "os": {
          "description": "Operating system type installed on the virtual machine.", 
          "$ref": "#/definitions/OperatingSystem"
        }, 
        "cpu": {
          "description": "The configuration of the virtual machine CPU.\n\nThe socket configuration can be updated without rebooting the virtual machine. The cores and the threads require\na reboot.\n\nFor example, to change the number of sockets to 4 immediately, and the number of cores and threads to 2 after\nreboot, send the following request:\n\n[source]\n----\nPUT /ovirt-engine/api/vms/123\n----\n\nWith a request body:\n\n[source,xml]\n----\n<vm>\n  <cpu>\n    <topology>\n      <sockets>4</sockets>\n      <cores>2</cores>\n      <threads>2</threads>\n    </topology>\n  </cpu>\n</vm>\n----", 
          "$ref": "#/definitions/Cpu"
        }, 
        "cpu_shares": {
          "type": "integer", 
          "format": "int32"
        }
      }
    }, 
    "Ip": {
      "type": "object", 
      "description": "Represents the IP configuration of a network interface.", 
      "properties": {
        "netmask": {
          "type": "string", 
          "description": "The network mask.\n\nFor IPv6 addresses the value is an integer in the range of 0-128, which represents the subnet prefix."
        }, 
        "version": {
          "enum": [
            "v4", 
            "v6"
          ], 
          "type": "string", 
          "description": "The version of the IP protocol.\n\nNOTE: From version 4.1 of the Manager this attribute will be optional, and when a value is not provided, it will\nbe inferred from the value of the `address` attribute."
        }, 
        "gateway": {
          "type": "string", 
          "description": "The address of the default gateway."
        }, 
        "address": {
          "type": "string", 
          "description": "The text representation of the IP address.\n\nFor example, an IPv4 address will be represented as follows:\n\n[source,xml]\n----\n<ip>\n  <address>192.168.0.1</address>\n  ...\n</ip>\n----\n\nAn IPv6 address will be represented as follows:\n\n[source,xml]\n----\n<ip>\n  <address>2620:52:0:20f0:4216:7eff:feaa:1b50</address>\n  ...\n</ip>\n----"
        }
      }
    }, 
    "ImageTransfer": {
      "type": "object", 
      "description": "This type contains information regarding an image transfer being performed.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "direction": {
          "enum": [
            "download", 
            "upload"
          ], 
          "type": "string", 
          "description": "The direction indicates whether the transfer is sending image data (`upload`) or\nreceiving image data (`download`).\n\nIf a direction is not set during an addition of a new transfer,\nThe default direction for the transfer will be `upload`."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "signed_ticket": {
          "type": "string", 
          "description": "The signed ticket that should be attached as an `Authentication` header in the\nHTTPS request for the proxy server to input or output to (See the `proxy_url` attribute)."
        }, 
        "proxy_url": {
          "type": "string", 
          "description": "The URL of the proxy server that the user inputs or outputs to. This attribute is\navailable only if the image transfer entity is in the <<types/image_transfer_phase, transferring>>\nphase. See `phase` for details."
        }, 
        "phase": {
          "enum": [
            "cancelled", 
            "finalizing_failure", 
            "finalizing_success", 
            "finished_failure", 
            "finished_success", 
            "initializing", 
            "paused_system", 
            "paused_user", 
            "resuming", 
            "transferring", 
            "unknown"
          ], 
          "type": "string", 
          "description": "The current phase of the image transfer in progress. Each transfer needs a managed\nsession, which must be opened for the user to input or output an image.\nPlease refer to <<services/image_transfer, image transfer>> for further\ndocumentation."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "Vm": {
      "type": "object", 
      "description": "Represents a virtual machine.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "origin": {
          "type": "string", 
          "description": "The origin of this virtual machine.\n\nPossible values:\n\n- `ovirt`\n- `rhev`\n- `vmware`\n- `xen`\n- `external`\n- `hosted_engine`\n- `managed_hosted_engine`\n- `kvm`\n- `physical_machine`\n- `hyperv`"
        }, 
        "domain": {
          "description": "Domain configured for this virtual machine.", 
          "$ref": "#/definitions/Domain"
        }, 
        "virtio_scsi": {
          "description": "Reference to VirtIO SCSI configuration.", 
          "$ref": "#/definitions/VirtioScsi"
        }, 
        "placement_policy": {
          "description": "The configuration of the virtual machine's placement policy.\n\nThis configuration can be updated to pin a virtual machine to one or more hosts.\n\nNOTE: Virtual machines that are pinned to multiple hosts cannot be live migrated, but in the event of a host\nfailure, any virtual machine configured to be highly available is automatically restarted on one of the other\nhosts to which the virtual machine is pinned.\n\nFor example, to pin a virtual machine to two hosts, send the following request:\n\n[source]\n----\nPUT /api/vms/123\n----\n\nWith a request body like this:\n\n[source,xml]\n----\n<vm>\n  <high_availability>\n    <enabled>true</enabled>\n    <priority>1</priority>\n  </high_availability>\n  <placement_policy>\n    <hosts>\n      <host>\n        <name>Host1</name>\n      </host>\n      <host>\n        <name>Host2</name>\n      </host>\n    </hosts>\n    <affinity>pinned</affinity>\n  </placement_policy>\n</vm>\n----", 
          "$ref": "#/definitions/VmPlacementPolicy"
        }, 
        "guest_operating_system": {
          "description": "What operating system is installed on the virtual machine.", 
          "$ref": "#/definitions/GuestOperatingSystem"
        }, 
        "creation_time": {
          "type": "string", 
          "description": "The virtual machine creation date.", 
          "format": "epoch"
        }, 
        "custom_compatibility_version": {
          "description": "Virtual machine custom compatibility version.\n\nEnables a virtual machine to be customized to its own compatibility version.  If\n`custom_compatibility_version` is set, it overrides the cluster's compatibility version\nfor this particular virtual machine.\n\nThe compatibility version of a virtual machine is limited by the data center the virtual\nmachine resides in, and is checked against capabilities of the host the virtual machine is\nplanned to run on.", 
          "$ref": "#/definitions/Version"
        }, 
        "fqdn": {
          "type": "string", 
          "description": "Fully qualified domain name of the virtual machine."
        }, 
        "large_icon": {
          "description": "Virtual machine's large icon. Either set by user or refers to image set according to operating system.", 
          "$ref": "#/definitions/Icon"
        }, 
        "migration": {
          "description": "Reference to configuration of migration of running virtual machine to another host.", 
          "$ref": "#/definitions/MigrationOptions"
        }, 
        "io": {
          "description": "For performance tuning of IO threading.", 
          "$ref": "#/definitions/Io"
        }, 
        "migration_downtime": {
          "type": "integer", 
          "description": "Maximum time the virtual machine can be non responsive during its live migration to another host in ms.\n\nSet either explicitly for the virtual machine or by `engine-config -s DefaultMaximumMigrationDowntime=[value]`", 
          "format": "int32"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "high_availability": {
          "description": "The virtual machine high availability configuration.\nIf set, the virtual machine will be automatically restarted when it unexpectedly goes down.", 
          "$ref": "#/definitions/HighAvailability"
        }, 
        "console": {
          "description": "Console configured for this virtual machine.", 
          "$ref": "#/definitions/Console"
        }, 
        "usb": {
          "description": "Configuration of USB devices for this virtual machine (count, type).", 
          "$ref": "#/definitions/Usb"
        }, 
        "start_paused": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine will be initially in 'paused' state after start."
        }, 
        "custom_properties": {
          "items": {
            "$ref": "#/definitions/CustomProperty"
          }, 
          "type": "array", 
          "description": "Properties sent to VDSM to configure various hooks."
        }, 
        "guest_time_zone": {
          "description": "What time zone is used by the virtual machine (as returned by guest agent).", 
          "$ref": "#/definitions/TimeZone"
        }, 
        "custom_emulated_machine": {
          "type": "string"
        }, 
        "bios": {
          "description": "Reference to virtual machine's BIOS configuration.", 
          "$ref": "#/definitions/Bios"
        }, 
        "payloads": {
          "items": {
            "$ref": "#/definitions/Payload"
          }, 
          "type": "array", 
          "description": "Optional payloads of the virtual machine, used for ISOs to configure it."
        }, 
        "delete_protected": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine cannot be deleted."
        }, 
        "memory": {
          "type": "integer", 
          "description": "The virtual machine's memory, in bytes.\n\nFor example, to update a virtual machine to contain 1 Gibibyte (GiB) of memory, send the following request:\n\n[source]\n----\nPUT /ovirt-engine/api/vms/123\n----\n\nWith the following request body:\n\n[source,xml]\n----\n<vm>\n  <memory>1073741824</memory>\n</vm>\n----\n\nNOTE: Memory in the example is converted to bytes using the following formula: +\n1 GiB = 2^30^ bytes = 1073741824 bytes.\n\nNOTE: Memory hot plug is supported from {product-name} 3.6 onwards. You can use the example above to increase\nmemory while the virtual machine is running.", 
          "format": "int32"
        }, 
        "serial_number": {
          "description": "Virtual machine's serial number in a cluster.", 
          "$ref": "#/definitions/SerialNumber"
        }, 
        "tunnel_migration": {
          "type": "boolean", 
          "description": "If `true`, the network data transfer will be encrypted during virtual machine live migration."
        }, 
        "type": {
          "enum": [
            "desktop", 
            "server"
          ], 
          "type": "string", 
          "description": "Determines whether the virtual machine is optimized for desktop or server."
        }, 
        "initialization": {
          "description": "Reference to virtual machine's initialization configuration.", 
          "$ref": "#/definitions/Initialization"
        }, 
        "stop_time": {
          "type": "string", 
          "description": "The date in which the virtual machine was stopped.", 
          "format": "epoch"
        }, 
        "status": {
          "enum": [
            "down", 
            "image_locked", 
            "migrating", 
            "not_responding", 
            "paused", 
            "powering_down", 
            "powering_up", 
            "reboot_in_progress", 
            "restoring_state", 
            "saving_state", 
            "suspended", 
            "unassigned", 
            "unknown", 
            "up", 
            "wait_for_launch"
          ], 
          "type": "string", 
          "description": "The current status of the virtual machine."
        }, 
        "rng_device": {
          "description": "Random Number Generator device configuration for this virtual machine.", 
          "$ref": "#/definitions/RngDevice"
        }, 
        "next_run_configuration_exists": {
          "type": "boolean", 
          "description": "Virtual machine configuration has been changed and requires restart of the virtual machine.\nChanged configuration is applied at processing the virtual machine's _shut down_."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "start_time": {
          "type": "string", 
          "description": "The date in which the virtual machine was started.", 
          "format": "epoch"
        }, 
        "status_detail": {
          "type": "string", 
          "description": "Human readable detail of current status."
        }, 
        "run_once": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine has been started using the _run once_ command, meaning\nit's configuration might differ from the stored one for the purpose of this single run."
        }, 
        "sso": {
          "description": "Reference to the Single Sign On configuration this virtual machine is configured for.\nThe user can be automatically signed in the virtual machine's operating system when console is opened.", 
          "$ref": "#/definitions/Sso"
        }, 
        "memory_policy": {
          "description": "Reference to virtual machine's memory management configuration.", 
          "$ref": "#/definitions/MemoryPolicy"
        }, 
        "soundcard_enabled": {
          "type": "boolean", 
          "description": "If `true`, the sound card is added to the virtual machine."
        }, 
        "use_latest_template_version": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine is reconfigured to the latest version of it's template when it is started."
        }, 
        "stateless": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine is stateless - it's state (disks) are rolled-back after shutdown."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "stop_reason": {
          "type": "string", 
          "description": "The reason the virtual machine was stopped.\nOptionally set by user when shutting down the virtual machine."
        }, 
        "time_zone": {
          "description": "The virtual machine's time zone set by oVirt.", 
          "$ref": "#/definitions/TimeZone"
        }, 
        "numa_tune_mode": {
          "enum": [
            "interleave", 
            "preferred", 
            "strict"
          ], 
          "type": "string", 
          "description": "How the NUMA topology is applied."
        }, 
        "display": {
          "description": "The virtual machine display configuration.", 
          "$ref": "#/definitions/Display"
        }, 
        "custom_cpu_model": {
          "type": "string"
        }, 
        "small_icon": {
          "description": "Virtual machine's small icon. Either set by user or refers to image set according to operating system.", 
          "$ref": "#/definitions/Icon"
        }, 
        "lease": {
          "description": "Reference to the storage domain this virtual machine/template lease reside on.\n\nA virtual machine running with a lease requires checking while running that the lease is not taken by another\nhost, preventing another instance of this virtual machine from running on another host.\nThis provides protection against split-brain in highly available virtual machines.\nA template can also have a storage domain defined for a lease in order to have the virtual machines created\nfrom this template to be preconfigured with this storage domain as the location of the leases.", 
          "$ref": "#/definitions/StorageDomainLease"
        }, 
        "os": {
          "description": "Operating system type installed on the virtual machine.", 
          "$ref": "#/definitions/OperatingSystem"
        }, 
        "cpu": {
          "description": "The configuration of the virtual machine CPU.\n\nThe socket configuration can be updated without rebooting the virtual machine. The cores and the threads require\na reboot.\n\nFor example, to change the number of sockets to 4 immediately, and the number of cores and threads to 2 after\nreboot, send the following request:\n\n[source]\n----\nPUT /ovirt-engine/api/vms/123\n----\n\nWith a request body:\n\n[source,xml]\n----\n<vm>\n  <cpu>\n    <topology>\n      <sockets>4</sockets>\n      <cores>2</cores>\n      <threads>2</threads>\n    </topology>\n  </cpu>\n</vm>\n----", 
          "$ref": "#/definitions/Cpu"
        }, 
        "cpu_shares": {
          "type": "integer", 
          "format": "int32"
        }
      }
    }, 
    "LogicalUnit": {
      "type": "object", 
      "properties": {
        "status": {
          "enum": [
            "free", 
            "unusable", 
            "used"
          ], 
          "type": "string"
        }, 
        "username": {
          "type": "string"
        }, 
        "discard_max_size": {
          "type": "integer", 
          "description": "The maximum number of bytes that can be discarded by the logical unit's\nunderlying storage in a single operation.\nA value of 0 means that the device does not support discard functionality.\n\nNOTE: This is the software limit, and not the hardware limit, as noted in the\nhttps://www.kernel.org/doc/Documentation/block/queue-sysfs.txt[documentation] of\n`queue-sysfs` for `discard_max_bytes`.", 
          "format": "int32"
        }, 
        "volume_group_id": {
          "type": "string"
        }, 
        "paths": {
          "type": "integer", 
          "format": "int32"
        }, 
        "vendor_id": {
          "type": "string"
        }, 
        "portal": {
          "type": "string"
        }, 
        "address": {
          "type": "string"
        }, 
        "lun_mapping": {
          "type": "integer", 
          "format": "int32"
        }, 
        "serial": {
          "type": "string"
        }, 
        "password": {
          "type": "string"
        }, 
        "port": {
          "type": "integer", 
          "format": "int32"
        }, 
        "target": {
          "type": "string"
        }, 
        "discard_zeroes_data": {
          "type": "boolean", 
          "description": "True, if previously discarded blocks in the logical\nunit's underlying storage are read back as zeros.\nFor more information please see the\nhttps://www.kernel.org/doc/Documentation/block/queue-sysfs.txt[documentation]\nof `queue-sysfs` for `discard_zeroes_data`."
        }, 
        "product_id": {
          "type": "string"
        }, 
        "storage_domain_id": {
          "type": "string"
        }, 
        "disk_id": {
          "type": "string"
        }, 
        "id": {
          "type": "string"
        }, 
        "size": {
          "type": "integer", 
          "format": "int32"
        }
      }
    }, 
    "SkipIfSdActive": {
      "type": "object", 
      "description": "This type represents the storage related\nconfiguration in the fencing policy.", 
      "properties": {
        "enabled": {
          "type": "boolean", 
          "description": "If enabled, we will skip fencing in case the host\nmaintains its lease in the storage. It means that\nif the host still has storage access then it won't\nget fenced."
        }
      }
    }, 
    "Rate": {
      "type": "object", 
      "description": "Determines maximum speed of consumption of bytes from random number generator device.", 
      "properties": {
        "bytes": {
          "type": "integer", 
          "description": "Number of bytes allowed to consume per period.", 
          "format": "int32"
        }, 
        "period": {
          "type": "integer", 
          "description": "Duration of one period in milliseconds.", 
          "format": "int32"
        }
      }
    }, 
    "Fault": {
      "type": "object", 
      "properties": {
        "reason": {
          "type": "string"
        }, 
        "detail": {
          "type": "string"
        }
      }
    }, 
    "Io": {
      "type": "object", 
      "properties": {
        "threads": {
          "type": "integer", 
          "format": "int32"
        }
      }
    }, 
    "MacPool": {
      "type": "object", 
      "description": "Represents a MAC address pool.\n\nExample of an XML representation of a MAC address pool:\n\n[source,xml]\n----\n<mac_pool href=\"/ovirt-engine/api/macpools/123\" id=\"123\">\n  <name>Default</name>\n  <description>Default MAC pool</description>\n  <allow_duplicates>false</allow_duplicates>\n  <default_pool>true</default_pool>\n  <ranges>\n    <range>\n      <from>00:1A:4A:16:01:51</from>\n      <to>00:1A:4A:16:01:E6</to>\n    </range>\n  </ranges>\n</mac_pool>\n----", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "ranges": {
          "items": {
            "$ref": "#/definitions/Range"
          }, 
          "type": "array", 
          "description": "Defines the range of MAC addresses for the pool. Multiple ranges can be defined."
        }, 
        "allow_duplicates": {
          "type": "boolean", 
          "description": "Defines whether duplicate MAC addresses are permitted in the pool. If not specified, defaults to `false`."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "default_pool": {
          "type": "boolean", 
          "description": "Defines whether this is the default pool. If not specified, defaults to `false`."
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "ReportedDevice": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "ips": {
          "items": {
            "$ref": "#/definitions/Ip"
          }, 
          "type": "array"
        }, 
        "mac": {
          "$ref": "#/definitions/Mac"
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "type": {
          "enum": [
            "network"
          ], 
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }
  }
}