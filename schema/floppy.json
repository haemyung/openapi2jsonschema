{
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "description": "The underlying representation of a floppy file.", 
  "properties": {
    "comment": {
      "type": "string", 
      "description": "Free text containing comments about this object."
    }, 
    "description": {
      "type": "string", 
      "description": "A human-readable description in plain text."
    }, 
    "template": {
      "type": "object", 
      "description": "Type representing a virtual machine template.\nThis allows a rapid instanstiation of virtual machines with common configuration and disk states.", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "origin": {
          "type": "string", 
          "description": "The origin of this virtual machine.\n\nPossible values:\n\n- `ovirt`\n- `rhev`\n- `vmware`\n- `xen`\n- `external`\n- `hosted_engine`\n- `managed_hosted_engine`\n- `kvm`\n- `physical_machine`\n- `hyperv`"
        }, 
        "domain": {
          "type": "object", 
          "description": "This type represents a directory service domain.", 
          "properties": {
            "comment": {
              "type": "string", 
              "description": "Free text containing comments about this object."
            }, 
            "user": {
              "type": "object", 
              "description": "Represents a user in the system.", 
              "properties": {
                "comment": {
                  "type": "string", 
                  "description": "Free text containing comments about this object."
                }, 
                "last_name": {
                  "type": "string"
                }, 
                "description": {
                  "type": "string", 
                  "description": "A human-readable description in plain text."
                }, 
                "name": {
                  "type": "string", 
                  "description": "A human-readable name in plain text."
                }, 
                "domain_entry_id": {
                  "type": "string"
                }, 
                "namespace": {
                  "type": "string", 
                  "description": "Namespace where the user resides. When using the authorization provider that stores users in the LDAP server,\nthis attribute equals the naming context of the LDAP server.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-ldap for more information.\nWhen using the built-in authorization provider that stores users in the database this attribute is ignored.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-jdbc for more information."
                }, 
                "id": {
                  "type": "string", 
                  "description": "A unique identifier."
                }, 
                "department": {
                  "type": "string"
                }, 
                "logged_in": {
                  "type": "boolean"
                }, 
                "password": {
                  "type": "string"
                }, 
                "user_name": {
                  "type": "string", 
                  "description": "The user's username. The format depends on authorization provider type. In most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In Active Directory it is the User Principal Name (UPN). `UPN` or\n`uid` must be followed by the authorization provider name. For example, in the case of LDAP's `uid` attribute it is:\n`myuser@myextension-authz`. In the case of Active Directory using `UPN` it is:\n`myuser@mysubdomain.mydomain.com@myextension-authz`. This attribute is a required parameter when adding a new user."
                }, 
                "email": {
                  "type": "string"
                }, 
                "principal": {
                  "type": "string", 
                  "description": "Similar to `user_name`. The format depends on the LDAP provider. With most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In the case of Active Directory it is the User Principal Name (UPN)."
                }
              }
            }, 
            "description": {
              "type": "string", 
              "description": "A human-readable description in plain text."
            }, 
            "name": {
              "type": "string", 
              "description": "A human-readable name in plain text."
            }, 
            "id": {
              "type": "string", 
              "description": "A unique identifier."
            }
          }
        }, 
        "virtio_scsi": {
          "type": "object", 
          "description": "Type representing the support of virtio-SCSI.\nIf it supported we use virtio driver for SCSI guest device.", 
          "properties": {
            "enabled": {
              "type": "boolean", 
              "description": "Enable Virtio SCSI support."
            }
          }
        }, 
        "creation_time": {
          "type": "string", 
          "description": "The virtual machine creation date.", 
          "format": "epoch"
        }, 
        "custom_compatibility_version": {
          "type": "object", 
          "properties": {
            "comment": {
              "type": "string", 
              "description": "Free text containing comments about this object."
            }, 
            "major": {
              "type": "integer", 
              "format": "int32"
            }, 
            "description": {
              "type": "string", 
              "description": "A human-readable description in plain text."
            }, 
            "full_version": {
              "type": "string"
            }, 
            "name": {
              "type": "string", 
              "description": "A human-readable name in plain text."
            }, 
            "build": {
              "type": "integer", 
              "format": "int32"
            }, 
            "id": {
              "type": "string", 
              "description": "A unique identifier."
            }, 
            "minor": {
              "type": "integer", 
              "format": "int32"
            }, 
            "revision": {
              "type": "integer", 
              "format": "int32"
            }
          }
        }, 
        "large_icon": {
          "type": "object", 
          "description": "Icon of virtual machine or template.", 
          "properties": {
            "comment": {
              "type": "string", 
              "description": "Free text containing comments about this object."
            }, 
            "description": {
              "type": "string", 
              "description": "A human-readable description in plain text."
            }, 
            "media_type": {
              "type": "string", 
              "description": "Format of icon file.\n\nOne of:\n\n* `image/jpeg`\n* `image/png`\n* `image/gif`"
            }, 
            "data": {
              "type": "string", 
              "description": "Base64 encode content of the icon file."
            }, 
            "id": {
              "type": "string", 
              "description": "A unique identifier."
            }, 
            "name": {
              "type": "string", 
              "description": "A human-readable name in plain text."
            }
          }
        }, 
        "migration": {
          "type": "object", 
          "description": "The type for migration options.", 
          "properties": {
            "auto_converge": {
              "enum": [
                "false", 
                "inherit", 
                "true"
              ], 
              "type": "string"
            }, 
            "bandwidth": {
              "type": "object", 
              "description": "Defines the bandwidth used by migration.", 
              "properties": {
                "custom_value": {
                  "type": "integer", 
                  "description": "Custom bandwidth in Mbps. Will be applied only if the `assignmentMethod` attribute is `custom`.", 
                  "format": "int32"
                }, 
                "assignment_method": {
                  "enum": [
                    "auto", 
                    "custom", 
                    "hypervisor_default"
                  ], 
                  "type": "string", 
                  "description": "The method used to assign the bandwidth."
                }
              }
            }, 
            "compressed": {
              "enum": [
                "false", 
                "inherit", 
                "true"
              ], 
              "type": "string"
            }
          }
        }, 
        "io": {
          "type": "object", 
          "properties": {
            "threads": {
              "type": "integer", 
              "format": "int32"
            }
          }
        }, 
        "migration_downtime": {
          "type": "integer", 
          "description": "Maximum time the virtual machine can be non responsive during its live migration to another host in ms.\n\nSet either explicitly for the virtual machine or by `engine-config -s DefaultMaximumMigrationDowntime=[value]`", 
          "format": "int32"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "high_availability": {
          "type": "object", 
          "description": "Type representing high availability of a virtual machine.", 
          "properties": {
            "priority": {
              "type": "integer", 
              "description": "Indicates the priority of the virtual machine inside the run and migration queues.\n\nVirtual machines with higher priorities will be started and migrated before virtual machines with lower\npriorities.\n\nThe value is an integer between 0 and 100. The higher the value, the higher the priority.\n\nThe graphical user interface (GUI) does not allow specifying all the possible values, instead\nit only allows you to select _Low_, _Medium_ or _High_. When the value is set using the API, the GUI\nwill set the label as follows:\n\n|===\n|API Value |GUI Label\n\n|0 - 25 |Low\n|26 - 74 |Medium\n|75 - 100 |High\n\n|===\n\nWhen the label is selected using the GUI, the value in the API will be set as follows:\n\n|===\n|GUI Label |API Value\n\n|Low |1\n|Medium |50\n|High |100\n\n|===", 
              "format": "int32"
            }, 
            "enabled": {
              "type": "boolean", 
              "description": "Define if the virtual machine should be consider highly available."
            }
          }
        }, 
        "console": {
          "type": "object", 
          "description": "Representation for serial console device.", 
          "properties": {
            "enabled": {
              "type": "boolean", 
              "description": "Enable/disable the serial console device."
            }
          }
        }, 
        "usb": {
          "type": "object", 
          "description": "Configuration of the USB device of a virtual machine.", 
          "properties": {
            "enabled": {
              "type": "boolean", 
              "description": "Determines whether the USB device should be included or not."
            }, 
            "type": {
              "enum": [
                "legacy", 
                "native"
              ], 
              "type": "string", 
              "description": "USB type, currently only `native` is supported."
            }
          }
        }, 
        "custom_properties": {
          "items": {
            "type": "object", 
            "description": "Custom property representation.", 
            "properties": {
              "regexp": {
                "type": "string", 
                "description": "A regular expression defining the available values a custom property can get."
              }, 
              "name": {
                "type": "string", 
                "description": "Property name."
              }, 
              "value": {
                "type": "string", 
                "description": "Property value."
              }
            }
          }, 
          "type": "array", 
          "description": "Properties sent to VDSM to configure various hooks."
        }, 
        "custom_emulated_machine": {
          "type": "string"
        }, 
        "bios": {
          "type": "object", 
          "properties": {
            "boot_menu": {
              "type": "object", 
              "description": "Represents boot menu configuration\nfor virtual machines and templates.", 
              "properties": {
                "enabled": {
                  "type": "boolean", 
                  "description": "Whether the boot menu is enabled\nfor this virtual machine (or template), or not."
                }
              }
            }
          }
        }, 
        "version": {
          "type": "object", 
          "description": "Type representing a version of a virtual machine template.", 
          "properties": {
            "version_name": {
              "type": "string", 
              "description": "The name of this version."
            }, 
            "version_number": {
              "type": "integer", 
              "description": "The index of this version in the versions hierarchy of the template.\nThe index 1 represents the original version of a template that is also called base version.", 
              "format": "int32"
            }
          }
        }, 
        "delete_protected": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine cannot be deleted."
        }, 
        "memory": {
          "type": "integer", 
          "description": "The virtual machine's memory, in bytes.\n\nFor example, to update a virtual machine to contain 1 Gibibyte (GiB) of memory, send the following request:\n\n[source]\n----\nPUT /ovirt-engine/api/vms/123\n----\n\nWith the following request body:\n\n[source,xml]\n----\n<vm>\n  <memory>1073741824</memory>\n</vm>\n----\n\nNOTE: Memory in the example is converted to bytes using the following formula: +\n1 GiB = 2^30^ bytes = 1073741824 bytes.\n\nNOTE: Memory hot plug is supported from {product-name} 3.6 onwards. You can use the example above to increase\nmemory while the virtual machine is running.", 
          "format": "int32"
        }, 
        "serial_number": {
          "type": "object", 
          "properties": {
            "policy": {
              "enum": [
                "custom", 
                "host", 
                "vm"
              ], 
              "type": "string"
            }, 
            "value": {
              "type": "string"
            }
          }
        }, 
        "tunnel_migration": {
          "type": "boolean", 
          "description": "If `true`, the network data transfer will be encrypted during virtual machine live migration."
        }, 
        "type": {
          "enum": [
            "desktop", 
            "server"
          ], 
          "type": "string", 
          "description": "Determines whether the virtual machine is optimized for desktop or server."
        }, 
        "lease": {
          "type": "object", 
          "description": "Represents a lease residing on a storage domain.\n\nA lease is a http://www.ovirt.org/develop/developer-guide/vdsm/sanlock[Sanlock] resource residing on a special\nvolume on the storage domain, this Sanlock resource is used to provide storage base locking.", 
          "properties": {
            "storage_domain": {
              "type": "object", 
              "description": "Storage domain.\n\nAn XML representation of a NFS storage domain with identifier `123`:\n\n[source,xml]\n----\n<storage_domain href=\"/ovirt-engine/api/storagedomains/123\" id=\"123\">\n  <name>mydata</name>\n  <description>My data</description>\n  <available>38654705664</available>\n  <committed>1073741824</committed>\n  <critical_space_action_blocker>5</critical_space_action_blocker>\n  <external_status>ok</external_status>\n  <master>true</master>\n  <storage>\n    <address>mynfs.example.com</address>\n    <nfs_version>v3</nfs_version>\n    <path>/exports/mydata</path>\n    <type>nfs</type>\n  </storage>\n  <storage_format>v3</storage_format>\n  <type>data</type>\n  <used>13958643712</used>\n  <warning_low_space_indicator>10</warning_low_space_indicator>\n  <wipe_after_delete>false</wipe_after_delete>\n  <data_centers>\n    <data_center href=\"/ovirt-engine/api/datacenters/456\" id=\"456\"/>\n  </data_centers>\n</storage_domain>\n----", 
              "properties": {
                "available": {
                  "type": "integer", 
                  "format": "int32"
                }, 
                "comment": {
                  "type": "string", 
                  "description": "Free text containing comments about this object."
                }, 
                "supports_discard_zeroes_data": {
                  "type": "boolean", 
                  "description": "Indicates whether a block storage domain supports the property that\ndiscard zeroes the data.\nA <<types/storage_domain,storage domain>> only supports the property that\ndiscard zeroes the data if all of the\n<<types/logical_unit, logical unit>>s that it is built from support it;\nthat is, if each logical unit's `discard_zeroes_data` value is true.\nThis is one of the conditions necessary for a virtual disk in this\nstorage domain to have both `wipe_after_delete` and `pass_discard` attributes enabled.\nSince the engine cannot check if the underlying block device supports\nthe property that discard zeroes the data for file storage domains,\nthis attribute will not be reported for them at all."
                }, 
                "description": {
                  "type": "string", 
                  "description": "A human-readable description in plain text."
                }, 
                "name": {
                  "type": "string", 
                  "description": "A human-readable name in plain text."
                }, 
                "warning_low_space_indicator": {
                  "type": "integer", 
                  "format": "int32"
                }, 
                "wipe_after_delete": {
                  "type": "boolean", 
                  "description": "Serves as the default value of `wipe_after_delete` for <<types/disk, disk>>s on this\n<<types/storage_domain, storage domain>>.\n\nThat is, newly created disks will get their `wipe_after_delete` value from their storage domains by default.\nNote that the configuration value `SANWipeAfterDelete` serves as the default value of block storage domains'\n`wipe_after_delete` value."
                }, 
                "critical_space_action_blocker": {
                  "type": "integer", 
                  "format": "int32"
                }, 
                "storage": {
                  "type": "object", 
                  "properties": {
                    "comment": {
                      "type": "string", 
                      "description": "Free text containing comments about this object."
                    }, 
                    "username": {
                      "type": "string"
                    }, 
                    "description": {
                      "type": "string", 
                      "description": "A human-readable description in plain text."
                    }, 
                    "name": {
                      "type": "string", 
                      "description": "A human-readable name in plain text."
                    }, 
                    "nfs_timeo": {
                      "type": "integer", 
                      "description": "The time in tenths of a second to wait for a response before retrying NFS requests. The value must be in the\nrange of 0 to 65535. For more details see the description of the `timeo` mount option in the `nfs` man page.", 
                      "format": "int32"
                    }, 
                    "logical_units": {
                      "items": {
                        "type": "object", 
                        "properties": {
                          "status": {
                            "enum": [
                              "free", 
                              "unusable", 
                              "used"
                            ], 
                            "type": "string"
                          }, 
                          "username": {
                            "type": "string"
                          }, 
                          "password": {
                            "type": "string"
                          }, 
                          "discard_max_size": {
                            "type": "integer", 
                            "description": "The maximum number of bytes that can be discarded by the logical unit's\nunderlying storage in a single operation.\nA value of 0 means that the device does not support discard functionality.\n\nNOTE: This is the software limit, and not the hardware limit, as noted in the\nhttps://www.kernel.org/doc/Documentation/block/queue-sysfs.txt[documentation] of\n`queue-sysfs` for `discard_max_bytes`.", 
                            "format": "int32"
                          }, 
                          "volume_group_id": {
                            "type": "string"
                          }, 
                          "paths": {
                            "type": "integer", 
                            "format": "int32"
                          }, 
                          "vendor_id": {
                            "type": "string"
                          }, 
                          "disk_id": {
                            "type": "string"
                          }, 
                          "port": {
                            "type": "integer", 
                            "format": "int32"
                          }, 
                          "target": {
                            "type": "string"
                          }, 
                          "portal": {
                            "type": "string"
                          }, 
                          "discard_zeroes_data": {
                            "type": "boolean", 
                            "description": "True, if previously discarded blocks in the logical\nunit's underlying storage are read back as zeros.\nFor more information please see the\nhttps://www.kernel.org/doc/Documentation/block/queue-sysfs.txt[documentation]\nof `queue-sysfs` for `discard_zeroes_data`."
                          }, 
                          "lun_mapping": {
                            "type": "integer", 
                            "format": "int32"
                          }, 
                          "serial": {
                            "type": "string"
                          }, 
                          "size": {
                            "type": "integer", 
                            "format": "int32"
                          }, 
                          "storage_domain_id": {
                            "type": "string"
                          }, 
                          "id": {
                            "type": "string"
                          }, 
                          "address": {
                            "type": "string"
                          }, 
                          "product_id": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }, 
                    "nfs_retrans": {
                      "type": "integer", 
                      "description": "The number of times to retry a request before attempting further recovery actions. The value must be in the\nrange of 0 to 65535. For more details see the description of the `retrans` mount option in the `nfs` man page.", 
                      "format": "int32"
                    }, 
                    "port": {
                      "type": "integer", 
                      "format": "int32"
                    }, 
                    "override_luns": {
                      "type": "boolean"
                    }, 
                    "portal": {
                      "type": "string"
                    }, 
                    "mount_options": {
                      "type": "string"
                    }, 
                    "volume_group": {
                      "type": "object", 
                      "properties": {
                        "logical_units": {
                          "items": {
                            "type": "object", 
                            "properties": {
                              "status": {
                                "enum": [
                                  "free", 
                                  "unusable", 
                                  "used"
                                ], 
                                "type": "string"
                              }, 
                              "username": {
                                "type": "string"
                              }, 
                              "password": {
                                "type": "string"
                              }, 
                              "discard_max_size": {
                                "type": "integer", 
                                "description": "The maximum number of bytes that can be discarded by the logical unit's\nunderlying storage in a single operation.\nA value of 0 means that the device does not support discard functionality.\n\nNOTE: This is the software limit, and not the hardware limit, as noted in the\nhttps://www.kernel.org/doc/Documentation/block/queue-sysfs.txt[documentation] of\n`queue-sysfs` for `discard_max_bytes`.", 
                                "format": "int32"
                              }, 
                              "volume_group_id": {
                                "type": "string"
                              }, 
                              "paths": {
                                "type": "integer", 
                                "format": "int32"
                              }, 
                              "vendor_id": {
                                "type": "string"
                              }, 
                              "disk_id": {
                                "type": "string"
                              }, 
                              "port": {
                                "type": "integer", 
                                "format": "int32"
                              }, 
                              "target": {
                                "type": "string"
                              }, 
                              "portal": {
                                "type": "string"
                              }, 
                              "discard_zeroes_data": {
                                "type": "boolean", 
                                "description": "True, if previously discarded blocks in the logical\nunit's underlying storage are read back as zeros.\nFor more information please see the\nhttps://www.kernel.org/doc/Documentation/block/queue-sysfs.txt[documentation]\nof `queue-sysfs` for `discard_zeroes_data`."
                              }, 
                              "lun_mapping": {
                                "type": "integer", 
                                "format": "int32"
                              }, 
                              "serial": {
                                "type": "string"
                              }, 
                              "size": {
                                "type": "integer", 
                                "format": "int32"
                              }, 
                              "storage_domain_id": {
                                "type": "string"
                              }, 
                              "id": {
                                "type": "string"
                              }, 
                              "address": {
                                "type": "string"
                              }, 
                              "product_id": {
                                "type": "string"
                              }
                            }
                          }, 
                          "type": "array"
                        }, 
                        "id": {
                          "type": "string"
                        }, 
                        "name": {
                          "type": "string"
                        }
                      }
                    }, 
                    "address": {
                      "type": "string"
                    }, 
                    "id": {
                      "type": "string", 
                      "description": "A unique identifier."
                    }, 
                    "path": {
                      "type": "string"
                    }, 
                    "vfs_type": {
                      "type": "string"
                    }, 
                    "password": {
                      "type": "string"
                    }, 
                    "type": {
                      "enum": [
                        "cinder", 
                        "fcp", 
                        "glance", 
                        "glusterfs", 
                        "iscsi", 
                        "localfs", 
                        "nfs", 
                        "posixfs"
                      ], 
                      "type": "string"
                    }, 
                    "nfs_version": {
                      "enum": [
                        "auto", 
                        "v3", 
                        "v4", 
                        "v4_1", 
                        "v4_2"
                      ], 
                      "type": "string"
                    }, 
                    "target": {
                      "type": "string"
                    }
                  }
                }, 
                "id": {
                  "type": "string", 
                  "description": "A unique identifier."
                }, 
                "status": {
                  "enum": [
                    "activating", 
                    "active", 
                    "detaching", 
                    "inactive", 
                    "locked", 
                    "maintenance", 
                    "mixed", 
                    "preparing_for_maintenance", 
                    "unattached", 
                    "unknown"
                  ], 
                  "type": "string"
                }, 
                "used": {
                  "type": "integer", 
                  "format": "int32"
                }, 
                "master": {
                  "type": "boolean"
                }, 
                "discard_after_delete": {
                  "type": "boolean", 
                  "description": "Indicates whether <<types/disk, disk>>s' blocks on block <<types/storage_domain, storage domain>>s will be\ndiscarded right before they are deleted.\n\nIf true, and a disk on this storage domain has its `wipe_after_delete` value enabled, then when the disk is\ndeleted:\n\n. It is first wiped.\n. Then its blocks are discarded.\n. Finally it is deleted.\n\nNote that:\n\n* Discard after delete will always be `false` for non block storage types.\n\n* Discard after delete can be set to `true` only if the storage domain\n<<types/storage_domain/attributes/supports_discard, supports discard>>."
                }, 
                "committed": {
                  "type": "integer", 
                  "format": "int32"
                }, 
                "import": {
                  "type": "boolean"
                }, 
                "external_status": {
                  "enum": [
                    "error", 
                    "failure", 
                    "info", 
                    "ok", 
                    "warning"
                  ], 
                  "type": "string"
                }, 
                "type": {
                  "enum": [
                    "data", 
                    "export", 
                    "image", 
                    "iso", 
                    "volume"
                  ], 
                  "type": "string"
                }, 
                "storage_format": {
                  "enum": [
                    "v1", 
                    "v2", 
                    "v3", 
                    "v4"
                  ], 
                  "type": "string"
                }, 
                "supports_discard": {
                  "type": "boolean", 
                  "description": "Indicates whether a block storage domain supports discard operations.\nA <<types/storage_domain,storage domain>> only supports discard\nif all of the <<types/logical_unit, logical unit>>s that it is built\nfrom support discard; that is, if each logical unit's `discard_max_size` value\nis greater than 0.\nThis is one of the conditions necessary for a virtual disk in this\nstorage domain to have its `pass_discard` attribute enabled.\nSince the engine cannot check if the underlying block device supports\ndiscard for file storage domains, this attribute will not be reported\nfor them at all."
                }
              }
            }
          }
        }, 
        "status": {
          "enum": [
            "illegal", 
            "locked", 
            "ok"
          ], 
          "type": "string", 
          "description": "The status of the template."
        }, 
        "rng_device": {
          "type": "object", 
          "description": "Random number generator (RNG) device model.", 
          "properties": {
            "source": {
              "enum": [
                "hwrng", 
                "random", 
                "urandom"
              ], 
              "type": "string", 
              "description": "Backend of the random number generator device."
            }, 
            "rate": {
              "type": "object", 
              "description": "Determines maximum speed of consumption of bytes from random number generator device.", 
              "properties": {
                "bytes": {
                  "type": "integer", 
                  "description": "Number of bytes allowed to consume per period.", 
                  "format": "int32"
                }, 
                "period": {
                  "type": "integer", 
                  "description": "Duration of one period in milliseconds.", 
                  "format": "int32"
                }
              }
            }
          }
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "initialization": {
          "type": "object", 
          "properties": {
            "org_name": {
              "type": "string"
            }, 
            "custom_script": {
              "type": "string"
            }, 
            "domain": {
              "type": "string"
            }, 
            "dns_servers": {
              "type": "string"
            }, 
            "authorized_ssh_keys": {
              "type": "string"
            }, 
            "system_locale": {
              "type": "string"
            }, 
            "cloud_init": {
              "type": "object", 
              "properties": {
                "files": {
                  "items": {
                    "type": "object", 
                    "properties": {
                      "comment": {
                        "type": "string", 
                        "description": "Free text containing comments about this object."
                      }, 
                      "description": {
                        "type": "string", 
                        "description": "A human-readable description in plain text."
                      }, 
                      "content": {
                        "type": "string"
                      }, 
                      "type": {
                        "type": "string"
                      }, 
                      "id": {
                        "type": "string", 
                        "description": "A unique identifier."
                      }, 
                      "name": {
                        "type": "string", 
                        "description": "A human-readable name in plain text."
                      }
                    }
                  }, 
                  "type": "array"
                }, 
                "authorized_keys": {
                  "items": {
                    "type": "object", 
                    "properties": {
                      "comment": {
                        "type": "string", 
                        "description": "Free text containing comments about this object."
                      }, 
                      "name": {
                        "type": "string", 
                        "description": "A human-readable name in plain text."
                      }, 
                      "description": {
                        "type": "string", 
                        "description": "A human-readable description in plain text."
                      }, 
                      "key": {
                        "type": "string"
                      }, 
                      "id": {
                        "type": "string", 
                        "description": "A unique identifier."
                      }
                    }
                  }, 
                  "type": "array"
                }, 
                "network_configuration": {
                  "type": "object", 
                  "properties": {
                    "nics": {
                      "items": {
                        "type": "object", 
                        "description": "Represents a virtual machine NIC.\n\nFor example, the XML representation of a NIC will look like this:\n\n[source,xml]\n----\n<nic href=\"/ovirt-engine/api/vms/123/nics/456\" id=\"456\">\n  <name>nic1</name>\n  <vm href=\"/ovirt-engine/api/vms/123\" id=\"123\"/>\n  <interface>virtio</interface>\n  <linked>true</linked>\n  <mac>\n    <address>02:00:00:00:00:00</address>\n  </mac>\n  <plugged>true</plugged>\n  <vnic_profile href=\"/ovirt-engine/api/vnicprofiles/789\" id=\"789\"/>\n</nic>\n----", 
                        "properties": {
                          "comment": {
                            "type": "string", 
                            "description": "Free text containing comments about this object."
                          }, 
                          "description": {
                            "type": "string", 
                            "description": "A human-readable description in plain text."
                          }, 
                          "linked": {
                            "type": "boolean", 
                            "description": "Defines if the NIC is linked to the virtual machine."
                          }, 
                          "boot_protocol": {
                            "enum": [
                              "autoconf", 
                              "dhcp", 
                              "none", 
                              "static"
                            ], 
                            "type": "string", 
                            "description": "Defines how an IP address is assigned to the NIC."
                          }, 
                          "plugged": {
                            "type": "boolean", 
                            "description": "Defines if the NIC is plugged in to the virtual machine."
                          }, 
                          "mac": {
                            "type": "object", 
                            "description": "Represents a MAC address of a virtual network interface.", 
                            "properties": {
                              "address": {
                                "type": "string", 
                                "description": "MAC address."
                              }
                            }
                          }, 
                          "on_boot": {
                            "type": "boolean", 
                            "description": "Defines if the network interface should be activated upon operation system startup."
                          }, 
                          "interface": {
                            "enum": [
                              "e1000", 
                              "pci_passthrough", 
                              "rtl8139", 
                              "rtl8139_virtio", 
                              "spapr_vlan", 
                              "virtio"
                            ], 
                            "type": "string", 
                            "description": "The type of driver used for the NIC."
                          }, 
                          "id": {
                            "type": "string", 
                            "description": "A unique identifier."
                          }, 
                          "name": {
                            "type": "string", 
                            "description": "A human-readable name in plain text."
                          }
                        }
                      }, 
                      "type": "array"
                    }, 
                    "dns": {
                      "type": "object", 
                      "description": "Represents the DNS resolver configuration.", 
                      "properties": {
                        "search_domains": {
                          "items": {
                            "type": "object", 
                            "description": "Type representing a host.", 
                            "properties": {
                              "comment": {
                                "type": "string", 
                                "description": "Free text containing comments about this object."
                              }, 
                              "update_available": {
                                "type": "boolean", 
                                "description": "Specifies whether there is an oVirt-related update on this host."
                              }, 
                              "protocol": {
                                "enum": [
                                  "stomp", 
                                  "xml"
                                ], 
                                "type": "string", 
                                "description": "The protocol that the engine uses to communicate with\nthe host.\n\nWARNING: Since version 4.1 of the engine the protocol\nis always set to `stomp` since `xml` was removed."
                              }, 
                              "version": {
                                "type": "object", 
                                "properties": {
                                  "comment": {
                                    "type": "string", 
                                    "description": "Free text containing comments about this object."
                                  }, 
                                  "major": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "description": {
                                    "type": "string", 
                                    "description": "A human-readable description in plain text."
                                  }, 
                                  "full_version": {
                                    "type": "string"
                                  }, 
                                  "name": {
                                    "type": "string", 
                                    "description": "A human-readable name in plain text."
                                  }, 
                                  "build": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "id": {
                                    "type": "string", 
                                    "description": "A unique identifier."
                                  }, 
                                  "minor": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "revision": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }
                                }
                              }, 
                              "spm": {
                                "type": "object", 
                                "properties": {
                                  "priority": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "status": {
                                    "enum": [
                                      "contending", 
                                      "none", 
                                      "spm"
                                    ], 
                                    "type": "string"
                                  }
                                }
                              }, 
                              "hosted_engine": {
                                "type": "object", 
                                "properties": {
                                  "active": {
                                    "type": "boolean"
                                  }, 
                                  "local_maintenance": {
                                    "type": "boolean"
                                  }, 
                                  "configured": {
                                    "type": "boolean"
                                  }, 
                                  "score": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "global_maintenance": {
                                    "type": "boolean"
                                  }
                                }
                              }, 
                              "id": {
                                "type": "string", 
                                "description": "A unique identifier."
                              }, 
                              "external_status": {
                                "enum": [
                                  "error", 
                                  "failure", 
                                  "info", 
                                  "ok", 
                                  "warning"
                                ], 
                                "type": "string", 
                                "description": "The host external status.\nThis can be used by third-party software to change the host external status\nin case of an issue.\nThis has no effect on the host lifecycle, unless a third-party software checks for this\nstatus and acts accordingly."
                              }, 
                              "certificate": {
                                "type": "object", 
                                "properties": {
                                  "comment": {
                                    "type": "string", 
                                    "description": "Free text containing comments about this object."
                                  }, 
                                  "description": {
                                    "type": "string", 
                                    "description": "A human-readable description in plain text."
                                  }, 
                                  "name": {
                                    "type": "string", 
                                    "description": "A human-readable name in plain text."
                                  }, 
                                  "content": {
                                    "type": "string"
                                  }, 
                                  "organization": {
                                    "type": "string"
                                  }, 
                                  "id": {
                                    "type": "string", 
                                    "description": "A unique identifier."
                                  }, 
                                  "subject": {
                                    "type": "string"
                                  }
                                }
                              }, 
                              "display": {
                                "type": "object", 
                                "description": "Represents a graphic console configuration.", 
                                "properties": {
                                  "allow_override": {
                                    "type": "boolean", 
                                    "description": "Indicates if to override the display address per host.\nRelevant only for the `Host.display` attribute.\nIf set, the graphical console address of a virtual machine will be overridden by the host specified display address.\nif not set, the graphical console address of a virtual machine will not be overridden."
                                  }, 
                                  "disconnect_action": {
                                    "type": "string", 
                                    "description": "Returns the action that will take place when the graphic console is disconnected.\nThe options are:\n\nnone:: No action is taken.\nlock_screen:: Locks the currently active user session.\nlogout:: Logs out the currently active user session.\nreboot:: Initiates a graceful virtual machine reboot.\nshutdown:: Initiates a graceful virtual machine shutdown.\n\nThis option is only available for the SPICE console type."
                                  }, 
                                  "certificate": {
                                    "type": "object", 
                                    "properties": {
                                      "comment": {
                                        "type": "string", 
                                        "description": "Free text containing comments about this object."
                                      }, 
                                      "description": {
                                        "type": "string", 
                                        "description": "A human-readable description in plain text."
                                      }, 
                                      "name": {
                                        "type": "string", 
                                        "description": "A human-readable name in plain text."
                                      }, 
                                      "content": {
                                        "type": "string"
                                      }, 
                                      "organization": {
                                        "type": "string"
                                      }, 
                                      "id": {
                                        "type": "string", 
                                        "description": "A unique identifier."
                                      }, 
                                      "subject": {
                                        "type": "string"
                                      }
                                    }
                                  }, 
                                  "monitors": {
                                    "type": "integer", 
                                    "description": "The number of monitors opened for this graphic console.\nThis option is only available for the SPICE console type.\nPossible values are 1, 2 or 4.", 
                                    "format": "int32"
                                  }, 
                                  "single_qxl_pci": {
                                    "type": "boolean", 
                                    "description": "Indicates if to use one PCI slot for each monitor or to use a single PCI channel for all multiple monitors.\nThis option is only available for the SPICE console type and only for connecting a guest Linux based OS."
                                  }, 
                                  "copy_paste_enabled": {
                                    "type": "boolean", 
                                    "description": "Indicates whether a user is able to copy and paste content from an external host into the graphic console.\nThis option is only available for the SPICE console type."
                                  }, 
                                  "secure_port": {
                                    "type": "integer", 
                                    "description": "The secured port address on the guest, in case of using TLS, to connect the graphic console client to.\nIf TLS isn't enabled then it won't be reported.", 
                                    "format": "int32"
                                  }, 
                                  "proxy": {
                                    "type": "string", 
                                    "description": "The proxy IP which will be used by the graphic console client to connect to the guest.\nIt is useful when the client is outside the guest's network.\nThis option is only available for the SPICE console type.\nThis proxy can be set in global configuration, cluster level, virtual machine pool level or disabled\nper virtual machine.\nIf the proxy is set in any of this mentioned places and not disabled for the virtual machine, it will be\nreturned by this method.\nIf the proxy is not set, nothing will be reported."
                                  }, 
                                  "smartcard_enabled": {
                                    "type": "boolean", 
                                    "description": "Indicates if to use smart card authentication.\nThis option is only available for the SPICE console type."
                                  }, 
                                  "file_transfer_enabled": {
                                    "type": "boolean", 
                                    "description": "Indicates if a user is able to drag and drop files from an external host into the graphic console.\nThis option is only available for the SPICE console type."
                                  }, 
                                  "keyboard_layout": {
                                    "type": "string", 
                                    "description": "The keyboard layout to use with this graphic console.\nThis option is only available for the VNC console type.\nIf no keyboard is enabled then it won't be reported."
                                  }, 
                                  "type": {
                                    "enum": [
                                      "spice", 
                                      "vnc"
                                    ], 
                                    "type": "string", 
                                    "description": "The graphic console protocol type."
                                  }, 
                                  "port": {
                                    "type": "integer", 
                                    "description": "The port address on the guest to connect the graphic console client to.", 
                                    "format": "int32"
                                  }, 
                                  "address": {
                                    "type": "string", 
                                    "description": "The IP address of the guest to connect the graphic console client to."
                                  }
                                }
                              }, 
                              "iscsi": {
                                "type": "object", 
                                "properties": {
                                  "status": {
                                    "type": "string"
                                  }, 
                                  "username": {
                                    "type": "string"
                                  }, 
                                  "initiator": {
                                    "type": "string"
                                  }, 
                                  "vendor_id": {
                                    "type": "string"
                                  }, 
                                  "volume_group_id": {
                                    "type": "string"
                                  }, 
                                  "paths": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "storage_domain_id": {
                                    "type": "string"
                                  }, 
                                  "disk_id": {
                                    "type": "string"
                                  }, 
                                  "password": {
                                    "type": "string"
                                  }, 
                                  "portal": {
                                    "type": "string"
                                  }, 
                                  "address": {
                                    "type": "string"
                                  }, 
                                  "lun_mapping": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "serial": {
                                    "type": "string"
                                  }, 
                                  "size": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "target": {
                                    "type": "string"
                                  }, 
                                  "port": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "product_id": {
                                    "type": "string"
                                  }
                                }
                              }, 
                              "port": {
                                "type": "integer", 
                                "description": "The host port.", 
                                "format": "int32"
                              }, 
                              "hardware_information": {
                                "type": "object", 
                                "description": "Represents hardware information of host.\n\nTo get that information send a request like this:\n\n....\nGET /ovirt-engine/api/hosts/123\n....\n\nThe result will be like this:\n\n[source,xml]\n----\n<host href=\"/ovirt-engine/api/hosts/123\" id=\"123\">\n  ...\n  <hardware_information>\n    <family>Red Hat Enterprise Linux</family>\n    <manufacturer>Red Hat</manufacturer>\n    <product_name>RHEV Hypervisor</product_name>\n    <serial_number>01234567-89AB-CDEF-0123-456789ABCDEF</serial_number>\n    <supported_rng_sources>\n      <supported_rng_source>random</supported_rng_source>\n    </supported_rng_sources>\n    <uuid>12345678-9ABC-DEF0-1234-56789ABCDEF0</uuid>\n    <version>1.2-34.5.el7ev</version>\n  </hardware_information>\n  ...\n</application>\n----", 
                                "properties": {
                                  "uuid": {
                                    "type": "string", 
                                    "description": "Unique ID for each host."
                                  }, 
                                  "family": {
                                    "type": "string", 
                                    "description": "Type of host's CPU."
                                  }, 
                                  "supported_rng_sources": {
                                    "items": {
                                      "enum": [
                                        "hwrng", 
                                        "random", 
                                        "urandom"
                                      ], 
                                      "type": "string"
                                    }, 
                                    "type": "array", 
                                    "description": "Supported sources of random number generator."
                                  }, 
                                  "version": {
                                    "type": "string", 
                                    "description": "Unique name for each of the manufacturer."
                                  }, 
                                  "serial_number": {
                                    "type": "string", 
                                    "description": "Unique ID for host's chassis."
                                  }, 
                                  "product_name": {
                                    "type": "string", 
                                    "description": "Host's product name (for example `RHEV Hypervisor`)."
                                  }, 
                                  "manufacturer": {
                                    "type": "string", 
                                    "description": "Manufacturer of the host's machine and hardware vendor."
                                  }
                                }
                              }, 
                              "memory": {
                                "type": "integer", 
                                "description": "The amount of physical memory on this host in bytes.", 
                                "format": "int32"
                              }, 
                              "ksm": {
                                "type": "object", 
                                "properties": {
                                  "enabled": {
                                    "type": "boolean"
                                  }, 
                                  "merge_across_nodes": {
                                    "type": "boolean"
                                  }
                                }
                              }, 
                              "se_linux": {
                                "type": "object", 
                                "description": "Represents SELinux in the system.", 
                                "properties": {
                                  "mode": {
                                    "enum": [
                                      "disabled", 
                                      "enforcing", 
                                      "permissive"
                                    ], 
                                    "type": "string", 
                                    "description": "SELinux current mode."
                                  }
                                }
                              }, 
                              "type": {
                                "enum": [
                                  "ovirt_node", 
                                  "rhel", 
                                  "rhev_h"
                                ], 
                                "type": "string", 
                                "description": "Indicates if the host contains a full installation of the operating system or a scaled-down version intended\nonly to host virtual machines."
                              }, 
                              "status": {
                                "enum": [
                                  "connecting", 
                                  "down", 
                                  "error", 
                                  "initializing", 
                                  "install_failed", 
                                  "installing", 
                                  "installing_os", 
                                  "kdumping", 
                                  "maintenance", 
                                  "non_operational", 
                                  "non_responsive", 
                                  "pending_approval", 
                                  "preparing_for_maintenance", 
                                  "reboot", 
                                  "unassigned", 
                                  "up"
                                ], 
                                "type": "string", 
                                "description": "The host status."
                              }, 
                              "description": {
                                "type": "string", 
                                "description": "A human-readable description in plain text."
                              }, 
                              "status_detail": {
                                "type": "string", 
                                "description": "The host status details. Relevant for Gluster hosts."
                              }, 
                              "transparent_hugepages": {
                                "type": "object", 
                                "description": "Type representing a transparent huge pages (THP) support.", 
                                "properties": {
                                  "enabled": {
                                    "type": "boolean", 
                                    "description": "Enable THP support."
                                  }
                                }
                              }, 
                              "address": {
                                "type": "string", 
                                "description": "The host address (FQDN/IP)."
                              }, 
                              "override_iptables": {
                                "type": "boolean", 
                                "description": "Specifies whether we should override firewall definitions.\nThis applies only when the host is installed or re-installed."
                              }, 
                              "device_passthrough": {
                                "type": "object", 
                                "properties": {
                                  "enabled": {
                                    "type": "boolean"
                                  }
                                }
                              }, 
                              "ssh": {
                                "type": "object", 
                                "properties": {
                                  "comment": {
                                    "type": "string", 
                                    "description": "Free text containing comments about this object."
                                  }, 
                                  "description": {
                                    "type": "string", 
                                    "description": "A human-readable description in plain text."
                                  }, 
                                  "authentication_method": {
                                    "enum": [
                                      "password", 
                                      "publickey"
                                    ], 
                                    "type": "string"
                                  }, 
                                  "id": {
                                    "type": "string", 
                                    "description": "A unique identifier."
                                  }, 
                                  "user": {
                                    "type": "object", 
                                    "description": "Represents a user in the system.", 
                                    "properties": {
                                      "comment": {
                                        "type": "string", 
                                        "description": "Free text containing comments about this object."
                                      }, 
                                      "last_name": {
                                        "type": "string"
                                      }, 
                                      "description": {
                                        "type": "string", 
                                        "description": "A human-readable description in plain text."
                                      }, 
                                      "name": {
                                        "type": "string", 
                                        "description": "A human-readable name in plain text."
                                      }, 
                                      "domain_entry_id": {
                                        "type": "string"
                                      }, 
                                      "namespace": {
                                        "type": "string", 
                                        "description": "Namespace where the user resides. When using the authorization provider that stores users in the LDAP server,\nthis attribute equals the naming context of the LDAP server.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-ldap for more information.\nWhen using the built-in authorization provider that stores users in the database this attribute is ignored.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-jdbc for more information."
                                      }, 
                                      "id": {
                                        "type": "string", 
                                        "description": "A unique identifier."
                                      }, 
                                      "department": {
                                        "type": "string"
                                      }, 
                                      "logged_in": {
                                        "type": "boolean"
                                      }, 
                                      "password": {
                                        "type": "string"
                                      }, 
                                      "user_name": {
                                        "type": "string", 
                                        "description": "The user's username. The format depends on authorization provider type. In most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In Active Directory it is the User Principal Name (UPN). `UPN` or\n`uid` must be followed by the authorization provider name. For example, in the case of LDAP's `uid` attribute it is:\n`myuser@myextension-authz`. In the case of Active Directory using `UPN` it is:\n`myuser@mysubdomain.mydomain.com@myextension-authz`. This attribute is a required parameter when adding a new user."
                                      }, 
                                      "email": {
                                        "type": "string"
                                      }, 
                                      "principal": {
                                        "type": "string", 
                                        "description": "Similar to `user_name`. The format depends on the LDAP provider. With most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In the case of Active Directory it is the User Principal Name (UPN)."
                                      }
                                    }
                                  }, 
                                  "fingerprint": {
                                    "type": "string"
                                  }, 
                                  "port": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "name": {
                                    "type": "string", 
                                    "description": "A human-readable name in plain text."
                                  }
                                }
                              }, 
                              "numa_supported": {
                                "type": "boolean", 
                                "description": "Specifies whether _non uniform memory access_ (NUMA) is supported on this host."
                              }, 
                              "libvirt_version": {
                                "type": "object", 
                                "properties": {
                                  "comment": {
                                    "type": "string", 
                                    "description": "Free text containing comments about this object."
                                  }, 
                                  "major": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "description": {
                                    "type": "string", 
                                    "description": "A human-readable description in plain text."
                                  }, 
                                  "full_version": {
                                    "type": "string"
                                  }, 
                                  "name": {
                                    "type": "string", 
                                    "description": "A human-readable name in plain text."
                                  }, 
                                  "build": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "id": {
                                    "type": "string", 
                                    "description": "A unique identifier."
                                  }, 
                                  "minor": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "revision": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }
                                }
                              }, 
                              "power_management": {
                                "type": "object", 
                                "properties": {
                                  "status": {
                                    "enum": [
                                      "off", 
                                      "on", 
                                      "unknown"
                                    ], 
                                    "type": "string", 
                                    "description": "Determines the power status of the host."
                                  }, 
                                  "username": {
                                    "type": "string", 
                                    "description": "A valid user name for power management."
                                  }, 
                                  "kdump_detection": {
                                    "type": "boolean", 
                                    "description": "Toggles whether to determine if kdump is running on the host before it is shut down.\nWhen set to `true`, the host will not shut down during a kdump process.\nThis is set to `true` when a host has power management enabled, unless disabled by the user."
                                  }, 
                                  "automatic_pm_enabled": {
                                    "type": "boolean", 
                                    "description": "Toggles the automated power control of the host in order to save energy.\nWhen set to true, the host will be automatically powered down if the cluster's load is low,\nand powered on again when required. This is set to true when a host is created, unless disabled by the user."
                                  }, 
                                  "enabled": {
                                    "type": "boolean", 
                                    "description": "Indicates whether power management configuration is enabled or disabled."
                                  }, 
                                  "pm_proxies": {
                                    "items": {
                                      "type": "object", 
                                      "properties": {
                                        "type": {
                                          "enum": [
                                            "cluster", 
                                            "dc", 
                                            "other_dc"
                                          ], 
                                          "type": "string"
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "Determines the power management proxy."
                                  }, 
                                  "agents": {
                                    "items": {
                                      "type": "object", 
                                      "description": "Type representing a fence agent.", 
                                      "properties": {
                                        "comment": {
                                          "type": "string", 
                                          "description": "Free text containing comments about this object."
                                        }, 
                                        "username": {
                                          "type": "string", 
                                          "description": "Fence agent user name."
                                        }, 
                                        "encrypt_options": {
                                          "type": "boolean", 
                                          "description": "Specifies whether the options should be encrypted."
                                        }, 
                                        "description": {
                                          "type": "string", 
                                          "description": "A human-readable description in plain text."
                                        }, 
                                        "options": {
                                          "items": {
                                            "type": "object", 
                                            "properties": {
                                              "type": {
                                                "type": "string"
                                              }, 
                                              "name": {
                                                "type": "string"
                                              }, 
                                              "value": {
                                                "type": "string"
                                              }
                                            }
                                          }, 
                                          "type": "array", 
                                          "description": "Fence agent options (comma-delimited list of\nkey-value pairs)."
                                        }, 
                                        "order": {
                                          "type": "integer", 
                                          "description": "The order of this agent if used with other agents.", 
                                          "format": "int32"
                                        }, 
                                        "concurrent": {
                                          "type": "boolean", 
                                          "description": "Specifies whether the agent should be used concurrently\nor sequentially."
                                        }, 
                                        "address": {
                                          "type": "string", 
                                          "description": "Fence agent address."
                                        }, 
                                        "id": {
                                          "type": "string", 
                                          "description": "A unique identifier."
                                        }, 
                                        "password": {
                                          "type": "string", 
                                          "description": "Fence agent password."
                                        }, 
                                        "type": {
                                          "type": "string", 
                                          "description": "Fence agent type."
                                        }, 
                                        "port": {
                                          "type": "integer", 
                                          "description": "Fence agent port.", 
                                          "format": "int32"
                                        }, 
                                        "name": {
                                          "type": "string", 
                                          "description": "A human-readable name in plain text."
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "Specifies fence agent options when multiple fences are used.\n\nUse the order sub-element to prioritize the fence agents. Agents are run sequentially according to their\norder until the fence action succeeds. When two or more fence agents have the same order,\nthey are run concurrently. Other sub-elements include type, ip, user, password, and options."
                                  }, 
                                  "address": {
                                    "type": "string", 
                                    "description": "The host name or IP address of the host."
                                  }, 
                                  "password": {
                                    "type": "string", 
                                    "description": "A valid, robust password for power management."
                                  }, 
                                  "type": {
                                    "type": "string", 
                                    "description": "Fencing device code.\n\nA list of valid fencing device codes are available in the `capabilities` collection."
                                  }, 
                                  "options": {
                                    "items": {
                                      "type": "object", 
                                      "properties": {
                                        "type": {
                                          "type": "string"
                                        }, 
                                        "name": {
                                          "type": "string"
                                        }, 
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "Fencing options for the selected type= specified with the option name=\"\" and value=\"\" strings."
                                  }
                                }
                              }, 
                              "name": {
                                "type": "string", 
                                "description": "A human-readable name in plain text."
                              }, 
                              "max_scheduling_memory": {
                                "type": "integer", 
                                "description": "The max scheduling memory on this host in bytes.", 
                                "format": "int32"
                              }, 
                              "summary": {
                                "type": "object", 
                                "description": "Type containing information related to virtual machines on a particular host.", 
                                "properties": {
                                  "active": {
                                    "type": "integer", 
                                    "description": "The number of virtual machines active on the host.", 
                                    "format": "int32"
                                  }, 
                                  "migrating": {
                                    "type": "integer", 
                                    "description": "The number of virtual machines migrating to or from the host.", 
                                    "format": "int32"
                                  }, 
                                  "total": {
                                    "type": "integer", 
                                    "description": "The number of virtual machines present on the host.", 
                                    "format": "int32"
                                  }
                                }
                              }, 
                              "auto_numa_status": {
                                "enum": [
                                  "disable", 
                                  "enable", 
                                  "unknown"
                                ], 
                                "type": "string", 
                                "description": "The host auto _non uniform memory access_ (NUMA) status."
                              }, 
                              "os": {
                                "type": "object", 
                                "description": "Information describing the operating system. This is used for both virtual machines and hosts.", 
                                "properties": {
                                  "kernel": {
                                    "type": "string", 
                                    "description": "Path to custom kernel on ISO storage domain if Linux operating system is used.\n\nFor example `iso://vmlinuz-3.10.0-514.6.1.el7.x86_64`.\n\nNOTE: Not used for hosts."
                                  }, 
                                  "reported_kernel_cmdline": {
                                    "type": "string", 
                                    "description": "The host kernel command line as reported by a running host.\n\nThis is a read-only attribute. Attempts to change this attribute are silently ignored.\n\nNOTE: This attribute is currently only used for hosts."
                                  }, 
                                  "boot": {
                                    "type": "object", 
                                    "description": "Configuration of the boot sequence of a virtual machine.", 
                                    "properties": {
                                      "devices": {
                                        "items": {
                                          "enum": [
                                            "cdrom", 
                                            "hd", 
                                            "network"
                                          ], 
                                          "type": "string"
                                        }, 
                                        "type": "array", 
                                        "description": "Ordered list of boot devices. The virtual machine will try to boot from the given boot devices, in the given\norder."
                                      }
                                    }
                                  }, 
                                  "cmdline": {
                                    "type": "string", 
                                    "description": "Custom kernel parameters for start the virtual machine with if Linux operating system is used.\n\nNOTE: Not used for hosts."
                                  }, 
                                  "initrd": {
                                    "type": "string", 
                                    "description": "Path to custom initial ramdisk on ISO storage domain if Linux operating system is used.\n\nFor example `iso://initramfs-3.10.0-514.6.1.el7.x86_64.img`.\n\nNOTE: Not used for hosts."
                                  }, 
                                  "version": {
                                    "type": "object", 
                                    "properties": {
                                      "comment": {
                                        "type": "string", 
                                        "description": "Free text containing comments about this object."
                                      }, 
                                      "major": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "description": {
                                        "type": "string", 
                                        "description": "A human-readable description in plain text."
                                      }, 
                                      "full_version": {
                                        "type": "string"
                                      }, 
                                      "name": {
                                        "type": "string", 
                                        "description": "A human-readable name in plain text."
                                      }, 
                                      "build": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "id": {
                                        "type": "string", 
                                        "description": "A unique identifier."
                                      }, 
                                      "minor": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "revision": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }
                                    }
                                  }, 
                                  "custom_kernel_cmdline": {
                                    "type": "string", 
                                    "description": "A custom part of the host kernel command line. This will be merged with the existing kernel command line.\n\nYou must reinstall and then reboot the host to apply the changes implemented by this attribute.\n\nDuring each host deploy procedure, kernel parameters that were added\nin the previous host deploy procedure are removed using\n`grubby --update-kernel DEFAULT --remove-args <previous_custom_params>`, and the current\nkernel command line customization is applied using\n`grubby --update-kernel DEFAULT --args <custom_params>`. The Manager internally keeps track of the\nlast-applied kernel parameters customization.\n\nNOTE: This attribute is currently only used for hosts."
                                  }, 
                                  "type": {
                                    "type": "string", 
                                    "description": "Operating system name in human readable form.\n\nFor example `Fedora` or `RHEL`. In general one of the names returned by the <<services/operating_systems,\noperating system>> service.\n\nNOTE: Read only for hosts."
                                  }
                                }
                              }, 
                              "cpu": {
                                "type": "object", 
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }, 
                                  "level": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "speed": {
                                    "type": "number", 
                                    "format": "double"
                                  }, 
                                  "cpu_tune": {
                                    "type": "object", 
                                    "properties": {
                                      "vcpu_pins": {
                                        "items": {
                                          "type": "object", 
                                          "properties": {
                                            "cpu_set": {
                                              "type": "string"
                                            }, 
                                            "vcpu": {
                                              "type": "integer", 
                                              "format": "int32"
                                            }
                                          }
                                        }, 
                                        "type": "array"
                                      }
                                    }
                                  }, 
                                  "architecture": {
                                    "enum": [
                                      "ppc64", 
                                      "undefined", 
                                      "x86_64"
                                    ], 
                                    "type": "string"
                                  }, 
                                  "mode": {
                                    "enum": [
                                      "custom", 
                                      "host_model", 
                                      "host_passthrough"
                                    ], 
                                    "type": "string"
                                  }, 
                                  "cores": {
                                    "items": {
                                      "type": "object", 
                                      "properties": {
                                        "index": {
                                          "type": "integer", 
                                          "format": "int32"
                                        }, 
                                        "socket": {
                                          "type": "integer", 
                                          "format": "int32"
                                        }
                                      }
                                    }, 
                                    "type": "array"
                                  }, 
                                  "type": {
                                    "type": "string"
                                  }, 
                                  "topology": {
                                    "type": "object", 
                                    "properties": {
                                      "cores": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "threads": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "sockets": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }
                                    }
                                  }
                                }
                              }, 
                              "kdump_status": {
                                "enum": [
                                  "disabled", 
                                  "enabled", 
                                  "unknown"
                                ], 
                                "type": "string", 
                                "description": "The host KDUMP status.\nKDUMP happens when the host kernel has crashed and it is now going through memory dumping."
                              }, 
                              "root_password": {
                                "type": "string", 
                                "description": "When creating a new host, a root password is required if the password authentication method is chosen,\nbut this is not subsequently included in the representation."
                              }
                            }
                          }, 
                          "type": "array", 
                          "description": "Array of hosts serving as search domains."
                        }, 
                        "servers": {
                          "items": {
                            "type": "object", 
                            "description": "Type representing a host.", 
                            "properties": {
                              "comment": {
                                "type": "string", 
                                "description": "Free text containing comments about this object."
                              }, 
                              "update_available": {
                                "type": "boolean", 
                                "description": "Specifies whether there is an oVirt-related update on this host."
                              }, 
                              "protocol": {
                                "enum": [
                                  "stomp", 
                                  "xml"
                                ], 
                                "type": "string", 
                                "description": "The protocol that the engine uses to communicate with\nthe host.\n\nWARNING: Since version 4.1 of the engine the protocol\nis always set to `stomp` since `xml` was removed."
                              }, 
                              "version": {
                                "type": "object", 
                                "properties": {
                                  "comment": {
                                    "type": "string", 
                                    "description": "Free text containing comments about this object."
                                  }, 
                                  "major": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "description": {
                                    "type": "string", 
                                    "description": "A human-readable description in plain text."
                                  }, 
                                  "full_version": {
                                    "type": "string"
                                  }, 
                                  "name": {
                                    "type": "string", 
                                    "description": "A human-readable name in plain text."
                                  }, 
                                  "build": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "id": {
                                    "type": "string", 
                                    "description": "A unique identifier."
                                  }, 
                                  "minor": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "revision": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }
                                }
                              }, 
                              "spm": {
                                "type": "object", 
                                "properties": {
                                  "priority": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "status": {
                                    "enum": [
                                      "contending", 
                                      "none", 
                                      "spm"
                                    ], 
                                    "type": "string"
                                  }
                                }
                              }, 
                              "hosted_engine": {
                                "type": "object", 
                                "properties": {
                                  "active": {
                                    "type": "boolean"
                                  }, 
                                  "local_maintenance": {
                                    "type": "boolean"
                                  }, 
                                  "configured": {
                                    "type": "boolean"
                                  }, 
                                  "score": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "global_maintenance": {
                                    "type": "boolean"
                                  }
                                }
                              }, 
                              "id": {
                                "type": "string", 
                                "description": "A unique identifier."
                              }, 
                              "external_status": {
                                "enum": [
                                  "error", 
                                  "failure", 
                                  "info", 
                                  "ok", 
                                  "warning"
                                ], 
                                "type": "string", 
                                "description": "The host external status.\nThis can be used by third-party software to change the host external status\nin case of an issue.\nThis has no effect on the host lifecycle, unless a third-party software checks for this\nstatus and acts accordingly."
                              }, 
                              "certificate": {
                                "type": "object", 
                                "properties": {
                                  "comment": {
                                    "type": "string", 
                                    "description": "Free text containing comments about this object."
                                  }, 
                                  "description": {
                                    "type": "string", 
                                    "description": "A human-readable description in plain text."
                                  }, 
                                  "name": {
                                    "type": "string", 
                                    "description": "A human-readable name in plain text."
                                  }, 
                                  "content": {
                                    "type": "string"
                                  }, 
                                  "organization": {
                                    "type": "string"
                                  }, 
                                  "id": {
                                    "type": "string", 
                                    "description": "A unique identifier."
                                  }, 
                                  "subject": {
                                    "type": "string"
                                  }
                                }
                              }, 
                              "display": {
                                "type": "object", 
                                "description": "Represents a graphic console configuration.", 
                                "properties": {
                                  "allow_override": {
                                    "type": "boolean", 
                                    "description": "Indicates if to override the display address per host.\nRelevant only for the `Host.display` attribute.\nIf set, the graphical console address of a virtual machine will be overridden by the host specified display address.\nif not set, the graphical console address of a virtual machine will not be overridden."
                                  }, 
                                  "disconnect_action": {
                                    "type": "string", 
                                    "description": "Returns the action that will take place when the graphic console is disconnected.\nThe options are:\n\nnone:: No action is taken.\nlock_screen:: Locks the currently active user session.\nlogout:: Logs out the currently active user session.\nreboot:: Initiates a graceful virtual machine reboot.\nshutdown:: Initiates a graceful virtual machine shutdown.\n\nThis option is only available for the SPICE console type."
                                  }, 
                                  "certificate": {
                                    "type": "object", 
                                    "properties": {
                                      "comment": {
                                        "type": "string", 
                                        "description": "Free text containing comments about this object."
                                      }, 
                                      "description": {
                                        "type": "string", 
                                        "description": "A human-readable description in plain text."
                                      }, 
                                      "name": {
                                        "type": "string", 
                                        "description": "A human-readable name in plain text."
                                      }, 
                                      "content": {
                                        "type": "string"
                                      }, 
                                      "organization": {
                                        "type": "string"
                                      }, 
                                      "id": {
                                        "type": "string", 
                                        "description": "A unique identifier."
                                      }, 
                                      "subject": {
                                        "type": "string"
                                      }
                                    }
                                  }, 
                                  "monitors": {
                                    "type": "integer", 
                                    "description": "The number of monitors opened for this graphic console.\nThis option is only available for the SPICE console type.\nPossible values are 1, 2 or 4.", 
                                    "format": "int32"
                                  }, 
                                  "single_qxl_pci": {
                                    "type": "boolean", 
                                    "description": "Indicates if to use one PCI slot for each monitor or to use a single PCI channel for all multiple monitors.\nThis option is only available for the SPICE console type and only for connecting a guest Linux based OS."
                                  }, 
                                  "copy_paste_enabled": {
                                    "type": "boolean", 
                                    "description": "Indicates whether a user is able to copy and paste content from an external host into the graphic console.\nThis option is only available for the SPICE console type."
                                  }, 
                                  "secure_port": {
                                    "type": "integer", 
                                    "description": "The secured port address on the guest, in case of using TLS, to connect the graphic console client to.\nIf TLS isn't enabled then it won't be reported.", 
                                    "format": "int32"
                                  }, 
                                  "proxy": {
                                    "type": "string", 
                                    "description": "The proxy IP which will be used by the graphic console client to connect to the guest.\nIt is useful when the client is outside the guest's network.\nThis option is only available for the SPICE console type.\nThis proxy can be set in global configuration, cluster level, virtual machine pool level or disabled\nper virtual machine.\nIf the proxy is set in any of this mentioned places and not disabled for the virtual machine, it will be\nreturned by this method.\nIf the proxy is not set, nothing will be reported."
                                  }, 
                                  "smartcard_enabled": {
                                    "type": "boolean", 
                                    "description": "Indicates if to use smart card authentication.\nThis option is only available for the SPICE console type."
                                  }, 
                                  "file_transfer_enabled": {
                                    "type": "boolean", 
                                    "description": "Indicates if a user is able to drag and drop files from an external host into the graphic console.\nThis option is only available for the SPICE console type."
                                  }, 
                                  "keyboard_layout": {
                                    "type": "string", 
                                    "description": "The keyboard layout to use with this graphic console.\nThis option is only available for the VNC console type.\nIf no keyboard is enabled then it won't be reported."
                                  }, 
                                  "type": {
                                    "enum": [
                                      "spice", 
                                      "vnc"
                                    ], 
                                    "type": "string", 
                                    "description": "The graphic console protocol type."
                                  }, 
                                  "port": {
                                    "type": "integer", 
                                    "description": "The port address on the guest to connect the graphic console client to.", 
                                    "format": "int32"
                                  }, 
                                  "address": {
                                    "type": "string", 
                                    "description": "The IP address of the guest to connect the graphic console client to."
                                  }
                                }
                              }, 
                              "iscsi": {
                                "type": "object", 
                                "properties": {
                                  "status": {
                                    "type": "string"
                                  }, 
                                  "username": {
                                    "type": "string"
                                  }, 
                                  "initiator": {
                                    "type": "string"
                                  }, 
                                  "vendor_id": {
                                    "type": "string"
                                  }, 
                                  "volume_group_id": {
                                    "type": "string"
                                  }, 
                                  "paths": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "storage_domain_id": {
                                    "type": "string"
                                  }, 
                                  "disk_id": {
                                    "type": "string"
                                  }, 
                                  "password": {
                                    "type": "string"
                                  }, 
                                  "portal": {
                                    "type": "string"
                                  }, 
                                  "address": {
                                    "type": "string"
                                  }, 
                                  "lun_mapping": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "serial": {
                                    "type": "string"
                                  }, 
                                  "size": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "target": {
                                    "type": "string"
                                  }, 
                                  "port": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "product_id": {
                                    "type": "string"
                                  }
                                }
                              }, 
                              "port": {
                                "type": "integer", 
                                "description": "The host port.", 
                                "format": "int32"
                              }, 
                              "hardware_information": {
                                "type": "object", 
                                "description": "Represents hardware information of host.\n\nTo get that information send a request like this:\n\n....\nGET /ovirt-engine/api/hosts/123\n....\n\nThe result will be like this:\n\n[source,xml]\n----\n<host href=\"/ovirt-engine/api/hosts/123\" id=\"123\">\n  ...\n  <hardware_information>\n    <family>Red Hat Enterprise Linux</family>\n    <manufacturer>Red Hat</manufacturer>\n    <product_name>RHEV Hypervisor</product_name>\n    <serial_number>01234567-89AB-CDEF-0123-456789ABCDEF</serial_number>\n    <supported_rng_sources>\n      <supported_rng_source>random</supported_rng_source>\n    </supported_rng_sources>\n    <uuid>12345678-9ABC-DEF0-1234-56789ABCDEF0</uuid>\n    <version>1.2-34.5.el7ev</version>\n  </hardware_information>\n  ...\n</application>\n----", 
                                "properties": {
                                  "uuid": {
                                    "type": "string", 
                                    "description": "Unique ID for each host."
                                  }, 
                                  "family": {
                                    "type": "string", 
                                    "description": "Type of host's CPU."
                                  }, 
                                  "supported_rng_sources": {
                                    "items": {
                                      "enum": [
                                        "hwrng", 
                                        "random", 
                                        "urandom"
                                      ], 
                                      "type": "string"
                                    }, 
                                    "type": "array", 
                                    "description": "Supported sources of random number generator."
                                  }, 
                                  "version": {
                                    "type": "string", 
                                    "description": "Unique name for each of the manufacturer."
                                  }, 
                                  "serial_number": {
                                    "type": "string", 
                                    "description": "Unique ID for host's chassis."
                                  }, 
                                  "product_name": {
                                    "type": "string", 
                                    "description": "Host's product name (for example `RHEV Hypervisor`)."
                                  }, 
                                  "manufacturer": {
                                    "type": "string", 
                                    "description": "Manufacturer of the host's machine and hardware vendor."
                                  }
                                }
                              }, 
                              "memory": {
                                "type": "integer", 
                                "description": "The amount of physical memory on this host in bytes.", 
                                "format": "int32"
                              }, 
                              "ksm": {
                                "type": "object", 
                                "properties": {
                                  "enabled": {
                                    "type": "boolean"
                                  }, 
                                  "merge_across_nodes": {
                                    "type": "boolean"
                                  }
                                }
                              }, 
                              "se_linux": {
                                "type": "object", 
                                "description": "Represents SELinux in the system.", 
                                "properties": {
                                  "mode": {
                                    "enum": [
                                      "disabled", 
                                      "enforcing", 
                                      "permissive"
                                    ], 
                                    "type": "string", 
                                    "description": "SELinux current mode."
                                  }
                                }
                              }, 
                              "type": {
                                "enum": [
                                  "ovirt_node", 
                                  "rhel", 
                                  "rhev_h"
                                ], 
                                "type": "string", 
                                "description": "Indicates if the host contains a full installation of the operating system or a scaled-down version intended\nonly to host virtual machines."
                              }, 
                              "status": {
                                "enum": [
                                  "connecting", 
                                  "down", 
                                  "error", 
                                  "initializing", 
                                  "install_failed", 
                                  "installing", 
                                  "installing_os", 
                                  "kdumping", 
                                  "maintenance", 
                                  "non_operational", 
                                  "non_responsive", 
                                  "pending_approval", 
                                  "preparing_for_maintenance", 
                                  "reboot", 
                                  "unassigned", 
                                  "up"
                                ], 
                                "type": "string", 
                                "description": "The host status."
                              }, 
                              "description": {
                                "type": "string", 
                                "description": "A human-readable description in plain text."
                              }, 
                              "status_detail": {
                                "type": "string", 
                                "description": "The host status details. Relevant for Gluster hosts."
                              }, 
                              "transparent_hugepages": {
                                "type": "object", 
                                "description": "Type representing a transparent huge pages (THP) support.", 
                                "properties": {
                                  "enabled": {
                                    "type": "boolean", 
                                    "description": "Enable THP support."
                                  }
                                }
                              }, 
                              "address": {
                                "type": "string", 
                                "description": "The host address (FQDN/IP)."
                              }, 
                              "override_iptables": {
                                "type": "boolean", 
                                "description": "Specifies whether we should override firewall definitions.\nThis applies only when the host is installed or re-installed."
                              }, 
                              "device_passthrough": {
                                "type": "object", 
                                "properties": {
                                  "enabled": {
                                    "type": "boolean"
                                  }
                                }
                              }, 
                              "ssh": {
                                "type": "object", 
                                "properties": {
                                  "comment": {
                                    "type": "string", 
                                    "description": "Free text containing comments about this object."
                                  }, 
                                  "description": {
                                    "type": "string", 
                                    "description": "A human-readable description in plain text."
                                  }, 
                                  "authentication_method": {
                                    "enum": [
                                      "password", 
                                      "publickey"
                                    ], 
                                    "type": "string"
                                  }, 
                                  "id": {
                                    "type": "string", 
                                    "description": "A unique identifier."
                                  }, 
                                  "user": {
                                    "type": "object", 
                                    "description": "Represents a user in the system.", 
                                    "properties": {
                                      "comment": {
                                        "type": "string", 
                                        "description": "Free text containing comments about this object."
                                      }, 
                                      "last_name": {
                                        "type": "string"
                                      }, 
                                      "description": {
                                        "type": "string", 
                                        "description": "A human-readable description in plain text."
                                      }, 
                                      "name": {
                                        "type": "string", 
                                        "description": "A human-readable name in plain text."
                                      }, 
                                      "domain_entry_id": {
                                        "type": "string"
                                      }, 
                                      "namespace": {
                                        "type": "string", 
                                        "description": "Namespace where the user resides. When using the authorization provider that stores users in the LDAP server,\nthis attribute equals the naming context of the LDAP server.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-ldap for more information.\nWhen using the built-in authorization provider that stores users in the database this attribute is ignored.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-jdbc for more information."
                                      }, 
                                      "id": {
                                        "type": "string", 
                                        "description": "A unique identifier."
                                      }, 
                                      "department": {
                                        "type": "string"
                                      }, 
                                      "logged_in": {
                                        "type": "boolean"
                                      }, 
                                      "password": {
                                        "type": "string"
                                      }, 
                                      "user_name": {
                                        "type": "string", 
                                        "description": "The user's username. The format depends on authorization provider type. In most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In Active Directory it is the User Principal Name (UPN). `UPN` or\n`uid` must be followed by the authorization provider name. For example, in the case of LDAP's `uid` attribute it is:\n`myuser@myextension-authz`. In the case of Active Directory using `UPN` it is:\n`myuser@mysubdomain.mydomain.com@myextension-authz`. This attribute is a required parameter when adding a new user."
                                      }, 
                                      "email": {
                                        "type": "string"
                                      }, 
                                      "principal": {
                                        "type": "string", 
                                        "description": "Similar to `user_name`. The format depends on the LDAP provider. With most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In the case of Active Directory it is the User Principal Name (UPN)."
                                      }
                                    }
                                  }, 
                                  "fingerprint": {
                                    "type": "string"
                                  }, 
                                  "port": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "name": {
                                    "type": "string", 
                                    "description": "A human-readable name in plain text."
                                  }
                                }
                              }, 
                              "numa_supported": {
                                "type": "boolean", 
                                "description": "Specifies whether _non uniform memory access_ (NUMA) is supported on this host."
                              }, 
                              "libvirt_version": {
                                "type": "object", 
                                "properties": {
                                  "comment": {
                                    "type": "string", 
                                    "description": "Free text containing comments about this object."
                                  }, 
                                  "major": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "description": {
                                    "type": "string", 
                                    "description": "A human-readable description in plain text."
                                  }, 
                                  "full_version": {
                                    "type": "string"
                                  }, 
                                  "name": {
                                    "type": "string", 
                                    "description": "A human-readable name in plain text."
                                  }, 
                                  "build": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "id": {
                                    "type": "string", 
                                    "description": "A unique identifier."
                                  }, 
                                  "minor": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "revision": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }
                                }
                              }, 
                              "power_management": {
                                "type": "object", 
                                "properties": {
                                  "status": {
                                    "enum": [
                                      "off", 
                                      "on", 
                                      "unknown"
                                    ], 
                                    "type": "string", 
                                    "description": "Determines the power status of the host."
                                  }, 
                                  "username": {
                                    "type": "string", 
                                    "description": "A valid user name for power management."
                                  }, 
                                  "kdump_detection": {
                                    "type": "boolean", 
                                    "description": "Toggles whether to determine if kdump is running on the host before it is shut down.\nWhen set to `true`, the host will not shut down during a kdump process.\nThis is set to `true` when a host has power management enabled, unless disabled by the user."
                                  }, 
                                  "automatic_pm_enabled": {
                                    "type": "boolean", 
                                    "description": "Toggles the automated power control of the host in order to save energy.\nWhen set to true, the host will be automatically powered down if the cluster's load is low,\nand powered on again when required. This is set to true when a host is created, unless disabled by the user."
                                  }, 
                                  "enabled": {
                                    "type": "boolean", 
                                    "description": "Indicates whether power management configuration is enabled or disabled."
                                  }, 
                                  "pm_proxies": {
                                    "items": {
                                      "type": "object", 
                                      "properties": {
                                        "type": {
                                          "enum": [
                                            "cluster", 
                                            "dc", 
                                            "other_dc"
                                          ], 
                                          "type": "string"
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "Determines the power management proxy."
                                  }, 
                                  "agents": {
                                    "items": {
                                      "type": "object", 
                                      "description": "Type representing a fence agent.", 
                                      "properties": {
                                        "comment": {
                                          "type": "string", 
                                          "description": "Free text containing comments about this object."
                                        }, 
                                        "username": {
                                          "type": "string", 
                                          "description": "Fence agent user name."
                                        }, 
                                        "encrypt_options": {
                                          "type": "boolean", 
                                          "description": "Specifies whether the options should be encrypted."
                                        }, 
                                        "description": {
                                          "type": "string", 
                                          "description": "A human-readable description in plain text."
                                        }, 
                                        "options": {
                                          "items": {
                                            "type": "object", 
                                            "properties": {
                                              "type": {
                                                "type": "string"
                                              }, 
                                              "name": {
                                                "type": "string"
                                              }, 
                                              "value": {
                                                "type": "string"
                                              }
                                            }
                                          }, 
                                          "type": "array", 
                                          "description": "Fence agent options (comma-delimited list of\nkey-value pairs)."
                                        }, 
                                        "order": {
                                          "type": "integer", 
                                          "description": "The order of this agent if used with other agents.", 
                                          "format": "int32"
                                        }, 
                                        "concurrent": {
                                          "type": "boolean", 
                                          "description": "Specifies whether the agent should be used concurrently\nor sequentially."
                                        }, 
                                        "address": {
                                          "type": "string", 
                                          "description": "Fence agent address."
                                        }, 
                                        "id": {
                                          "type": "string", 
                                          "description": "A unique identifier."
                                        }, 
                                        "password": {
                                          "type": "string", 
                                          "description": "Fence agent password."
                                        }, 
                                        "type": {
                                          "type": "string", 
                                          "description": "Fence agent type."
                                        }, 
                                        "port": {
                                          "type": "integer", 
                                          "description": "Fence agent port.", 
                                          "format": "int32"
                                        }, 
                                        "name": {
                                          "type": "string", 
                                          "description": "A human-readable name in plain text."
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "Specifies fence agent options when multiple fences are used.\n\nUse the order sub-element to prioritize the fence agents. Agents are run sequentially according to their\norder until the fence action succeeds. When two or more fence agents have the same order,\nthey are run concurrently. Other sub-elements include type, ip, user, password, and options."
                                  }, 
                                  "address": {
                                    "type": "string", 
                                    "description": "The host name or IP address of the host."
                                  }, 
                                  "password": {
                                    "type": "string", 
                                    "description": "A valid, robust password for power management."
                                  }, 
                                  "type": {
                                    "type": "string", 
                                    "description": "Fencing device code.\n\nA list of valid fencing device codes are available in the `capabilities` collection."
                                  }, 
                                  "options": {
                                    "items": {
                                      "type": "object", 
                                      "properties": {
                                        "type": {
                                          "type": "string"
                                        }, 
                                        "name": {
                                          "type": "string"
                                        }, 
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "Fencing options for the selected type= specified with the option name=\"\" and value=\"\" strings."
                                  }
                                }
                              }, 
                              "name": {
                                "type": "string", 
                                "description": "A human-readable name in plain text."
                              }, 
                              "max_scheduling_memory": {
                                "type": "integer", 
                                "description": "The max scheduling memory on this host in bytes.", 
                                "format": "int32"
                              }, 
                              "summary": {
                                "type": "object", 
                                "description": "Type containing information related to virtual machines on a particular host.", 
                                "properties": {
                                  "active": {
                                    "type": "integer", 
                                    "description": "The number of virtual machines active on the host.", 
                                    "format": "int32"
                                  }, 
                                  "migrating": {
                                    "type": "integer", 
                                    "description": "The number of virtual machines migrating to or from the host.", 
                                    "format": "int32"
                                  }, 
                                  "total": {
                                    "type": "integer", 
                                    "description": "The number of virtual machines present on the host.", 
                                    "format": "int32"
                                  }
                                }
                              }, 
                              "auto_numa_status": {
                                "enum": [
                                  "disable", 
                                  "enable", 
                                  "unknown"
                                ], 
                                "type": "string", 
                                "description": "The host auto _non uniform memory access_ (NUMA) status."
                              }, 
                              "os": {
                                "type": "object", 
                                "description": "Information describing the operating system. This is used for both virtual machines and hosts.", 
                                "properties": {
                                  "kernel": {
                                    "type": "string", 
                                    "description": "Path to custom kernel on ISO storage domain if Linux operating system is used.\n\nFor example `iso://vmlinuz-3.10.0-514.6.1.el7.x86_64`.\n\nNOTE: Not used for hosts."
                                  }, 
                                  "reported_kernel_cmdline": {
                                    "type": "string", 
                                    "description": "The host kernel command line as reported by a running host.\n\nThis is a read-only attribute. Attempts to change this attribute are silently ignored.\n\nNOTE: This attribute is currently only used for hosts."
                                  }, 
                                  "boot": {
                                    "type": "object", 
                                    "description": "Configuration of the boot sequence of a virtual machine.", 
                                    "properties": {
                                      "devices": {
                                        "items": {
                                          "enum": [
                                            "cdrom", 
                                            "hd", 
                                            "network"
                                          ], 
                                          "type": "string"
                                        }, 
                                        "type": "array", 
                                        "description": "Ordered list of boot devices. The virtual machine will try to boot from the given boot devices, in the given\norder."
                                      }
                                    }
                                  }, 
                                  "cmdline": {
                                    "type": "string", 
                                    "description": "Custom kernel parameters for start the virtual machine with if Linux operating system is used.\n\nNOTE: Not used for hosts."
                                  }, 
                                  "initrd": {
                                    "type": "string", 
                                    "description": "Path to custom initial ramdisk on ISO storage domain if Linux operating system is used.\n\nFor example `iso://initramfs-3.10.0-514.6.1.el7.x86_64.img`.\n\nNOTE: Not used for hosts."
                                  }, 
                                  "version": {
                                    "type": "object", 
                                    "properties": {
                                      "comment": {
                                        "type": "string", 
                                        "description": "Free text containing comments about this object."
                                      }, 
                                      "major": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "description": {
                                        "type": "string", 
                                        "description": "A human-readable description in plain text."
                                      }, 
                                      "full_version": {
                                        "type": "string"
                                      }, 
                                      "name": {
                                        "type": "string", 
                                        "description": "A human-readable name in plain text."
                                      }, 
                                      "build": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "id": {
                                        "type": "string", 
                                        "description": "A unique identifier."
                                      }, 
                                      "minor": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "revision": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }
                                    }
                                  }, 
                                  "custom_kernel_cmdline": {
                                    "type": "string", 
                                    "description": "A custom part of the host kernel command line. This will be merged with the existing kernel command line.\n\nYou must reinstall and then reboot the host to apply the changes implemented by this attribute.\n\nDuring each host deploy procedure, kernel parameters that were added\nin the previous host deploy procedure are removed using\n`grubby --update-kernel DEFAULT --remove-args <previous_custom_params>`, and the current\nkernel command line customization is applied using\n`grubby --update-kernel DEFAULT --args <custom_params>`. The Manager internally keeps track of the\nlast-applied kernel parameters customization.\n\nNOTE: This attribute is currently only used for hosts."
                                  }, 
                                  "type": {
                                    "type": "string", 
                                    "description": "Operating system name in human readable form.\n\nFor example `Fedora` or `RHEL`. In general one of the names returned by the <<services/operating_systems,\noperating system>> service.\n\nNOTE: Read only for hosts."
                                  }
                                }
                              }, 
                              "cpu": {
                                "type": "object", 
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }, 
                                  "level": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "speed": {
                                    "type": "number", 
                                    "format": "double"
                                  }, 
                                  "cpu_tune": {
                                    "type": "object", 
                                    "properties": {
                                      "vcpu_pins": {
                                        "items": {
                                          "type": "object", 
                                          "properties": {
                                            "cpu_set": {
                                              "type": "string"
                                            }, 
                                            "vcpu": {
                                              "type": "integer", 
                                              "format": "int32"
                                            }
                                          }
                                        }, 
                                        "type": "array"
                                      }
                                    }
                                  }, 
                                  "architecture": {
                                    "enum": [
                                      "ppc64", 
                                      "undefined", 
                                      "x86_64"
                                    ], 
                                    "type": "string"
                                  }, 
                                  "mode": {
                                    "enum": [
                                      "custom", 
                                      "host_model", 
                                      "host_passthrough"
                                    ], 
                                    "type": "string"
                                  }, 
                                  "cores": {
                                    "items": {
                                      "type": "object", 
                                      "properties": {
                                        "index": {
                                          "type": "integer", 
                                          "format": "int32"
                                        }, 
                                        "socket": {
                                          "type": "integer", 
                                          "format": "int32"
                                        }
                                      }
                                    }, 
                                    "type": "array"
                                  }, 
                                  "type": {
                                    "type": "string"
                                  }, 
                                  "topology": {
                                    "type": "object", 
                                    "properties": {
                                      "cores": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "threads": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "sockets": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }
                                    }
                                  }
                                }
                              }, 
                              "kdump_status": {
                                "enum": [
                                  "disabled", 
                                  "enabled", 
                                  "unknown"
                                ], 
                                "type": "string", 
                                "description": "The host KDUMP status.\nKDUMP happens when the host kernel has crashed and it is now going through memory dumping."
                              }, 
                              "root_password": {
                                "type": "string", 
                                "description": "When creating a new host, a root password is required if the password authentication method is chosen,\nbut this is not subsequently included in the representation."
                              }
                            }
                          }, 
                          "type": "array", 
                          "description": "Array of hosts serving as DNS servers."
                        }
                      }
                    }
                  }
                }, 
                "users": {
                  "items": {
                    "type": "object", 
                    "description": "Represents a user in the system.", 
                    "properties": {
                      "comment": {
                        "type": "string", 
                        "description": "Free text containing comments about this object."
                      }, 
                      "last_name": {
                        "type": "string"
                      }, 
                      "description": {
                        "type": "string", 
                        "description": "A human-readable description in plain text."
                      }, 
                      "name": {
                        "type": "string", 
                        "description": "A human-readable name in plain text."
                      }, 
                      "domain_entry_id": {
                        "type": "string"
                      }, 
                      "namespace": {
                        "type": "string", 
                        "description": "Namespace where the user resides. When using the authorization provider that stores users in the LDAP server,\nthis attribute equals the naming context of the LDAP server.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-ldap for more information.\nWhen using the built-in authorization provider that stores users in the database this attribute is ignored.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-jdbc for more information."
                      }, 
                      "id": {
                        "type": "string", 
                        "description": "A unique identifier."
                      }, 
                      "department": {
                        "type": "string"
                      }, 
                      "logged_in": {
                        "type": "boolean"
                      }, 
                      "password": {
                        "type": "string"
                      }, 
                      "user_name": {
                        "type": "string", 
                        "description": "The user's username. The format depends on authorization provider type. In most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In Active Directory it is the User Principal Name (UPN). `UPN` or\n`uid` must be followed by the authorization provider name. For example, in the case of LDAP's `uid` attribute it is:\n`myuser@myextension-authz`. In the case of Active Directory using `UPN` it is:\n`myuser@mysubdomain.mydomain.com@myextension-authz`. This attribute is a required parameter when adding a new user."
                      }, 
                      "email": {
                        "type": "string"
                      }, 
                      "principal": {
                        "type": "string", 
                        "description": "Similar to `user_name`. The format depends on the LDAP provider. With most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In the case of Active Directory it is the User Principal Name (UPN)."
                      }
                    }
                  }, 
                  "type": "array"
                }, 
                "regenerate_ssh_keys": {
                  "type": "boolean"
                }, 
                "host": {
                  "type": "object", 
                  "description": "Type representing a host.", 
                  "properties": {
                    "comment": {
                      "type": "string", 
                      "description": "Free text containing comments about this object."
                    }, 
                    "update_available": {
                      "type": "boolean", 
                      "description": "Specifies whether there is an oVirt-related update on this host."
                    }, 
                    "protocol": {
                      "enum": [
                        "stomp", 
                        "xml"
                      ], 
                      "type": "string", 
                      "description": "The protocol that the engine uses to communicate with\nthe host.\n\nWARNING: Since version 4.1 of the engine the protocol\nis always set to `stomp` since `xml` was removed."
                    }, 
                    "version": {
                      "type": "object", 
                      "properties": {
                        "comment": {
                          "type": "string", 
                          "description": "Free text containing comments about this object."
                        }, 
                        "major": {
                          "type": "integer", 
                          "format": "int32"
                        }, 
                        "description": {
                          "type": "string", 
                          "description": "A human-readable description in plain text."
                        }, 
                        "full_version": {
                          "type": "string"
                        }, 
                        "name": {
                          "type": "string", 
                          "description": "A human-readable name in plain text."
                        }, 
                        "build": {
                          "type": "integer", 
                          "format": "int32"
                        }, 
                        "id": {
                          "type": "string", 
                          "description": "A unique identifier."
                        }, 
                        "minor": {
                          "type": "integer", 
                          "format": "int32"
                        }, 
                        "revision": {
                          "type": "integer", 
                          "format": "int32"
                        }
                      }
                    }, 
                    "spm": {
                      "type": "object", 
                      "properties": {
                        "priority": {
                          "type": "integer", 
                          "format": "int32"
                        }, 
                        "status": {
                          "enum": [
                            "contending", 
                            "none", 
                            "spm"
                          ], 
                          "type": "string"
                        }
                      }
                    }, 
                    "hosted_engine": {
                      "type": "object", 
                      "properties": {
                        "active": {
                          "type": "boolean"
                        }, 
                        "local_maintenance": {
                          "type": "boolean"
                        }, 
                        "configured": {
                          "type": "boolean"
                        }, 
                        "score": {
                          "type": "integer", 
                          "format": "int32"
                        }, 
                        "global_maintenance": {
                          "type": "boolean"
                        }
                      }
                    }, 
                    "id": {
                      "type": "string", 
                      "description": "A unique identifier."
                    }, 
                    "external_status": {
                      "enum": [
                        "error", 
                        "failure", 
                        "info", 
                        "ok", 
                        "warning"
                      ], 
                      "type": "string", 
                      "description": "The host external status.\nThis can be used by third-party software to change the host external status\nin case of an issue.\nThis has no effect on the host lifecycle, unless a third-party software checks for this\nstatus and acts accordingly."
                    }, 
                    "certificate": {
                      "type": "object", 
                      "properties": {
                        "comment": {
                          "type": "string", 
                          "description": "Free text containing comments about this object."
                        }, 
                        "description": {
                          "type": "string", 
                          "description": "A human-readable description in plain text."
                        }, 
                        "name": {
                          "type": "string", 
                          "description": "A human-readable name in plain text."
                        }, 
                        "content": {
                          "type": "string"
                        }, 
                        "organization": {
                          "type": "string"
                        }, 
                        "id": {
                          "type": "string", 
                          "description": "A unique identifier."
                        }, 
                        "subject": {
                          "type": "string"
                        }
                      }
                    }, 
                    "display": {
                      "type": "object", 
                      "description": "Represents a graphic console configuration.", 
                      "properties": {
                        "allow_override": {
                          "type": "boolean", 
                          "description": "Indicates if to override the display address per host.\nRelevant only for the `Host.display` attribute.\nIf set, the graphical console address of a virtual machine will be overridden by the host specified display address.\nif not set, the graphical console address of a virtual machine will not be overridden."
                        }, 
                        "disconnect_action": {
                          "type": "string", 
                          "description": "Returns the action that will take place when the graphic console is disconnected.\nThe options are:\n\nnone:: No action is taken.\nlock_screen:: Locks the currently active user session.\nlogout:: Logs out the currently active user session.\nreboot:: Initiates a graceful virtual machine reboot.\nshutdown:: Initiates a graceful virtual machine shutdown.\n\nThis option is only available for the SPICE console type."
                        }, 
                        "certificate": {
                          "type": "object", 
                          "properties": {
                            "comment": {
                              "type": "string", 
                              "description": "Free text containing comments about this object."
                            }, 
                            "description": {
                              "type": "string", 
                              "description": "A human-readable description in plain text."
                            }, 
                            "name": {
                              "type": "string", 
                              "description": "A human-readable name in plain text."
                            }, 
                            "content": {
                              "type": "string"
                            }, 
                            "organization": {
                              "type": "string"
                            }, 
                            "id": {
                              "type": "string", 
                              "description": "A unique identifier."
                            }, 
                            "subject": {
                              "type": "string"
                            }
                          }
                        }, 
                        "monitors": {
                          "type": "integer", 
                          "description": "The number of monitors opened for this graphic console.\nThis option is only available for the SPICE console type.\nPossible values are 1, 2 or 4.", 
                          "format": "int32"
                        }, 
                        "single_qxl_pci": {
                          "type": "boolean", 
                          "description": "Indicates if to use one PCI slot for each monitor or to use a single PCI channel for all multiple monitors.\nThis option is only available for the SPICE console type and only for connecting a guest Linux based OS."
                        }, 
                        "copy_paste_enabled": {
                          "type": "boolean", 
                          "description": "Indicates whether a user is able to copy and paste content from an external host into the graphic console.\nThis option is only available for the SPICE console type."
                        }, 
                        "secure_port": {
                          "type": "integer", 
                          "description": "The secured port address on the guest, in case of using TLS, to connect the graphic console client to.\nIf TLS isn't enabled then it won't be reported.", 
                          "format": "int32"
                        }, 
                        "proxy": {
                          "type": "string", 
                          "description": "The proxy IP which will be used by the graphic console client to connect to the guest.\nIt is useful when the client is outside the guest's network.\nThis option is only available for the SPICE console type.\nThis proxy can be set in global configuration, cluster level, virtual machine pool level or disabled\nper virtual machine.\nIf the proxy is set in any of this mentioned places and not disabled for the virtual machine, it will be\nreturned by this method.\nIf the proxy is not set, nothing will be reported."
                        }, 
                        "smartcard_enabled": {
                          "type": "boolean", 
                          "description": "Indicates if to use smart card authentication.\nThis option is only available for the SPICE console type."
                        }, 
                        "file_transfer_enabled": {
                          "type": "boolean", 
                          "description": "Indicates if a user is able to drag and drop files from an external host into the graphic console.\nThis option is only available for the SPICE console type."
                        }, 
                        "keyboard_layout": {
                          "type": "string", 
                          "description": "The keyboard layout to use with this graphic console.\nThis option is only available for the VNC console type.\nIf no keyboard is enabled then it won't be reported."
                        }, 
                        "type": {
                          "enum": [
                            "spice", 
                            "vnc"
                          ], 
                          "type": "string", 
                          "description": "The graphic console protocol type."
                        }, 
                        "port": {
                          "type": "integer", 
                          "description": "The port address on the guest to connect the graphic console client to.", 
                          "format": "int32"
                        }, 
                        "address": {
                          "type": "string", 
                          "description": "The IP address of the guest to connect the graphic console client to."
                        }
                      }
                    }, 
                    "iscsi": {
                      "type": "object", 
                      "properties": {
                        "status": {
                          "type": "string"
                        }, 
                        "username": {
                          "type": "string"
                        }, 
                        "initiator": {
                          "type": "string"
                        }, 
                        "vendor_id": {
                          "type": "string"
                        }, 
                        "volume_group_id": {
                          "type": "string"
                        }, 
                        "paths": {
                          "type": "integer", 
                          "format": "int32"
                        }, 
                        "storage_domain_id": {
                          "type": "string"
                        }, 
                        "disk_id": {
                          "type": "string"
                        }, 
                        "password": {
                          "type": "string"
                        }, 
                        "portal": {
                          "type": "string"
                        }, 
                        "address": {
                          "type": "string"
                        }, 
                        "lun_mapping": {
                          "type": "integer", 
                          "format": "int32"
                        }, 
                        "serial": {
                          "type": "string"
                        }, 
                        "size": {
                          "type": "integer", 
                          "format": "int32"
                        }, 
                        "target": {
                          "type": "string"
                        }, 
                        "port": {
                          "type": "integer", 
                          "format": "int32"
                        }, 
                        "product_id": {
                          "type": "string"
                        }
                      }
                    }, 
                    "port": {
                      "type": "integer", 
                      "description": "The host port.", 
                      "format": "int32"
                    }, 
                    "hardware_information": {
                      "type": "object", 
                      "description": "Represents hardware information of host.\n\nTo get that information send a request like this:\n\n....\nGET /ovirt-engine/api/hosts/123\n....\n\nThe result will be like this:\n\n[source,xml]\n----\n<host href=\"/ovirt-engine/api/hosts/123\" id=\"123\">\n  ...\n  <hardware_information>\n    <family>Red Hat Enterprise Linux</family>\n    <manufacturer>Red Hat</manufacturer>\n    <product_name>RHEV Hypervisor</product_name>\n    <serial_number>01234567-89AB-CDEF-0123-456789ABCDEF</serial_number>\n    <supported_rng_sources>\n      <supported_rng_source>random</supported_rng_source>\n    </supported_rng_sources>\n    <uuid>12345678-9ABC-DEF0-1234-56789ABCDEF0</uuid>\n    <version>1.2-34.5.el7ev</version>\n  </hardware_information>\n  ...\n</application>\n----", 
                      "properties": {
                        "uuid": {
                          "type": "string", 
                          "description": "Unique ID for each host."
                        }, 
                        "family": {
                          "type": "string", 
                          "description": "Type of host's CPU."
                        }, 
                        "supported_rng_sources": {
                          "items": {
                            "enum": [
                              "hwrng", 
                              "random", 
                              "urandom"
                            ], 
                            "type": "string"
                          }, 
                          "type": "array", 
                          "description": "Supported sources of random number generator."
                        }, 
                        "version": {
                          "type": "string", 
                          "description": "Unique name for each of the manufacturer."
                        }, 
                        "serial_number": {
                          "type": "string", 
                          "description": "Unique ID for host's chassis."
                        }, 
                        "product_name": {
                          "type": "string", 
                          "description": "Host's product name (for example `RHEV Hypervisor`)."
                        }, 
                        "manufacturer": {
                          "type": "string", 
                          "description": "Manufacturer of the host's machine and hardware vendor."
                        }
                      }
                    }, 
                    "memory": {
                      "type": "integer", 
                      "description": "The amount of physical memory on this host in bytes.", 
                      "format": "int32"
                    }, 
                    "ksm": {
                      "type": "object", 
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }, 
                        "merge_across_nodes": {
                          "type": "boolean"
                        }
                      }
                    }, 
                    "se_linux": {
                      "type": "object", 
                      "description": "Represents SELinux in the system.", 
                      "properties": {
                        "mode": {
                          "enum": [
                            "disabled", 
                            "enforcing", 
                            "permissive"
                          ], 
                          "type": "string", 
                          "description": "SELinux current mode."
                        }
                      }
                    }, 
                    "type": {
                      "enum": [
                        "ovirt_node", 
                        "rhel", 
                        "rhev_h"
                      ], 
                      "type": "string", 
                      "description": "Indicates if the host contains a full installation of the operating system or a scaled-down version intended\nonly to host virtual machines."
                    }, 
                    "status": {
                      "enum": [
                        "connecting", 
                        "down", 
                        "error", 
                        "initializing", 
                        "install_failed", 
                        "installing", 
                        "installing_os", 
                        "kdumping", 
                        "maintenance", 
                        "non_operational", 
                        "non_responsive", 
                        "pending_approval", 
                        "preparing_for_maintenance", 
                        "reboot", 
                        "unassigned", 
                        "up"
                      ], 
                      "type": "string", 
                      "description": "The host status."
                    }, 
                    "description": {
                      "type": "string", 
                      "description": "A human-readable description in plain text."
                    }, 
                    "status_detail": {
                      "type": "string", 
                      "description": "The host status details. Relevant for Gluster hosts."
                    }, 
                    "transparent_hugepages": {
                      "type": "object", 
                      "description": "Type representing a transparent huge pages (THP) support.", 
                      "properties": {
                        "enabled": {
                          "type": "boolean", 
                          "description": "Enable THP support."
                        }
                      }
                    }, 
                    "address": {
                      "type": "string", 
                      "description": "The host address (FQDN/IP)."
                    }, 
                    "override_iptables": {
                      "type": "boolean", 
                      "description": "Specifies whether we should override firewall definitions.\nThis applies only when the host is installed or re-installed."
                    }, 
                    "device_passthrough": {
                      "type": "object", 
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }
                      }
                    }, 
                    "ssh": {
                      "type": "object", 
                      "properties": {
                        "comment": {
                          "type": "string", 
                          "description": "Free text containing comments about this object."
                        }, 
                        "description": {
                          "type": "string", 
                          "description": "A human-readable description in plain text."
                        }, 
                        "authentication_method": {
                          "enum": [
                            "password", 
                            "publickey"
                          ], 
                          "type": "string"
                        }, 
                        "id": {
                          "type": "string", 
                          "description": "A unique identifier."
                        }, 
                        "user": {
                          "type": "object", 
                          "description": "Represents a user in the system.", 
                          "properties": {
                            "comment": {
                              "type": "string", 
                              "description": "Free text containing comments about this object."
                            }, 
                            "last_name": {
                              "type": "string"
                            }, 
                            "description": {
                              "type": "string", 
                              "description": "A human-readable description in plain text."
                            }, 
                            "name": {
                              "type": "string", 
                              "description": "A human-readable name in plain text."
                            }, 
                            "domain_entry_id": {
                              "type": "string"
                            }, 
                            "namespace": {
                              "type": "string", 
                              "description": "Namespace where the user resides. When using the authorization provider that stores users in the LDAP server,\nthis attribute equals the naming context of the LDAP server.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-ldap for more information.\nWhen using the built-in authorization provider that stores users in the database this attribute is ignored.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-jdbc for more information."
                            }, 
                            "id": {
                              "type": "string", 
                              "description": "A unique identifier."
                            }, 
                            "department": {
                              "type": "string"
                            }, 
                            "logged_in": {
                              "type": "boolean"
                            }, 
                            "password": {
                              "type": "string"
                            }, 
                            "user_name": {
                              "type": "string", 
                              "description": "The user's username. The format depends on authorization provider type. In most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In Active Directory it is the User Principal Name (UPN). `UPN` or\n`uid` must be followed by the authorization provider name. For example, in the case of LDAP's `uid` attribute it is:\n`myuser@myextension-authz`. In the case of Active Directory using `UPN` it is:\n`myuser@mysubdomain.mydomain.com@myextension-authz`. This attribute is a required parameter when adding a new user."
                            }, 
                            "email": {
                              "type": "string"
                            }, 
                            "principal": {
                              "type": "string", 
                              "description": "Similar to `user_name`. The format depends on the LDAP provider. With most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In the case of Active Directory it is the User Principal Name (UPN)."
                            }
                          }
                        }, 
                        "fingerprint": {
                          "type": "string"
                        }, 
                        "port": {
                          "type": "integer", 
                          "format": "int32"
                        }, 
                        "name": {
                          "type": "string", 
                          "description": "A human-readable name in plain text."
                        }
                      }
                    }, 
                    "numa_supported": {
                      "type": "boolean", 
                      "description": "Specifies whether _non uniform memory access_ (NUMA) is supported on this host."
                    }, 
                    "libvirt_version": {
                      "type": "object", 
                      "properties": {
                        "comment": {
                          "type": "string", 
                          "description": "Free text containing comments about this object."
                        }, 
                        "major": {
                          "type": "integer", 
                          "format": "int32"
                        }, 
                        "description": {
                          "type": "string", 
                          "description": "A human-readable description in plain text."
                        }, 
                        "full_version": {
                          "type": "string"
                        }, 
                        "name": {
                          "type": "string", 
                          "description": "A human-readable name in plain text."
                        }, 
                        "build": {
                          "type": "integer", 
                          "format": "int32"
                        }, 
                        "id": {
                          "type": "string", 
                          "description": "A unique identifier."
                        }, 
                        "minor": {
                          "type": "integer", 
                          "format": "int32"
                        }, 
                        "revision": {
                          "type": "integer", 
                          "format": "int32"
                        }
                      }
                    }, 
                    "power_management": {
                      "type": "object", 
                      "properties": {
                        "status": {
                          "enum": [
                            "off", 
                            "on", 
                            "unknown"
                          ], 
                          "type": "string", 
                          "description": "Determines the power status of the host."
                        }, 
                        "username": {
                          "type": "string", 
                          "description": "A valid user name for power management."
                        }, 
                        "kdump_detection": {
                          "type": "boolean", 
                          "description": "Toggles whether to determine if kdump is running on the host before it is shut down.\nWhen set to `true`, the host will not shut down during a kdump process.\nThis is set to `true` when a host has power management enabled, unless disabled by the user."
                        }, 
                        "automatic_pm_enabled": {
                          "type": "boolean", 
                          "description": "Toggles the automated power control of the host in order to save energy.\nWhen set to true, the host will be automatically powered down if the cluster's load is low,\nand powered on again when required. This is set to true when a host is created, unless disabled by the user."
                        }, 
                        "enabled": {
                          "type": "boolean", 
                          "description": "Indicates whether power management configuration is enabled or disabled."
                        }, 
                        "pm_proxies": {
                          "items": {
                            "type": "object", 
                            "properties": {
                              "type": {
                                "enum": [
                                  "cluster", 
                                  "dc", 
                                  "other_dc"
                                ], 
                                "type": "string"
                              }
                            }
                          }, 
                          "type": "array", 
                          "description": "Determines the power management proxy."
                        }, 
                        "agents": {
                          "items": {
                            "type": "object", 
                            "description": "Type representing a fence agent.", 
                            "properties": {
                              "comment": {
                                "type": "string", 
                                "description": "Free text containing comments about this object."
                              }, 
                              "username": {
                                "type": "string", 
                                "description": "Fence agent user name."
                              }, 
                              "encrypt_options": {
                                "type": "boolean", 
                                "description": "Specifies whether the options should be encrypted."
                              }, 
                              "description": {
                                "type": "string", 
                                "description": "A human-readable description in plain text."
                              }, 
                              "options": {
                                "items": {
                                  "type": "object", 
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    }, 
                                    "name": {
                                      "type": "string"
                                    }, 
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                }, 
                                "type": "array", 
                                "description": "Fence agent options (comma-delimited list of\nkey-value pairs)."
                              }, 
                              "order": {
                                "type": "integer", 
                                "description": "The order of this agent if used with other agents.", 
                                "format": "int32"
                              }, 
                              "concurrent": {
                                "type": "boolean", 
                                "description": "Specifies whether the agent should be used concurrently\nor sequentially."
                              }, 
                              "address": {
                                "type": "string", 
                                "description": "Fence agent address."
                              }, 
                              "id": {
                                "type": "string", 
                                "description": "A unique identifier."
                              }, 
                              "password": {
                                "type": "string", 
                                "description": "Fence agent password."
                              }, 
                              "type": {
                                "type": "string", 
                                "description": "Fence agent type."
                              }, 
                              "port": {
                                "type": "integer", 
                                "description": "Fence agent port.", 
                                "format": "int32"
                              }, 
                              "name": {
                                "type": "string", 
                                "description": "A human-readable name in plain text."
                              }
                            }
                          }, 
                          "type": "array", 
                          "description": "Specifies fence agent options when multiple fences are used.\n\nUse the order sub-element to prioritize the fence agents. Agents are run sequentially according to their\norder until the fence action succeeds. When two or more fence agents have the same order,\nthey are run concurrently. Other sub-elements include type, ip, user, password, and options."
                        }, 
                        "address": {
                          "type": "string", 
                          "description": "The host name or IP address of the host."
                        }, 
                        "password": {
                          "type": "string", 
                          "description": "A valid, robust password for power management."
                        }, 
                        "type": {
                          "type": "string", 
                          "description": "Fencing device code.\n\nA list of valid fencing device codes are available in the `capabilities` collection."
                        }, 
                        "options": {
                          "items": {
                            "type": "object", 
                            "properties": {
                              "type": {
                                "type": "string"
                              }, 
                              "name": {
                                "type": "string"
                              }, 
                              "value": {
                                "type": "string"
                              }
                            }
                          }, 
                          "type": "array", 
                          "description": "Fencing options for the selected type= specified with the option name=\"\" and value=\"\" strings."
                        }
                      }
                    }, 
                    "name": {
                      "type": "string", 
                      "description": "A human-readable name in plain text."
                    }, 
                    "max_scheduling_memory": {
                      "type": "integer", 
                      "description": "The max scheduling memory on this host in bytes.", 
                      "format": "int32"
                    }, 
                    "summary": {
                      "type": "object", 
                      "description": "Type containing information related to virtual machines on a particular host.", 
                      "properties": {
                        "active": {
                          "type": "integer", 
                          "description": "The number of virtual machines active on the host.", 
                          "format": "int32"
                        }, 
                        "migrating": {
                          "type": "integer", 
                          "description": "The number of virtual machines migrating to or from the host.", 
                          "format": "int32"
                        }, 
                        "total": {
                          "type": "integer", 
                          "description": "The number of virtual machines present on the host.", 
                          "format": "int32"
                        }
                      }
                    }, 
                    "auto_numa_status": {
                      "enum": [
                        "disable", 
                        "enable", 
                        "unknown"
                      ], 
                      "type": "string", 
                      "description": "The host auto _non uniform memory access_ (NUMA) status."
                    }, 
                    "os": {
                      "type": "object", 
                      "description": "Information describing the operating system. This is used for both virtual machines and hosts.", 
                      "properties": {
                        "kernel": {
                          "type": "string", 
                          "description": "Path to custom kernel on ISO storage domain if Linux operating system is used.\n\nFor example `iso://vmlinuz-3.10.0-514.6.1.el7.x86_64`.\n\nNOTE: Not used for hosts."
                        }, 
                        "reported_kernel_cmdline": {
                          "type": "string", 
                          "description": "The host kernel command line as reported by a running host.\n\nThis is a read-only attribute. Attempts to change this attribute are silently ignored.\n\nNOTE: This attribute is currently only used for hosts."
                        }, 
                        "boot": {
                          "type": "object", 
                          "description": "Configuration of the boot sequence of a virtual machine.", 
                          "properties": {
                            "devices": {
                              "items": {
                                "enum": [
                                  "cdrom", 
                                  "hd", 
                                  "network"
                                ], 
                                "type": "string"
                              }, 
                              "type": "array", 
                              "description": "Ordered list of boot devices. The virtual machine will try to boot from the given boot devices, in the given\norder."
                            }
                          }
                        }, 
                        "cmdline": {
                          "type": "string", 
                          "description": "Custom kernel parameters for start the virtual machine with if Linux operating system is used.\n\nNOTE: Not used for hosts."
                        }, 
                        "initrd": {
                          "type": "string", 
                          "description": "Path to custom initial ramdisk on ISO storage domain if Linux operating system is used.\n\nFor example `iso://initramfs-3.10.0-514.6.1.el7.x86_64.img`.\n\nNOTE: Not used for hosts."
                        }, 
                        "version": {
                          "type": "object", 
                          "properties": {
                            "comment": {
                              "type": "string", 
                              "description": "Free text containing comments about this object."
                            }, 
                            "major": {
                              "type": "integer", 
                              "format": "int32"
                            }, 
                            "description": {
                              "type": "string", 
                              "description": "A human-readable description in plain text."
                            }, 
                            "full_version": {
                              "type": "string"
                            }, 
                            "name": {
                              "type": "string", 
                              "description": "A human-readable name in plain text."
                            }, 
                            "build": {
                              "type": "integer", 
                              "format": "int32"
                            }, 
                            "id": {
                              "type": "string", 
                              "description": "A unique identifier."
                            }, 
                            "minor": {
                              "type": "integer", 
                              "format": "int32"
                            }, 
                            "revision": {
                              "type": "integer", 
                              "format": "int32"
                            }
                          }
                        }, 
                        "custom_kernel_cmdline": {
                          "type": "string", 
                          "description": "A custom part of the host kernel command line. This will be merged with the existing kernel command line.\n\nYou must reinstall and then reboot the host to apply the changes implemented by this attribute.\n\nDuring each host deploy procedure, kernel parameters that were added\nin the previous host deploy procedure are removed using\n`grubby --update-kernel DEFAULT --remove-args <previous_custom_params>`, and the current\nkernel command line customization is applied using\n`grubby --update-kernel DEFAULT --args <custom_params>`. The Manager internally keeps track of the\nlast-applied kernel parameters customization.\n\nNOTE: This attribute is currently only used for hosts."
                        }, 
                        "type": {
                          "type": "string", 
                          "description": "Operating system name in human readable form.\n\nFor example `Fedora` or `RHEL`. In general one of the names returned by the <<services/operating_systems,\noperating system>> service.\n\nNOTE: Read only for hosts."
                        }
                      }
                    }, 
                    "cpu": {
                      "type": "object", 
                      "properties": {
                        "name": {
                          "type": "string"
                        }, 
                        "level": {
                          "type": "integer", 
                          "format": "int32"
                        }, 
                        "speed": {
                          "type": "number", 
                          "format": "double"
                        }, 
                        "cpu_tune": {
                          "type": "object", 
                          "properties": {
                            "vcpu_pins": {
                              "items": {
                                "type": "object", 
                                "properties": {
                                  "cpu_set": {
                                    "type": "string"
                                  }, 
                                  "vcpu": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }
                                }
                              }, 
                              "type": "array"
                            }
                          }
                        }, 
                        "architecture": {
                          "enum": [
                            "ppc64", 
                            "undefined", 
                            "x86_64"
                          ], 
                          "type": "string"
                        }, 
                        "mode": {
                          "enum": [
                            "custom", 
                            "host_model", 
                            "host_passthrough"
                          ], 
                          "type": "string"
                        }, 
                        "cores": {
                          "items": {
                            "type": "object", 
                            "properties": {
                              "index": {
                                "type": "integer", 
                                "format": "int32"
                              }, 
                              "socket": {
                                "type": "integer", 
                                "format": "int32"
                              }
                            }
                          }, 
                          "type": "array"
                        }, 
                        "type": {
                          "type": "string"
                        }, 
                        "topology": {
                          "type": "object", 
                          "properties": {
                            "cores": {
                              "type": "integer", 
                              "format": "int32"
                            }, 
                            "threads": {
                              "type": "integer", 
                              "format": "int32"
                            }, 
                            "sockets": {
                              "type": "integer", 
                              "format": "int32"
                            }
                          }
                        }
                      }
                    }, 
                    "kdump_status": {
                      "enum": [
                        "disabled", 
                        "enabled", 
                        "unknown"
                      ], 
                      "type": "string", 
                      "description": "The host KDUMP status.\nKDUMP happens when the host kernel has crashed and it is now going through memory dumping."
                    }, 
                    "root_password": {
                      "type": "string", 
                      "description": "When creating a new host, a root password is required if the password authentication method is chosen,\nbut this is not subsequently included in the representation."
                    }
                  }
                }, 
                "timezone": {
                  "type": "string"
                }
              }
            }, 
            "regenerate_ssh_keys": {
              "type": "boolean"
            }, 
            "dns_search": {
              "type": "string"
            }, 
            "input_locale": {
              "type": "string"
            }, 
            "windows_license_key": {
              "type": "string"
            }, 
            "user_locale": {
              "type": "string"
            }, 
            "root_password": {
              "type": "string"
            }, 
            "regenerate_ids": {
              "type": "boolean"
            }, 
            "ui_language": {
              "type": "string"
            }, 
            "timezone": {
              "type": "string"
            }, 
            "nic_configurations": {
              "items": {
                "type": "object", 
                "description": "The type describes the configuration of a virtual network interface.", 
                "properties": {
                  "name": {
                    "type": "string", 
                    "description": "Network interface name."
                  }, 
                  "ipv6_boot_protocol": {
                    "enum": [
                      "autoconf", 
                      "dhcp", 
                      "none", 
                      "static"
                    ], 
                    "type": "string", 
                    "description": "IPv6 boot protocol."
                  }, 
                  "ip": {
                    "type": "object", 
                    "description": "Represents the IP configuration of a network interface.", 
                    "properties": {
                      "netmask": {
                        "type": "string", 
                        "description": "The network mask.\n\nFor IPv6 addresses the value is an integer in the range of 0-128, which represents the subnet prefix."
                      }, 
                      "version": {
                        "enum": [
                          "v4", 
                          "v6"
                        ], 
                        "type": "string", 
                        "description": "The version of the IP protocol.\n\nNOTE: From version 4.1 of the Manager this attribute will be optional, and when a value is not provided, it will\nbe inferred from the value of the `address` attribute."
                      }, 
                      "gateway": {
                        "type": "string", 
                        "description": "The address of the default gateway."
                      }, 
                      "address": {
                        "type": "string", 
                        "description": "The text representation of the IP address.\n\nFor example, an IPv4 address will be represented as follows:\n\n[source,xml]\n----\n<ip>\n  <address>192.168.0.1</address>\n  ...\n</ip>\n----\n\nAn IPv6 address will be represented as follows:\n\n[source,xml]\n----\n<ip>\n  <address>2620:52:0:20f0:4216:7eff:feaa:1b50</address>\n  ...\n</ip>\n----"
                      }
                    }
                  }, 
                  "boot_protocol": {
                    "enum": [
                      "autoconf", 
                      "dhcp", 
                      "none", 
                      "static"
                    ], 
                    "type": "string", 
                    "description": "IPv4 boot protocol."
                  }, 
                  "on_boot": {
                    "type": "boolean", 
                    "description": "Specifies whether the network interface should be activated on the virtual machine guest operating system boot."
                  }, 
                  "ipv6": {
                    "type": "object", 
                    "description": "Represents the IP configuration of a network interface.", 
                    "properties": {
                      "netmask": {
                        "type": "string", 
                        "description": "The network mask.\n\nFor IPv6 addresses the value is an integer in the range of 0-128, which represents the subnet prefix."
                      }, 
                      "version": {
                        "enum": [
                          "v4", 
                          "v6"
                        ], 
                        "type": "string", 
                        "description": "The version of the IP protocol.\n\nNOTE: From version 4.1 of the Manager this attribute will be optional, and when a value is not provided, it will\nbe inferred from the value of the `address` attribute."
                      }, 
                      "gateway": {
                        "type": "string", 
                        "description": "The address of the default gateway."
                      }, 
                      "address": {
                        "type": "string", 
                        "description": "The text representation of the IP address.\n\nFor example, an IPv4 address will be represented as follows:\n\n[source,xml]\n----\n<ip>\n  <address>192.168.0.1</address>\n  ...\n</ip>\n----\n\nAn IPv6 address will be represented as follows:\n\n[source,xml]\n----\n<ip>\n  <address>2620:52:0:20f0:4216:7eff:feaa:1b50</address>\n  ...\n</ip>\n----"
                      }
                    }
                  }
                }
              }, 
              "type": "array"
            }, 
            "configuration": {
              "type": "object", 
              "properties": {
                "data": {
                  "type": "string", 
                  "description": "The document describing the virtual machine.\n\nExample of the OVF document:\n\n[source,xml]\n----\n<?xml version='1.0' encoding='UTF-8'?>\n<ovf:Envelope xmlns:ovf=\"http://schemas.dmtf.org/ovf/envelope/1/\"\n  xmlns:rasd=\"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_ResourceAllocationSettingData\"\n  xmlns:vssd=\"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_VirtualSystemSettingData\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  ovf:version=\"3.5.0.0\">\n  <References/>\n  <Section xsi:type=\"ovf:NetworkSection_Type\">\n    <Info>List of networks</Info>\n    <Network ovf:name=\"Network 1\"/>\n  </Section>\n  <Section xsi:type=\"ovf:DiskSection_Type\">\n    <Info>List of Virtual Disks</Info>\n  </Section>\n  <Content ovf:id=\"out\" xsi:type=\"ovf:VirtualSystem_Type\">\n    <CreationDate>2014/12/03 04:25:45</CreationDate>\n    <ExportDate>2015/02/09 14:12:24</ExportDate>\n    <DeleteProtected>false</DeleteProtected>\n    <SsoMethod>guest_agent</SsoMethod>\n    <IsSmartcardEnabled>false</IsSmartcardEnabled>\n    <TimeZone>Etc/GMT</TimeZone>\n    <default_boot_sequence>0</default_boot_sequence>\n    <Generation>1</Generation>\n    <VmType>1</VmType>\n    <MinAllocatedMem>1024</MinAllocatedMem>\n    <IsStateless>false</IsStateless>\n    <IsRunAndPause>false</IsRunAndPause>\n    <AutoStartup>false</AutoStartup>\n    <Priority>1</Priority>\n    <CreatedByUserId>fdfc627c-d875-11e0-90f0-83df133b58cc</CreatedByUserId>\n    <IsBootMenuEnabled>false</IsBootMenuEnabled>\n    <IsSpiceFileTransferEnabled>true</IsSpiceFileTransferEnabled>\n    <IsSpiceCopyPasteEnabled>true</IsSpiceCopyPasteEnabled>\n    <Name>VM_export</Name>\n    <TemplateId>00000000-0000-0000-0000-000000000000</TemplateId>\n    <TemplateName>Blank</TemplateName>\n    <IsInitilized>false</IsInitilized>\n    <Origin>3</Origin>\n    <DefaultDisplayType>1</DefaultDisplayType>\n    <TrustedService>false</TrustedService>\n    <OriginalTemplateId>00000000-0000-0000-0000-000000000000</OriginalTemplateId>\n    <OriginalTemplateName>Blank</OriginalTemplateName>\n    <UseLatestVersion>false</UseLatestVersion>\n    <Section ovf:id=\"70b4d9a7-4f73-4def-89ca-24fc5f60e01a\"\n      ovf:required=\"false\"\n      xsi:type=\"ovf:OperatingSystemSection_Type\">\n      <Info>Guest Operating System</Info>\n      <Description>other</Description>\n    </Section>\n    <Section xsi:type=\"ovf:VirtualHardwareSection_Type\">\n      <Info>1 CPU, 1024 Memory</Info>\n      <System>\n        <vssd:VirtualSystemType>ENGINE 3.5.0.0</vssd:VirtualSystemType>\n      </System>\n      <Item>\n        <rasd:Caption>1 virtual cpu</rasd:Caption>\n        <rasd:Description>Number of virtual CPU</rasd:Description>\n        <rasd:InstanceId>1</rasd:InstanceId>\n        <rasd:ResourceType>3</rasd:ResourceType>\n        <rasd:num_of_sockets>1</rasd:num_of_sockets>\n        <rasd:cpu_per_socket>1</rasd:cpu_per_socket>\n      </Item>\n      <Item>\n        <rasd:Caption>1024 MB of memory</rasd:Caption>\n        <rasd:Description>Memory Size</rasd:Description>\n        <rasd:InstanceId>2</rasd:InstanceId>\n        <rasd:ResourceType>4</rasd:ResourceType>\n        <rasd:AllocationUnits>MegaBytes</rasd:AllocationUnits>\n        <rasd:VirtualQuantity>1024</rasd:VirtualQuantity>\n      </Item>\n      <Item>\n        <rasd:Caption>USB Controller</rasd:Caption>\n        <rasd:InstanceId>3</rasd:InstanceId>\n        <rasd:ResourceType>23</rasd:ResourceType>\n        <rasd:UsbPolicy>DISABLED</rasd:UsbPolicy>\n      </Item>\n    </Section>\n  </Content>\n</ovf:Envelope>\n----"
                }, 
                "type": {
                  "enum": [
                    "ovf"
                  ], 
                  "type": "string"
                }
              }
            }, 
            "user_name": {
              "type": "string"
            }, 
            "active_directory_ou": {
              "type": "string"
            }, 
            "host_name": {
              "type": "string"
            }
          }
        }, 
        "vm": {
          "type": "object", 
          "description": "Represents a virtual machine.", 
          "properties": {
            "comment": {
              "type": "string", 
              "description": "Free text containing comments about this object."
            }, 
            "origin": {
              "type": "string", 
              "description": "The origin of this virtual machine.\n\nPossible values:\n\n- `ovirt`\n- `rhev`\n- `vmware`\n- `xen`\n- `external`\n- `hosted_engine`\n- `managed_hosted_engine`\n- `kvm`\n- `physical_machine`\n- `hyperv`"
            }, 
            "domain": {
              "type": "object", 
              "description": "This type represents a directory service domain.", 
              "properties": {
                "comment": {
                  "type": "string", 
                  "description": "Free text containing comments about this object."
                }, 
                "user": {
                  "type": "object", 
                  "description": "Represents a user in the system.", 
                  "properties": {
                    "comment": {
                      "type": "string", 
                      "description": "Free text containing comments about this object."
                    }, 
                    "last_name": {
                      "type": "string"
                    }, 
                    "description": {
                      "type": "string", 
                      "description": "A human-readable description in plain text."
                    }, 
                    "name": {
                      "type": "string", 
                      "description": "A human-readable name in plain text."
                    }, 
                    "domain_entry_id": {
                      "type": "string"
                    }, 
                    "namespace": {
                      "type": "string", 
                      "description": "Namespace where the user resides. When using the authorization provider that stores users in the LDAP server,\nthis attribute equals the naming context of the LDAP server.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-ldap for more information.\nWhen using the built-in authorization provider that stores users in the database this attribute is ignored.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-jdbc for more information."
                    }, 
                    "id": {
                      "type": "string", 
                      "description": "A unique identifier."
                    }, 
                    "department": {
                      "type": "string"
                    }, 
                    "logged_in": {
                      "type": "boolean"
                    }, 
                    "password": {
                      "type": "string"
                    }, 
                    "user_name": {
                      "type": "string", 
                      "description": "The user's username. The format depends on authorization provider type. In most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In Active Directory it is the User Principal Name (UPN). `UPN` or\n`uid` must be followed by the authorization provider name. For example, in the case of LDAP's `uid` attribute it is:\n`myuser@myextension-authz`. In the case of Active Directory using `UPN` it is:\n`myuser@mysubdomain.mydomain.com@myextension-authz`. This attribute is a required parameter when adding a new user."
                    }, 
                    "email": {
                      "type": "string"
                    }, 
                    "principal": {
                      "type": "string", 
                      "description": "Similar to `user_name`. The format depends on the LDAP provider. With most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In the case of Active Directory it is the User Principal Name (UPN)."
                    }
                  }
                }, 
                "description": {
                  "type": "string", 
                  "description": "A human-readable description in plain text."
                }, 
                "name": {
                  "type": "string", 
                  "description": "A human-readable name in plain text."
                }, 
                "id": {
                  "type": "string", 
                  "description": "A unique identifier."
                }
              }
            }, 
            "virtio_scsi": {
              "type": "object", 
              "description": "Type representing the support of virtio-SCSI.\nIf it supported we use virtio driver for SCSI guest device.", 
              "properties": {
                "enabled": {
                  "type": "boolean", 
                  "description": "Enable Virtio SCSI support."
                }
              }
            }, 
            "placement_policy": {
              "type": "object", 
              "properties": {
                "affinity": {
                  "enum": [
                    "migratable", 
                    "pinned", 
                    "user_migratable"
                  ], 
                  "type": "string"
                }
              }
            }, 
            "guest_operating_system": {
              "type": "object", 
              "description": "Represents an operating system installed on the virtual machine.\n\nTo get that information send a request like this:\n\n....\nGET /ovirt-engine/api/vms/123\n....\n\nThe result will be like this:\n\n[source,xml]\n----\n<vm href=\"/ovirt-engine/api/vms/123\" id=\"123\">\n...\n  <guest_operating_system>\n    <architecture>x86_64</architecture>\n    <codename>Maipo</codename>\n    <distribution>Red Hat Enterprise Linux Server</distribution>\n    <family>Linux</family>\n    <kernel>\n      <version>\n        <build>0</build>\n        <full_version>3.10.0-514.10.2.el7.x86_64</full_version>\n        <major>3</major>\n        <minor>10</minor>\n        <revision>514</revision>\n      </version>\n    </kernel>\n    <version>\n      <full_version>7.3</full_version>\n      <major>7</major>\n      <minor>3</minor>\n    </version>\n  </guest_operating_system>\n</vm>\n----", 
              "properties": {
                "kernel": {
                  "type": "object", 
                  "properties": {
                    "version": {
                      "type": "object", 
                      "properties": {
                        "comment": {
                          "type": "string", 
                          "description": "Free text containing comments about this object."
                        }, 
                        "major": {
                          "type": "integer", 
                          "format": "int32"
                        }, 
                        "description": {
                          "type": "string", 
                          "description": "A human-readable description in plain text."
                        }, 
                        "full_version": {
                          "type": "string"
                        }, 
                        "name": {
                          "type": "string", 
                          "description": "A human-readable name in plain text."
                        }, 
                        "build": {
                          "type": "integer", 
                          "format": "int32"
                        }, 
                        "id": {
                          "type": "string", 
                          "description": "A unique identifier."
                        }, 
                        "minor": {
                          "type": "integer", 
                          "format": "int32"
                        }, 
                        "revision": {
                          "type": "integer", 
                          "format": "int32"
                        }
                      }
                    }
                  }
                }, 
                "family": {
                  "type": "string", 
                  "description": "Family of operating system, such as `Linux`."
                }, 
                "version": {
                  "type": "object", 
                  "properties": {
                    "comment": {
                      "type": "string", 
                      "description": "Free text containing comments about this object."
                    }, 
                    "major": {
                      "type": "integer", 
                      "format": "int32"
                    }, 
                    "description": {
                      "type": "string", 
                      "description": "A human-readable description in plain text."
                    }, 
                    "full_version": {
                      "type": "string"
                    }, 
                    "name": {
                      "type": "string", 
                      "description": "A human-readable name in plain text."
                    }, 
                    "build": {
                      "type": "integer", 
                      "format": "int32"
                    }, 
                    "id": {
                      "type": "string", 
                      "description": "A unique identifier."
                    }, 
                    "minor": {
                      "type": "integer", 
                      "format": "int32"
                    }, 
                    "revision": {
                      "type": "integer", 
                      "format": "int32"
                    }
                  }
                }, 
                "architecture": {
                  "type": "string", 
                  "description": "The architecture of the operating system, such as x86_64."
                }, 
                "distribution": {
                  "type": "string", 
                  "description": "Full name of operating system distribution."
                }, 
                "codename": {
                  "type": "string", 
                  "description": "Code name of the operating system, such as `Maipo`."
                }
              }
            }, 
            "creation_time": {
              "type": "string", 
              "description": "The virtual machine creation date.", 
              "format": "epoch"
            }, 
            "custom_compatibility_version": {
              "type": "object", 
              "properties": {
                "comment": {
                  "type": "string", 
                  "description": "Free text containing comments about this object."
                }, 
                "major": {
                  "type": "integer", 
                  "format": "int32"
                }, 
                "description": {
                  "type": "string", 
                  "description": "A human-readable description in plain text."
                }, 
                "full_version": {
                  "type": "string"
                }, 
                "name": {
                  "type": "string", 
                  "description": "A human-readable name in plain text."
                }, 
                "build": {
                  "type": "integer", 
                  "format": "int32"
                }, 
                "id": {
                  "type": "string", 
                  "description": "A unique identifier."
                }, 
                "minor": {
                  "type": "integer", 
                  "format": "int32"
                }, 
                "revision": {
                  "type": "integer", 
                  "format": "int32"
                }
              }
            }, 
            "fqdn": {
              "type": "string", 
              "description": "Fully qualified domain name of the virtual machine."
            }, 
            "large_icon": {
              "type": "object", 
              "description": "Icon of virtual machine or template.", 
              "properties": {
                "comment": {
                  "type": "string", 
                  "description": "Free text containing comments about this object."
                }, 
                "description": {
                  "type": "string", 
                  "description": "A human-readable description in plain text."
                }, 
                "media_type": {
                  "type": "string", 
                  "description": "Format of icon file.\n\nOne of:\n\n* `image/jpeg`\n* `image/png`\n* `image/gif`"
                }, 
                "data": {
                  "type": "string", 
                  "description": "Base64 encode content of the icon file."
                }, 
                "id": {
                  "type": "string", 
                  "description": "A unique identifier."
                }, 
                "name": {
                  "type": "string", 
                  "description": "A human-readable name in plain text."
                }
              }
            }, 
            "migration": {
              "type": "object", 
              "description": "The type for migration options.", 
              "properties": {
                "auto_converge": {
                  "enum": [
                    "false", 
                    "inherit", 
                    "true"
                  ], 
                  "type": "string"
                }, 
                "bandwidth": {
                  "type": "object", 
                  "description": "Defines the bandwidth used by migration.", 
                  "properties": {
                    "custom_value": {
                      "type": "integer", 
                      "description": "Custom bandwidth in Mbps. Will be applied only if the `assignmentMethod` attribute is `custom`.", 
                      "format": "int32"
                    }, 
                    "assignment_method": {
                      "enum": [
                        "auto", 
                        "custom", 
                        "hypervisor_default"
                      ], 
                      "type": "string", 
                      "description": "The method used to assign the bandwidth."
                    }
                  }
                }, 
                "compressed": {
                  "enum": [
                    "false", 
                    "inherit", 
                    "true"
                  ], 
                  "type": "string"
                }
              }
            }, 
            "io": {
              "type": "object", 
              "properties": {
                "threads": {
                  "type": "integer", 
                  "format": "int32"
                }
              }
            }, 
            "migration_downtime": {
              "type": "integer", 
              "description": "Maximum time the virtual machine can be non responsive during its live migration to another host in ms.\n\nSet either explicitly for the virtual machine or by `engine-config -s DefaultMaximumMigrationDowntime=[value]`", 
              "format": "int32"
            }, 
            "id": {
              "type": "string", 
              "description": "A unique identifier."
            }, 
            "high_availability": {
              "type": "object", 
              "description": "Type representing high availability of a virtual machine.", 
              "properties": {
                "priority": {
                  "type": "integer", 
                  "description": "Indicates the priority of the virtual machine inside the run and migration queues.\n\nVirtual machines with higher priorities will be started and migrated before virtual machines with lower\npriorities.\n\nThe value is an integer between 0 and 100. The higher the value, the higher the priority.\n\nThe graphical user interface (GUI) does not allow specifying all the possible values, instead\nit only allows you to select _Low_, _Medium_ or _High_. When the value is set using the API, the GUI\nwill set the label as follows:\n\n|===\n|API Value |GUI Label\n\n|0 - 25 |Low\n|26 - 74 |Medium\n|75 - 100 |High\n\n|===\n\nWhen the label is selected using the GUI, the value in the API will be set as follows:\n\n|===\n|GUI Label |API Value\n\n|Low |1\n|Medium |50\n|High |100\n\n|===", 
                  "format": "int32"
                }, 
                "enabled": {
                  "type": "boolean", 
                  "description": "Define if the virtual machine should be consider highly available."
                }
              }
            }, 
            "console": {
              "type": "object", 
              "description": "Representation for serial console device.", 
              "properties": {
                "enabled": {
                  "type": "boolean", 
                  "description": "Enable/disable the serial console device."
                }
              }
            }, 
            "usb": {
              "type": "object", 
              "description": "Configuration of the USB device of a virtual machine.", 
              "properties": {
                "enabled": {
                  "type": "boolean", 
                  "description": "Determines whether the USB device should be included or not."
                }, 
                "type": {
                  "enum": [
                    "legacy", 
                    "native"
                  ], 
                  "type": "string", 
                  "description": "USB type, currently only `native` is supported."
                }
              }
            }, 
            "custom_properties": {
              "items": {
                "type": "object", 
                "description": "Custom property representation.", 
                "properties": {
                  "regexp": {
                    "type": "string", 
                    "description": "A regular expression defining the available values a custom property can get."
                  }, 
                  "name": {
                    "type": "string", 
                    "description": "Property name."
                  }, 
                  "value": {
                    "type": "string", 
                    "description": "Property value."
                  }
                }
              }, 
              "type": "array", 
              "description": "Properties sent to VDSM to configure various hooks."
            }, 
            "guest_time_zone": {
              "type": "object", 
              "description": "Time zone representation.", 
              "properties": {
                "utc_offset": {
                  "type": "string", 
                  "description": "Offset from https://en.wikipedia.org/wiki/Coordinated_Universal_Time[UTC]."
                }, 
                "name": {
                  "type": "string", 
                  "description": "Name of the time zone."
                }
              }
            }, 
            "custom_emulated_machine": {
              "type": "string"
            }, 
            "bios": {
              "type": "object", 
              "properties": {
                "boot_menu": {
                  "type": "object", 
                  "description": "Represents boot menu configuration\nfor virtual machines and templates.", 
                  "properties": {
                    "enabled": {
                      "type": "boolean", 
                      "description": "Whether the boot menu is enabled\nfor this virtual machine (or template), or not."
                    }
                  }
                }
              }
            }, 
            "payloads": {
              "items": {
                "type": "object", 
                "properties": {
                  "files": {
                    "items": {
                      "type": "object", 
                      "properties": {
                        "comment": {
                          "type": "string", 
                          "description": "Free text containing comments about this object."
                        }, 
                        "description": {
                          "type": "string", 
                          "description": "A human-readable description in plain text."
                        }, 
                        "content": {
                          "type": "string"
                        }, 
                        "type": {
                          "type": "string"
                        }, 
                        "id": {
                          "type": "string", 
                          "description": "A unique identifier."
                        }, 
                        "name": {
                          "type": "string", 
                          "description": "A human-readable name in plain text."
                        }
                      }
                    }, 
                    "type": "array"
                  }, 
                  "type": {
                    "enum": [
                      "cdrom", 
                      "floppy"
                    ], 
                    "type": "string"
                  }, 
                  "volume_id": {
                    "type": "string"
                  }
                }
              }, 
              "type": "array", 
              "description": "Optional payloads of the virtual machine, used for ISOs to configure it."
            }, 
            "delete_protected": {
              "type": "boolean", 
              "description": "If `true`, the virtual machine cannot be deleted."
            }, 
            "memory": {
              "type": "integer", 
              "description": "The virtual machine's memory, in bytes.\n\nFor example, to update a virtual machine to contain 1 Gibibyte (GiB) of memory, send the following request:\n\n[source]\n----\nPUT /ovirt-engine/api/vms/123\n----\n\nWith the following request body:\n\n[source,xml]\n----\n<vm>\n  <memory>1073741824</memory>\n</vm>\n----\n\nNOTE: Memory in the example is converted to bytes using the following formula: +\n1 GiB = 2^30^ bytes = 1073741824 bytes.\n\nNOTE: Memory hot plug is supported from {product-name} 3.6 onwards. You can use the example above to increase\nmemory while the virtual machine is running.", 
              "format": "int32"
            }, 
            "serial_number": {
              "type": "object", 
              "properties": {
                "policy": {
                  "enum": [
                    "custom", 
                    "host", 
                    "vm"
                  ], 
                  "type": "string"
                }, 
                "value": {
                  "type": "string"
                }
              }
            }, 
            "tunnel_migration": {
              "type": "boolean", 
              "description": "If `true`, the network data transfer will be encrypted during virtual machine live migration."
            }, 
            "type": {
              "enum": [
                "desktop", 
                "server"
              ], 
              "type": "string", 
              "description": "Determines whether the virtual machine is optimized for desktop or server."
            }, 
            "initialization": {
              "type": "object", 
              "properties": {
                "org_name": {
                  "type": "string"
                }, 
                "custom_script": {
                  "type": "string"
                }, 
                "domain": {
                  "type": "string"
                }, 
                "dns_servers": {
                  "type": "string"
                }, 
                "authorized_ssh_keys": {
                  "type": "string"
                }, 
                "system_locale": {
                  "type": "string"
                }, 
                "cloud_init": {
                  "type": "object", 
                  "properties": {
                    "files": {
                      "items": {
                        "type": "object", 
                        "properties": {
                          "comment": {
                            "type": "string", 
                            "description": "Free text containing comments about this object."
                          }, 
                          "description": {
                            "type": "string", 
                            "description": "A human-readable description in plain text."
                          }, 
                          "content": {
                            "type": "string"
                          }, 
                          "type": {
                            "type": "string"
                          }, 
                          "id": {
                            "type": "string", 
                            "description": "A unique identifier."
                          }, 
                          "name": {
                            "type": "string", 
                            "description": "A human-readable name in plain text."
                          }
                        }
                      }, 
                      "type": "array"
                    }, 
                    "authorized_keys": {
                      "items": {
                        "type": "object", 
                        "properties": {
                          "comment": {
                            "type": "string", 
                            "description": "Free text containing comments about this object."
                          }, 
                          "name": {
                            "type": "string", 
                            "description": "A human-readable name in plain text."
                          }, 
                          "description": {
                            "type": "string", 
                            "description": "A human-readable description in plain text."
                          }, 
                          "key": {
                            "type": "string"
                          }, 
                          "id": {
                            "type": "string", 
                            "description": "A unique identifier."
                          }
                        }
                      }, 
                      "type": "array"
                    }, 
                    "network_configuration": {
                      "type": "object", 
                      "properties": {
                        "nics": {
                          "items": {
                            "type": "object", 
                            "description": "Represents a virtual machine NIC.\n\nFor example, the XML representation of a NIC will look like this:\n\n[source,xml]\n----\n<nic href=\"/ovirt-engine/api/vms/123/nics/456\" id=\"456\">\n  <name>nic1</name>\n  <vm href=\"/ovirt-engine/api/vms/123\" id=\"123\"/>\n  <interface>virtio</interface>\n  <linked>true</linked>\n  <mac>\n    <address>02:00:00:00:00:00</address>\n  </mac>\n  <plugged>true</plugged>\n  <vnic_profile href=\"/ovirt-engine/api/vnicprofiles/789\" id=\"789\"/>\n</nic>\n----", 
                            "properties": {
                              "comment": {
                                "type": "string", 
                                "description": "Free text containing comments about this object."
                              }, 
                              "description": {
                                "type": "string", 
                                "description": "A human-readable description in plain text."
                              }, 
                              "linked": {
                                "type": "boolean", 
                                "description": "Defines if the NIC is linked to the virtual machine."
                              }, 
                              "boot_protocol": {
                                "enum": [
                                  "autoconf", 
                                  "dhcp", 
                                  "none", 
                                  "static"
                                ], 
                                "type": "string", 
                                "description": "Defines how an IP address is assigned to the NIC."
                              }, 
                              "plugged": {
                                "type": "boolean", 
                                "description": "Defines if the NIC is plugged in to the virtual machine."
                              }, 
                              "mac": {
                                "type": "object", 
                                "description": "Represents a MAC address of a virtual network interface.", 
                                "properties": {
                                  "address": {
                                    "type": "string", 
                                    "description": "MAC address."
                                  }
                                }
                              }, 
                              "on_boot": {
                                "type": "boolean", 
                                "description": "Defines if the network interface should be activated upon operation system startup."
                              }, 
                              "interface": {
                                "enum": [
                                  "e1000", 
                                  "pci_passthrough", 
                                  "rtl8139", 
                                  "rtl8139_virtio", 
                                  "spapr_vlan", 
                                  "virtio"
                                ], 
                                "type": "string", 
                                "description": "The type of driver used for the NIC."
                              }, 
                              "id": {
                                "type": "string", 
                                "description": "A unique identifier."
                              }, 
                              "name": {
                                "type": "string", 
                                "description": "A human-readable name in plain text."
                              }
                            }
                          }, 
                          "type": "array"
                        }, 
                        "dns": {
                          "type": "object", 
                          "description": "Represents the DNS resolver configuration.", 
                          "properties": {
                            "search_domains": {
                              "items": {
                                "type": "object", 
                                "description": "Type representing a host.", 
                                "properties": {
                                  "comment": {
                                    "type": "string", 
                                    "description": "Free text containing comments about this object."
                                  }, 
                                  "update_available": {
                                    "type": "boolean", 
                                    "description": "Specifies whether there is an oVirt-related update on this host."
                                  }, 
                                  "protocol": {
                                    "enum": [
                                      "stomp", 
                                      "xml"
                                    ], 
                                    "type": "string", 
                                    "description": "The protocol that the engine uses to communicate with\nthe host.\n\nWARNING: Since version 4.1 of the engine the protocol\nis always set to `stomp` since `xml` was removed."
                                  }, 
                                  "version": {
                                    "type": "object", 
                                    "properties": {
                                      "comment": {
                                        "type": "string", 
                                        "description": "Free text containing comments about this object."
                                      }, 
                                      "major": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "description": {
                                        "type": "string", 
                                        "description": "A human-readable description in plain text."
                                      }, 
                                      "full_version": {
                                        "type": "string"
                                      }, 
                                      "name": {
                                        "type": "string", 
                                        "description": "A human-readable name in plain text."
                                      }, 
                                      "build": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "id": {
                                        "type": "string", 
                                        "description": "A unique identifier."
                                      }, 
                                      "minor": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "revision": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }
                                    }
                                  }, 
                                  "spm": {
                                    "type": "object", 
                                    "properties": {
                                      "priority": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "status": {
                                        "enum": [
                                          "contending", 
                                          "none", 
                                          "spm"
                                        ], 
                                        "type": "string"
                                      }
                                    }
                                  }, 
                                  "hosted_engine": {
                                    "type": "object", 
                                    "properties": {
                                      "active": {
                                        "type": "boolean"
                                      }, 
                                      "local_maintenance": {
                                        "type": "boolean"
                                      }, 
                                      "configured": {
                                        "type": "boolean"
                                      }, 
                                      "score": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "global_maintenance": {
                                        "type": "boolean"
                                      }
                                    }
                                  }, 
                                  "id": {
                                    "type": "string", 
                                    "description": "A unique identifier."
                                  }, 
                                  "external_status": {
                                    "enum": [
                                      "error", 
                                      "failure", 
                                      "info", 
                                      "ok", 
                                      "warning"
                                    ], 
                                    "type": "string", 
                                    "description": "The host external status.\nThis can be used by third-party software to change the host external status\nin case of an issue.\nThis has no effect on the host lifecycle, unless a third-party software checks for this\nstatus and acts accordingly."
                                  }, 
                                  "certificate": {
                                    "type": "object", 
                                    "properties": {
                                      "comment": {
                                        "type": "string", 
                                        "description": "Free text containing comments about this object."
                                      }, 
                                      "description": {
                                        "type": "string", 
                                        "description": "A human-readable description in plain text."
                                      }, 
                                      "name": {
                                        "type": "string", 
                                        "description": "A human-readable name in plain text."
                                      }, 
                                      "content": {
                                        "type": "string"
                                      }, 
                                      "organization": {
                                        "type": "string"
                                      }, 
                                      "id": {
                                        "type": "string", 
                                        "description": "A unique identifier."
                                      }, 
                                      "subject": {
                                        "type": "string"
                                      }
                                    }
                                  }, 
                                  "display": {
                                    "type": "object", 
                                    "description": "Represents a graphic console configuration.", 
                                    "properties": {
                                      "allow_override": {
                                        "type": "boolean", 
                                        "description": "Indicates if to override the display address per host.\nRelevant only for the `Host.display` attribute.\nIf set, the graphical console address of a virtual machine will be overridden by the host specified display address.\nif not set, the graphical console address of a virtual machine will not be overridden."
                                      }, 
                                      "disconnect_action": {
                                        "type": "string", 
                                        "description": "Returns the action that will take place when the graphic console is disconnected.\nThe options are:\n\nnone:: No action is taken.\nlock_screen:: Locks the currently active user session.\nlogout:: Logs out the currently active user session.\nreboot:: Initiates a graceful virtual machine reboot.\nshutdown:: Initiates a graceful virtual machine shutdown.\n\nThis option is only available for the SPICE console type."
                                      }, 
                                      "certificate": {
                                        "type": "object", 
                                        "properties": {
                                          "comment": {
                                            "type": "string", 
                                            "description": "Free text containing comments about this object."
                                          }, 
                                          "description": {
                                            "type": "string", 
                                            "description": "A human-readable description in plain text."
                                          }, 
                                          "name": {
                                            "type": "string", 
                                            "description": "A human-readable name in plain text."
                                          }, 
                                          "content": {
                                            "type": "string"
                                          }, 
                                          "organization": {
                                            "type": "string"
                                          }, 
                                          "id": {
                                            "type": "string", 
                                            "description": "A unique identifier."
                                          }, 
                                          "subject": {
                                            "type": "string"
                                          }
                                        }
                                      }, 
                                      "monitors": {
                                        "type": "integer", 
                                        "description": "The number of monitors opened for this graphic console.\nThis option is only available for the SPICE console type.\nPossible values are 1, 2 or 4.", 
                                        "format": "int32"
                                      }, 
                                      "single_qxl_pci": {
                                        "type": "boolean", 
                                        "description": "Indicates if to use one PCI slot for each monitor or to use a single PCI channel for all multiple monitors.\nThis option is only available for the SPICE console type and only for connecting a guest Linux based OS."
                                      }, 
                                      "copy_paste_enabled": {
                                        "type": "boolean", 
                                        "description": "Indicates whether a user is able to copy and paste content from an external host into the graphic console.\nThis option is only available for the SPICE console type."
                                      }, 
                                      "secure_port": {
                                        "type": "integer", 
                                        "description": "The secured port address on the guest, in case of using TLS, to connect the graphic console client to.\nIf TLS isn't enabled then it won't be reported.", 
                                        "format": "int32"
                                      }, 
                                      "proxy": {
                                        "type": "string", 
                                        "description": "The proxy IP which will be used by the graphic console client to connect to the guest.\nIt is useful when the client is outside the guest's network.\nThis option is only available for the SPICE console type.\nThis proxy can be set in global configuration, cluster level, virtual machine pool level or disabled\nper virtual machine.\nIf the proxy is set in any of this mentioned places and not disabled for the virtual machine, it will be\nreturned by this method.\nIf the proxy is not set, nothing will be reported."
                                      }, 
                                      "smartcard_enabled": {
                                        "type": "boolean", 
                                        "description": "Indicates if to use smart card authentication.\nThis option is only available for the SPICE console type."
                                      }, 
                                      "file_transfer_enabled": {
                                        "type": "boolean", 
                                        "description": "Indicates if a user is able to drag and drop files from an external host into the graphic console.\nThis option is only available for the SPICE console type."
                                      }, 
                                      "keyboard_layout": {
                                        "type": "string", 
                                        "description": "The keyboard layout to use with this graphic console.\nThis option is only available for the VNC console type.\nIf no keyboard is enabled then it won't be reported."
                                      }, 
                                      "type": {
                                        "enum": [
                                          "spice", 
                                          "vnc"
                                        ], 
                                        "type": "string", 
                                        "description": "The graphic console protocol type."
                                      }, 
                                      "port": {
                                        "type": "integer", 
                                        "description": "The port address on the guest to connect the graphic console client to.", 
                                        "format": "int32"
                                      }, 
                                      "address": {
                                        "type": "string", 
                                        "description": "The IP address of the guest to connect the graphic console client to."
                                      }
                                    }
                                  }, 
                                  "iscsi": {
                                    "type": "object", 
                                    "properties": {
                                      "status": {
                                        "type": "string"
                                      }, 
                                      "username": {
                                        "type": "string"
                                      }, 
                                      "initiator": {
                                        "type": "string"
                                      }, 
                                      "vendor_id": {
                                        "type": "string"
                                      }, 
                                      "volume_group_id": {
                                        "type": "string"
                                      }, 
                                      "paths": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "storage_domain_id": {
                                        "type": "string"
                                      }, 
                                      "disk_id": {
                                        "type": "string"
                                      }, 
                                      "password": {
                                        "type": "string"
                                      }, 
                                      "portal": {
                                        "type": "string"
                                      }, 
                                      "address": {
                                        "type": "string"
                                      }, 
                                      "lun_mapping": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "serial": {
                                        "type": "string"
                                      }, 
                                      "size": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "target": {
                                        "type": "string"
                                      }, 
                                      "port": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "product_id": {
                                        "type": "string"
                                      }
                                    }
                                  }, 
                                  "port": {
                                    "type": "integer", 
                                    "description": "The host port.", 
                                    "format": "int32"
                                  }, 
                                  "hardware_information": {
                                    "type": "object", 
                                    "description": "Represents hardware information of host.\n\nTo get that information send a request like this:\n\n....\nGET /ovirt-engine/api/hosts/123\n....\n\nThe result will be like this:\n\n[source,xml]\n----\n<host href=\"/ovirt-engine/api/hosts/123\" id=\"123\">\n  ...\n  <hardware_information>\n    <family>Red Hat Enterprise Linux</family>\n    <manufacturer>Red Hat</manufacturer>\n    <product_name>RHEV Hypervisor</product_name>\n    <serial_number>01234567-89AB-CDEF-0123-456789ABCDEF</serial_number>\n    <supported_rng_sources>\n      <supported_rng_source>random</supported_rng_source>\n    </supported_rng_sources>\n    <uuid>12345678-9ABC-DEF0-1234-56789ABCDEF0</uuid>\n    <version>1.2-34.5.el7ev</version>\n  </hardware_information>\n  ...\n</application>\n----", 
                                    "properties": {
                                      "uuid": {
                                        "type": "string", 
                                        "description": "Unique ID for each host."
                                      }, 
                                      "family": {
                                        "type": "string", 
                                        "description": "Type of host's CPU."
                                      }, 
                                      "supported_rng_sources": {
                                        "items": {
                                          "enum": [
                                            "hwrng", 
                                            "random", 
                                            "urandom"
                                          ], 
                                          "type": "string"
                                        }, 
                                        "type": "array", 
                                        "description": "Supported sources of random number generator."
                                      }, 
                                      "version": {
                                        "type": "string", 
                                        "description": "Unique name for each of the manufacturer."
                                      }, 
                                      "serial_number": {
                                        "type": "string", 
                                        "description": "Unique ID for host's chassis."
                                      }, 
                                      "product_name": {
                                        "type": "string", 
                                        "description": "Host's product name (for example `RHEV Hypervisor`)."
                                      }, 
                                      "manufacturer": {
                                        "type": "string", 
                                        "description": "Manufacturer of the host's machine and hardware vendor."
                                      }
                                    }
                                  }, 
                                  "memory": {
                                    "type": "integer", 
                                    "description": "The amount of physical memory on this host in bytes.", 
                                    "format": "int32"
                                  }, 
                                  "ksm": {
                                    "type": "object", 
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean"
                                      }, 
                                      "merge_across_nodes": {
                                        "type": "boolean"
                                      }
                                    }
                                  }, 
                                  "se_linux": {
                                    "type": "object", 
                                    "description": "Represents SELinux in the system.", 
                                    "properties": {
                                      "mode": {
                                        "enum": [
                                          "disabled", 
                                          "enforcing", 
                                          "permissive"
                                        ], 
                                        "type": "string", 
                                        "description": "SELinux current mode."
                                      }
                                    }
                                  }, 
                                  "type": {
                                    "enum": [
                                      "ovirt_node", 
                                      "rhel", 
                                      "rhev_h"
                                    ], 
                                    "type": "string", 
                                    "description": "Indicates if the host contains a full installation of the operating system or a scaled-down version intended\nonly to host virtual machines."
                                  }, 
                                  "status": {
                                    "enum": [
                                      "connecting", 
                                      "down", 
                                      "error", 
                                      "initializing", 
                                      "install_failed", 
                                      "installing", 
                                      "installing_os", 
                                      "kdumping", 
                                      "maintenance", 
                                      "non_operational", 
                                      "non_responsive", 
                                      "pending_approval", 
                                      "preparing_for_maintenance", 
                                      "reboot", 
                                      "unassigned", 
                                      "up"
                                    ], 
                                    "type": "string", 
                                    "description": "The host status."
                                  }, 
                                  "description": {
                                    "type": "string", 
                                    "description": "A human-readable description in plain text."
                                  }, 
                                  "status_detail": {
                                    "type": "string", 
                                    "description": "The host status details. Relevant for Gluster hosts."
                                  }, 
                                  "transparent_hugepages": {
                                    "type": "object", 
                                    "description": "Type representing a transparent huge pages (THP) support.", 
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean", 
                                        "description": "Enable THP support."
                                      }
                                    }
                                  }, 
                                  "address": {
                                    "type": "string", 
                                    "description": "The host address (FQDN/IP)."
                                  }, 
                                  "override_iptables": {
                                    "type": "boolean", 
                                    "description": "Specifies whether we should override firewall definitions.\nThis applies only when the host is installed or re-installed."
                                  }, 
                                  "device_passthrough": {
                                    "type": "object", 
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean"
                                      }
                                    }
                                  }, 
                                  "ssh": {
                                    "type": "object", 
                                    "properties": {
                                      "comment": {
                                        "type": "string", 
                                        "description": "Free text containing comments about this object."
                                      }, 
                                      "description": {
                                        "type": "string", 
                                        "description": "A human-readable description in plain text."
                                      }, 
                                      "authentication_method": {
                                        "enum": [
                                          "password", 
                                          "publickey"
                                        ], 
                                        "type": "string"
                                      }, 
                                      "id": {
                                        "type": "string", 
                                        "description": "A unique identifier."
                                      }, 
                                      "user": {
                                        "type": "object", 
                                        "description": "Represents a user in the system.", 
                                        "properties": {
                                          "comment": {
                                            "type": "string", 
                                            "description": "Free text containing comments about this object."
                                          }, 
                                          "last_name": {
                                            "type": "string"
                                          }, 
                                          "description": {
                                            "type": "string", 
                                            "description": "A human-readable description in plain text."
                                          }, 
                                          "name": {
                                            "type": "string", 
                                            "description": "A human-readable name in plain text."
                                          }, 
                                          "domain_entry_id": {
                                            "type": "string"
                                          }, 
                                          "namespace": {
                                            "type": "string", 
                                            "description": "Namespace where the user resides. When using the authorization provider that stores users in the LDAP server,\nthis attribute equals the naming context of the LDAP server.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-ldap for more information.\nWhen using the built-in authorization provider that stores users in the database this attribute is ignored.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-jdbc for more information."
                                          }, 
                                          "id": {
                                            "type": "string", 
                                            "description": "A unique identifier."
                                          }, 
                                          "department": {
                                            "type": "string"
                                          }, 
                                          "logged_in": {
                                            "type": "boolean"
                                          }, 
                                          "password": {
                                            "type": "string"
                                          }, 
                                          "user_name": {
                                            "type": "string", 
                                            "description": "The user's username. The format depends on authorization provider type. In most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In Active Directory it is the User Principal Name (UPN). `UPN` or\n`uid` must be followed by the authorization provider name. For example, in the case of LDAP's `uid` attribute it is:\n`myuser@myextension-authz`. In the case of Active Directory using `UPN` it is:\n`myuser@mysubdomain.mydomain.com@myextension-authz`. This attribute is a required parameter when adding a new user."
                                          }, 
                                          "email": {
                                            "type": "string"
                                          }, 
                                          "principal": {
                                            "type": "string", 
                                            "description": "Similar to `user_name`. The format depends on the LDAP provider. With most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In the case of Active Directory it is the User Principal Name (UPN)."
                                          }
                                        }
                                      }, 
                                      "fingerprint": {
                                        "type": "string"
                                      }, 
                                      "port": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "name": {
                                        "type": "string", 
                                        "description": "A human-readable name in plain text."
                                      }
                                    }
                                  }, 
                                  "numa_supported": {
                                    "type": "boolean", 
                                    "description": "Specifies whether _non uniform memory access_ (NUMA) is supported on this host."
                                  }, 
                                  "libvirt_version": {
                                    "type": "object", 
                                    "properties": {
                                      "comment": {
                                        "type": "string", 
                                        "description": "Free text containing comments about this object."
                                      }, 
                                      "major": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "description": {
                                        "type": "string", 
                                        "description": "A human-readable description in plain text."
                                      }, 
                                      "full_version": {
                                        "type": "string"
                                      }, 
                                      "name": {
                                        "type": "string", 
                                        "description": "A human-readable name in plain text."
                                      }, 
                                      "build": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "id": {
                                        "type": "string", 
                                        "description": "A unique identifier."
                                      }, 
                                      "minor": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "revision": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }
                                    }
                                  }, 
                                  "power_management": {
                                    "type": "object", 
                                    "properties": {
                                      "status": {
                                        "enum": [
                                          "off", 
                                          "on", 
                                          "unknown"
                                        ], 
                                        "type": "string", 
                                        "description": "Determines the power status of the host."
                                      }, 
                                      "username": {
                                        "type": "string", 
                                        "description": "A valid user name for power management."
                                      }, 
                                      "kdump_detection": {
                                        "type": "boolean", 
                                        "description": "Toggles whether to determine if kdump is running on the host before it is shut down.\nWhen set to `true`, the host will not shut down during a kdump process.\nThis is set to `true` when a host has power management enabled, unless disabled by the user."
                                      }, 
                                      "automatic_pm_enabled": {
                                        "type": "boolean", 
                                        "description": "Toggles the automated power control of the host in order to save energy.\nWhen set to true, the host will be automatically powered down if the cluster's load is low,\nand powered on again when required. This is set to true when a host is created, unless disabled by the user."
                                      }, 
                                      "enabled": {
                                        "type": "boolean", 
                                        "description": "Indicates whether power management configuration is enabled or disabled."
                                      }, 
                                      "pm_proxies": {
                                        "items": {
                                          "type": "object", 
                                          "properties": {
                                            "type": {
                                              "enum": [
                                                "cluster", 
                                                "dc", 
                                                "other_dc"
                                              ], 
                                              "type": "string"
                                            }
                                          }
                                        }, 
                                        "type": "array", 
                                        "description": "Determines the power management proxy."
                                      }, 
                                      "agents": {
                                        "items": {
                                          "type": "object", 
                                          "description": "Type representing a fence agent.", 
                                          "properties": {
                                            "comment": {
                                              "type": "string", 
                                              "description": "Free text containing comments about this object."
                                            }, 
                                            "username": {
                                              "type": "string", 
                                              "description": "Fence agent user name."
                                            }, 
                                            "encrypt_options": {
                                              "type": "boolean", 
                                              "description": "Specifies whether the options should be encrypted."
                                            }, 
                                            "description": {
                                              "type": "string", 
                                              "description": "A human-readable description in plain text."
                                            }, 
                                            "options": {
                                              "items": {
                                                "type": "object", 
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  }, 
                                                  "name": {
                                                    "type": "string"
                                                  }, 
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                }
                                              }, 
                                              "type": "array", 
                                              "description": "Fence agent options (comma-delimited list of\nkey-value pairs)."
                                            }, 
                                            "order": {
                                              "type": "integer", 
                                              "description": "The order of this agent if used with other agents.", 
                                              "format": "int32"
                                            }, 
                                            "concurrent": {
                                              "type": "boolean", 
                                              "description": "Specifies whether the agent should be used concurrently\nor sequentially."
                                            }, 
                                            "address": {
                                              "type": "string", 
                                              "description": "Fence agent address."
                                            }, 
                                            "id": {
                                              "type": "string", 
                                              "description": "A unique identifier."
                                            }, 
                                            "password": {
                                              "type": "string", 
                                              "description": "Fence agent password."
                                            }, 
                                            "type": {
                                              "type": "string", 
                                              "description": "Fence agent type."
                                            }, 
                                            "port": {
                                              "type": "integer", 
                                              "description": "Fence agent port.", 
                                              "format": "int32"
                                            }, 
                                            "name": {
                                              "type": "string", 
                                              "description": "A human-readable name in plain text."
                                            }
                                          }
                                        }, 
                                        "type": "array", 
                                        "description": "Specifies fence agent options when multiple fences are used.\n\nUse the order sub-element to prioritize the fence agents. Agents are run sequentially according to their\norder until the fence action succeeds. When two or more fence agents have the same order,\nthey are run concurrently. Other sub-elements include type, ip, user, password, and options."
                                      }, 
                                      "address": {
                                        "type": "string", 
                                        "description": "The host name or IP address of the host."
                                      }, 
                                      "password": {
                                        "type": "string", 
                                        "description": "A valid, robust password for power management."
                                      }, 
                                      "type": {
                                        "type": "string", 
                                        "description": "Fencing device code.\n\nA list of valid fencing device codes are available in the `capabilities` collection."
                                      }, 
                                      "options": {
                                        "items": {
                                          "type": "object", 
                                          "properties": {
                                            "type": {
                                              "type": "string"
                                            }, 
                                            "name": {
                                              "type": "string"
                                            }, 
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }, 
                                        "type": "array", 
                                        "description": "Fencing options for the selected type= specified with the option name=\"\" and value=\"\" strings."
                                      }
                                    }
                                  }, 
                                  "name": {
                                    "type": "string", 
                                    "description": "A human-readable name in plain text."
                                  }, 
                                  "max_scheduling_memory": {
                                    "type": "integer", 
                                    "description": "The max scheduling memory on this host in bytes.", 
                                    "format": "int32"
                                  }, 
                                  "summary": {
                                    "type": "object", 
                                    "description": "Type containing information related to virtual machines on a particular host.", 
                                    "properties": {
                                      "active": {
                                        "type": "integer", 
                                        "description": "The number of virtual machines active on the host.", 
                                        "format": "int32"
                                      }, 
                                      "migrating": {
                                        "type": "integer", 
                                        "description": "The number of virtual machines migrating to or from the host.", 
                                        "format": "int32"
                                      }, 
                                      "total": {
                                        "type": "integer", 
                                        "description": "The number of virtual machines present on the host.", 
                                        "format": "int32"
                                      }
                                    }
                                  }, 
                                  "auto_numa_status": {
                                    "enum": [
                                      "disable", 
                                      "enable", 
                                      "unknown"
                                    ], 
                                    "type": "string", 
                                    "description": "The host auto _non uniform memory access_ (NUMA) status."
                                  }, 
                                  "os": {
                                    "type": "object", 
                                    "description": "Information describing the operating system. This is used for both virtual machines and hosts.", 
                                    "properties": {
                                      "kernel": {
                                        "type": "string", 
                                        "description": "Path to custom kernel on ISO storage domain if Linux operating system is used.\n\nFor example `iso://vmlinuz-3.10.0-514.6.1.el7.x86_64`.\n\nNOTE: Not used for hosts."
                                      }, 
                                      "reported_kernel_cmdline": {
                                        "type": "string", 
                                        "description": "The host kernel command line as reported by a running host.\n\nThis is a read-only attribute. Attempts to change this attribute are silently ignored.\n\nNOTE: This attribute is currently only used for hosts."
                                      }, 
                                      "boot": {
                                        "type": "object", 
                                        "description": "Configuration of the boot sequence of a virtual machine.", 
                                        "properties": {
                                          "devices": {
                                            "items": {
                                              "enum": [
                                                "cdrom", 
                                                "hd", 
                                                "network"
                                              ], 
                                              "type": "string"
                                            }, 
                                            "type": "array", 
                                            "description": "Ordered list of boot devices. The virtual machine will try to boot from the given boot devices, in the given\norder."
                                          }
                                        }
                                      }, 
                                      "cmdline": {
                                        "type": "string", 
                                        "description": "Custom kernel parameters for start the virtual machine with if Linux operating system is used.\n\nNOTE: Not used for hosts."
                                      }, 
                                      "initrd": {
                                        "type": "string", 
                                        "description": "Path to custom initial ramdisk on ISO storage domain if Linux operating system is used.\n\nFor example `iso://initramfs-3.10.0-514.6.1.el7.x86_64.img`.\n\nNOTE: Not used for hosts."
                                      }, 
                                      "version": {
                                        "type": "object", 
                                        "properties": {
                                          "comment": {
                                            "type": "string", 
                                            "description": "Free text containing comments about this object."
                                          }, 
                                          "major": {
                                            "type": "integer", 
                                            "format": "int32"
                                          }, 
                                          "description": {
                                            "type": "string", 
                                            "description": "A human-readable description in plain text."
                                          }, 
                                          "full_version": {
                                            "type": "string"
                                          }, 
                                          "name": {
                                            "type": "string", 
                                            "description": "A human-readable name in plain text."
                                          }, 
                                          "build": {
                                            "type": "integer", 
                                            "format": "int32"
                                          }, 
                                          "id": {
                                            "type": "string", 
                                            "description": "A unique identifier."
                                          }, 
                                          "minor": {
                                            "type": "integer", 
                                            "format": "int32"
                                          }, 
                                          "revision": {
                                            "type": "integer", 
                                            "format": "int32"
                                          }
                                        }
                                      }, 
                                      "custom_kernel_cmdline": {
                                        "type": "string", 
                                        "description": "A custom part of the host kernel command line. This will be merged with the existing kernel command line.\n\nYou must reinstall and then reboot the host to apply the changes implemented by this attribute.\n\nDuring each host deploy procedure, kernel parameters that were added\nin the previous host deploy procedure are removed using\n`grubby --update-kernel DEFAULT --remove-args <previous_custom_params>`, and the current\nkernel command line customization is applied using\n`grubby --update-kernel DEFAULT --args <custom_params>`. The Manager internally keeps track of the\nlast-applied kernel parameters customization.\n\nNOTE: This attribute is currently only used for hosts."
                                      }, 
                                      "type": {
                                        "type": "string", 
                                        "description": "Operating system name in human readable form.\n\nFor example `Fedora` or `RHEL`. In general one of the names returned by the <<services/operating_systems,\noperating system>> service.\n\nNOTE: Read only for hosts."
                                      }
                                    }
                                  }, 
                                  "cpu": {
                                    "type": "object", 
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }, 
                                      "level": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "speed": {
                                        "type": "number", 
                                        "format": "double"
                                      }, 
                                      "cpu_tune": {
                                        "type": "object", 
                                        "properties": {
                                          "vcpu_pins": {
                                            "items": {
                                              "type": "object", 
                                              "properties": {
                                                "cpu_set": {
                                                  "type": "string"
                                                }, 
                                                "vcpu": {
                                                  "type": "integer", 
                                                  "format": "int32"
                                                }
                                              }
                                            }, 
                                            "type": "array"
                                          }
                                        }
                                      }, 
                                      "architecture": {
                                        "enum": [
                                          "ppc64", 
                                          "undefined", 
                                          "x86_64"
                                        ], 
                                        "type": "string"
                                      }, 
                                      "mode": {
                                        "enum": [
                                          "custom", 
                                          "host_model", 
                                          "host_passthrough"
                                        ], 
                                        "type": "string"
                                      }, 
                                      "cores": {
                                        "items": {
                                          "type": "object", 
                                          "properties": {
                                            "index": {
                                              "type": "integer", 
                                              "format": "int32"
                                            }, 
                                            "socket": {
                                              "type": "integer", 
                                              "format": "int32"
                                            }
                                          }
                                        }, 
                                        "type": "array"
                                      }, 
                                      "type": {
                                        "type": "string"
                                      }, 
                                      "topology": {
                                        "type": "object", 
                                        "properties": {
                                          "cores": {
                                            "type": "integer", 
                                            "format": "int32"
                                          }, 
                                          "threads": {
                                            "type": "integer", 
                                            "format": "int32"
                                          }, 
                                          "sockets": {
                                            "type": "integer", 
                                            "format": "int32"
                                          }
                                        }
                                      }
                                    }
                                  }, 
                                  "kdump_status": {
                                    "enum": [
                                      "disabled", 
                                      "enabled", 
                                      "unknown"
                                    ], 
                                    "type": "string", 
                                    "description": "The host KDUMP status.\nKDUMP happens when the host kernel has crashed and it is now going through memory dumping."
                                  }, 
                                  "root_password": {
                                    "type": "string", 
                                    "description": "When creating a new host, a root password is required if the password authentication method is chosen,\nbut this is not subsequently included in the representation."
                                  }
                                }
                              }, 
                              "type": "array", 
                              "description": "Array of hosts serving as search domains."
                            }, 
                            "servers": {
                              "items": {
                                "type": "object", 
                                "description": "Type representing a host.", 
                                "properties": {
                                  "comment": {
                                    "type": "string", 
                                    "description": "Free text containing comments about this object."
                                  }, 
                                  "update_available": {
                                    "type": "boolean", 
                                    "description": "Specifies whether there is an oVirt-related update on this host."
                                  }, 
                                  "protocol": {
                                    "enum": [
                                      "stomp", 
                                      "xml"
                                    ], 
                                    "type": "string", 
                                    "description": "The protocol that the engine uses to communicate with\nthe host.\n\nWARNING: Since version 4.1 of the engine the protocol\nis always set to `stomp` since `xml` was removed."
                                  }, 
                                  "version": {
                                    "type": "object", 
                                    "properties": {
                                      "comment": {
                                        "type": "string", 
                                        "description": "Free text containing comments about this object."
                                      }, 
                                      "major": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "description": {
                                        "type": "string", 
                                        "description": "A human-readable description in plain text."
                                      }, 
                                      "full_version": {
                                        "type": "string"
                                      }, 
                                      "name": {
                                        "type": "string", 
                                        "description": "A human-readable name in plain text."
                                      }, 
                                      "build": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "id": {
                                        "type": "string", 
                                        "description": "A unique identifier."
                                      }, 
                                      "minor": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "revision": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }
                                    }
                                  }, 
                                  "spm": {
                                    "type": "object", 
                                    "properties": {
                                      "priority": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "status": {
                                        "enum": [
                                          "contending", 
                                          "none", 
                                          "spm"
                                        ], 
                                        "type": "string"
                                      }
                                    }
                                  }, 
                                  "hosted_engine": {
                                    "type": "object", 
                                    "properties": {
                                      "active": {
                                        "type": "boolean"
                                      }, 
                                      "local_maintenance": {
                                        "type": "boolean"
                                      }, 
                                      "configured": {
                                        "type": "boolean"
                                      }, 
                                      "score": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "global_maintenance": {
                                        "type": "boolean"
                                      }
                                    }
                                  }, 
                                  "id": {
                                    "type": "string", 
                                    "description": "A unique identifier."
                                  }, 
                                  "external_status": {
                                    "enum": [
                                      "error", 
                                      "failure", 
                                      "info", 
                                      "ok", 
                                      "warning"
                                    ], 
                                    "type": "string", 
                                    "description": "The host external status.\nThis can be used by third-party software to change the host external status\nin case of an issue.\nThis has no effect on the host lifecycle, unless a third-party software checks for this\nstatus and acts accordingly."
                                  }, 
                                  "certificate": {
                                    "type": "object", 
                                    "properties": {
                                      "comment": {
                                        "type": "string", 
                                        "description": "Free text containing comments about this object."
                                      }, 
                                      "description": {
                                        "type": "string", 
                                        "description": "A human-readable description in plain text."
                                      }, 
                                      "name": {
                                        "type": "string", 
                                        "description": "A human-readable name in plain text."
                                      }, 
                                      "content": {
                                        "type": "string"
                                      }, 
                                      "organization": {
                                        "type": "string"
                                      }, 
                                      "id": {
                                        "type": "string", 
                                        "description": "A unique identifier."
                                      }, 
                                      "subject": {
                                        "type": "string"
                                      }
                                    }
                                  }, 
                                  "display": {
                                    "type": "object", 
                                    "description": "Represents a graphic console configuration.", 
                                    "properties": {
                                      "allow_override": {
                                        "type": "boolean", 
                                        "description": "Indicates if to override the display address per host.\nRelevant only for the `Host.display` attribute.\nIf set, the graphical console address of a virtual machine will be overridden by the host specified display address.\nif not set, the graphical console address of a virtual machine will not be overridden."
                                      }, 
                                      "disconnect_action": {
                                        "type": "string", 
                                        "description": "Returns the action that will take place when the graphic console is disconnected.\nThe options are:\n\nnone:: No action is taken.\nlock_screen:: Locks the currently active user session.\nlogout:: Logs out the currently active user session.\nreboot:: Initiates a graceful virtual machine reboot.\nshutdown:: Initiates a graceful virtual machine shutdown.\n\nThis option is only available for the SPICE console type."
                                      }, 
                                      "certificate": {
                                        "type": "object", 
                                        "properties": {
                                          "comment": {
                                            "type": "string", 
                                            "description": "Free text containing comments about this object."
                                          }, 
                                          "description": {
                                            "type": "string", 
                                            "description": "A human-readable description in plain text."
                                          }, 
                                          "name": {
                                            "type": "string", 
                                            "description": "A human-readable name in plain text."
                                          }, 
                                          "content": {
                                            "type": "string"
                                          }, 
                                          "organization": {
                                            "type": "string"
                                          }, 
                                          "id": {
                                            "type": "string", 
                                            "description": "A unique identifier."
                                          }, 
                                          "subject": {
                                            "type": "string"
                                          }
                                        }
                                      }, 
                                      "monitors": {
                                        "type": "integer", 
                                        "description": "The number of monitors opened for this graphic console.\nThis option is only available for the SPICE console type.\nPossible values are 1, 2 or 4.", 
                                        "format": "int32"
                                      }, 
                                      "single_qxl_pci": {
                                        "type": "boolean", 
                                        "description": "Indicates if to use one PCI slot for each monitor or to use a single PCI channel for all multiple monitors.\nThis option is only available for the SPICE console type and only for connecting a guest Linux based OS."
                                      }, 
                                      "copy_paste_enabled": {
                                        "type": "boolean", 
                                        "description": "Indicates whether a user is able to copy and paste content from an external host into the graphic console.\nThis option is only available for the SPICE console type."
                                      }, 
                                      "secure_port": {
                                        "type": "integer", 
                                        "description": "The secured port address on the guest, in case of using TLS, to connect the graphic console client to.\nIf TLS isn't enabled then it won't be reported.", 
                                        "format": "int32"
                                      }, 
                                      "proxy": {
                                        "type": "string", 
                                        "description": "The proxy IP which will be used by the graphic console client to connect to the guest.\nIt is useful when the client is outside the guest's network.\nThis option is only available for the SPICE console type.\nThis proxy can be set in global configuration, cluster level, virtual machine pool level or disabled\nper virtual machine.\nIf the proxy is set in any of this mentioned places and not disabled for the virtual machine, it will be\nreturned by this method.\nIf the proxy is not set, nothing will be reported."
                                      }, 
                                      "smartcard_enabled": {
                                        "type": "boolean", 
                                        "description": "Indicates if to use smart card authentication.\nThis option is only available for the SPICE console type."
                                      }, 
                                      "file_transfer_enabled": {
                                        "type": "boolean", 
                                        "description": "Indicates if a user is able to drag and drop files from an external host into the graphic console.\nThis option is only available for the SPICE console type."
                                      }, 
                                      "keyboard_layout": {
                                        "type": "string", 
                                        "description": "The keyboard layout to use with this graphic console.\nThis option is only available for the VNC console type.\nIf no keyboard is enabled then it won't be reported."
                                      }, 
                                      "type": {
                                        "enum": [
                                          "spice", 
                                          "vnc"
                                        ], 
                                        "type": "string", 
                                        "description": "The graphic console protocol type."
                                      }, 
                                      "port": {
                                        "type": "integer", 
                                        "description": "The port address on the guest to connect the graphic console client to.", 
                                        "format": "int32"
                                      }, 
                                      "address": {
                                        "type": "string", 
                                        "description": "The IP address of the guest to connect the graphic console client to."
                                      }
                                    }
                                  }, 
                                  "iscsi": {
                                    "type": "object", 
                                    "properties": {
                                      "status": {
                                        "type": "string"
                                      }, 
                                      "username": {
                                        "type": "string"
                                      }, 
                                      "initiator": {
                                        "type": "string"
                                      }, 
                                      "vendor_id": {
                                        "type": "string"
                                      }, 
                                      "volume_group_id": {
                                        "type": "string"
                                      }, 
                                      "paths": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "storage_domain_id": {
                                        "type": "string"
                                      }, 
                                      "disk_id": {
                                        "type": "string"
                                      }, 
                                      "password": {
                                        "type": "string"
                                      }, 
                                      "portal": {
                                        "type": "string"
                                      }, 
                                      "address": {
                                        "type": "string"
                                      }, 
                                      "lun_mapping": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "serial": {
                                        "type": "string"
                                      }, 
                                      "size": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "target": {
                                        "type": "string"
                                      }, 
                                      "port": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "product_id": {
                                        "type": "string"
                                      }
                                    }
                                  }, 
                                  "port": {
                                    "type": "integer", 
                                    "description": "The host port.", 
                                    "format": "int32"
                                  }, 
                                  "hardware_information": {
                                    "type": "object", 
                                    "description": "Represents hardware information of host.\n\nTo get that information send a request like this:\n\n....\nGET /ovirt-engine/api/hosts/123\n....\n\nThe result will be like this:\n\n[source,xml]\n----\n<host href=\"/ovirt-engine/api/hosts/123\" id=\"123\">\n  ...\n  <hardware_information>\n    <family>Red Hat Enterprise Linux</family>\n    <manufacturer>Red Hat</manufacturer>\n    <product_name>RHEV Hypervisor</product_name>\n    <serial_number>01234567-89AB-CDEF-0123-456789ABCDEF</serial_number>\n    <supported_rng_sources>\n      <supported_rng_source>random</supported_rng_source>\n    </supported_rng_sources>\n    <uuid>12345678-9ABC-DEF0-1234-56789ABCDEF0</uuid>\n    <version>1.2-34.5.el7ev</version>\n  </hardware_information>\n  ...\n</application>\n----", 
                                    "properties": {
                                      "uuid": {
                                        "type": "string", 
                                        "description": "Unique ID for each host."
                                      }, 
                                      "family": {
                                        "type": "string", 
                                        "description": "Type of host's CPU."
                                      }, 
                                      "supported_rng_sources": {
                                        "items": {
                                          "enum": [
                                            "hwrng", 
                                            "random", 
                                            "urandom"
                                          ], 
                                          "type": "string"
                                        }, 
                                        "type": "array", 
                                        "description": "Supported sources of random number generator."
                                      }, 
                                      "version": {
                                        "type": "string", 
                                        "description": "Unique name for each of the manufacturer."
                                      }, 
                                      "serial_number": {
                                        "type": "string", 
                                        "description": "Unique ID for host's chassis."
                                      }, 
                                      "product_name": {
                                        "type": "string", 
                                        "description": "Host's product name (for example `RHEV Hypervisor`)."
                                      }, 
                                      "manufacturer": {
                                        "type": "string", 
                                        "description": "Manufacturer of the host's machine and hardware vendor."
                                      }
                                    }
                                  }, 
                                  "memory": {
                                    "type": "integer", 
                                    "description": "The amount of physical memory on this host in bytes.", 
                                    "format": "int32"
                                  }, 
                                  "ksm": {
                                    "type": "object", 
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean"
                                      }, 
                                      "merge_across_nodes": {
                                        "type": "boolean"
                                      }
                                    }
                                  }, 
                                  "se_linux": {
                                    "type": "object", 
                                    "description": "Represents SELinux in the system.", 
                                    "properties": {
                                      "mode": {
                                        "enum": [
                                          "disabled", 
                                          "enforcing", 
                                          "permissive"
                                        ], 
                                        "type": "string", 
                                        "description": "SELinux current mode."
                                      }
                                    }
                                  }, 
                                  "type": {
                                    "enum": [
                                      "ovirt_node", 
                                      "rhel", 
                                      "rhev_h"
                                    ], 
                                    "type": "string", 
                                    "description": "Indicates if the host contains a full installation of the operating system or a scaled-down version intended\nonly to host virtual machines."
                                  }, 
                                  "status": {
                                    "enum": [
                                      "connecting", 
                                      "down", 
                                      "error", 
                                      "initializing", 
                                      "install_failed", 
                                      "installing", 
                                      "installing_os", 
                                      "kdumping", 
                                      "maintenance", 
                                      "non_operational", 
                                      "non_responsive", 
                                      "pending_approval", 
                                      "preparing_for_maintenance", 
                                      "reboot", 
                                      "unassigned", 
                                      "up"
                                    ], 
                                    "type": "string", 
                                    "description": "The host status."
                                  }, 
                                  "description": {
                                    "type": "string", 
                                    "description": "A human-readable description in plain text."
                                  }, 
                                  "status_detail": {
                                    "type": "string", 
                                    "description": "The host status details. Relevant for Gluster hosts."
                                  }, 
                                  "transparent_hugepages": {
                                    "type": "object", 
                                    "description": "Type representing a transparent huge pages (THP) support.", 
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean", 
                                        "description": "Enable THP support."
                                      }
                                    }
                                  }, 
                                  "address": {
                                    "type": "string", 
                                    "description": "The host address (FQDN/IP)."
                                  }, 
                                  "override_iptables": {
                                    "type": "boolean", 
                                    "description": "Specifies whether we should override firewall definitions.\nThis applies only when the host is installed or re-installed."
                                  }, 
                                  "device_passthrough": {
                                    "type": "object", 
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean"
                                      }
                                    }
                                  }, 
                                  "ssh": {
                                    "type": "object", 
                                    "properties": {
                                      "comment": {
                                        "type": "string", 
                                        "description": "Free text containing comments about this object."
                                      }, 
                                      "description": {
                                        "type": "string", 
                                        "description": "A human-readable description in plain text."
                                      }, 
                                      "authentication_method": {
                                        "enum": [
                                          "password", 
                                          "publickey"
                                        ], 
                                        "type": "string"
                                      }, 
                                      "id": {
                                        "type": "string", 
                                        "description": "A unique identifier."
                                      }, 
                                      "user": {
                                        "type": "object", 
                                        "description": "Represents a user in the system.", 
                                        "properties": {
                                          "comment": {
                                            "type": "string", 
                                            "description": "Free text containing comments about this object."
                                          }, 
                                          "last_name": {
                                            "type": "string"
                                          }, 
                                          "description": {
                                            "type": "string", 
                                            "description": "A human-readable description in plain text."
                                          }, 
                                          "name": {
                                            "type": "string", 
                                            "description": "A human-readable name in plain text."
                                          }, 
                                          "domain_entry_id": {
                                            "type": "string"
                                          }, 
                                          "namespace": {
                                            "type": "string", 
                                            "description": "Namespace where the user resides. When using the authorization provider that stores users in the LDAP server,\nthis attribute equals the naming context of the LDAP server.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-ldap for more information.\nWhen using the built-in authorization provider that stores users in the database this attribute is ignored.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-jdbc for more information."
                                          }, 
                                          "id": {
                                            "type": "string", 
                                            "description": "A unique identifier."
                                          }, 
                                          "department": {
                                            "type": "string"
                                          }, 
                                          "logged_in": {
                                            "type": "boolean"
                                          }, 
                                          "password": {
                                            "type": "string"
                                          }, 
                                          "user_name": {
                                            "type": "string", 
                                            "description": "The user's username. The format depends on authorization provider type. In most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In Active Directory it is the User Principal Name (UPN). `UPN` or\n`uid` must be followed by the authorization provider name. For example, in the case of LDAP's `uid` attribute it is:\n`myuser@myextension-authz`. In the case of Active Directory using `UPN` it is:\n`myuser@mysubdomain.mydomain.com@myextension-authz`. This attribute is a required parameter when adding a new user."
                                          }, 
                                          "email": {
                                            "type": "string"
                                          }, 
                                          "principal": {
                                            "type": "string", 
                                            "description": "Similar to `user_name`. The format depends on the LDAP provider. With most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In the case of Active Directory it is the User Principal Name (UPN)."
                                          }
                                        }
                                      }, 
                                      "fingerprint": {
                                        "type": "string"
                                      }, 
                                      "port": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "name": {
                                        "type": "string", 
                                        "description": "A human-readable name in plain text."
                                      }
                                    }
                                  }, 
                                  "numa_supported": {
                                    "type": "boolean", 
                                    "description": "Specifies whether _non uniform memory access_ (NUMA) is supported on this host."
                                  }, 
                                  "libvirt_version": {
                                    "type": "object", 
                                    "properties": {
                                      "comment": {
                                        "type": "string", 
                                        "description": "Free text containing comments about this object."
                                      }, 
                                      "major": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "description": {
                                        "type": "string", 
                                        "description": "A human-readable description in plain text."
                                      }, 
                                      "full_version": {
                                        "type": "string"
                                      }, 
                                      "name": {
                                        "type": "string", 
                                        "description": "A human-readable name in plain text."
                                      }, 
                                      "build": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "id": {
                                        "type": "string", 
                                        "description": "A unique identifier."
                                      }, 
                                      "minor": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "revision": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }
                                    }
                                  }, 
                                  "power_management": {
                                    "type": "object", 
                                    "properties": {
                                      "status": {
                                        "enum": [
                                          "off", 
                                          "on", 
                                          "unknown"
                                        ], 
                                        "type": "string", 
                                        "description": "Determines the power status of the host."
                                      }, 
                                      "username": {
                                        "type": "string", 
                                        "description": "A valid user name for power management."
                                      }, 
                                      "kdump_detection": {
                                        "type": "boolean", 
                                        "description": "Toggles whether to determine if kdump is running on the host before it is shut down.\nWhen set to `true`, the host will not shut down during a kdump process.\nThis is set to `true` when a host has power management enabled, unless disabled by the user."
                                      }, 
                                      "automatic_pm_enabled": {
                                        "type": "boolean", 
                                        "description": "Toggles the automated power control of the host in order to save energy.\nWhen set to true, the host will be automatically powered down if the cluster's load is low,\nand powered on again when required. This is set to true when a host is created, unless disabled by the user."
                                      }, 
                                      "enabled": {
                                        "type": "boolean", 
                                        "description": "Indicates whether power management configuration is enabled or disabled."
                                      }, 
                                      "pm_proxies": {
                                        "items": {
                                          "type": "object", 
                                          "properties": {
                                            "type": {
                                              "enum": [
                                                "cluster", 
                                                "dc", 
                                                "other_dc"
                                              ], 
                                              "type": "string"
                                            }
                                          }
                                        }, 
                                        "type": "array", 
                                        "description": "Determines the power management proxy."
                                      }, 
                                      "agents": {
                                        "items": {
                                          "type": "object", 
                                          "description": "Type representing a fence agent.", 
                                          "properties": {
                                            "comment": {
                                              "type": "string", 
                                              "description": "Free text containing comments about this object."
                                            }, 
                                            "username": {
                                              "type": "string", 
                                              "description": "Fence agent user name."
                                            }, 
                                            "encrypt_options": {
                                              "type": "boolean", 
                                              "description": "Specifies whether the options should be encrypted."
                                            }, 
                                            "description": {
                                              "type": "string", 
                                              "description": "A human-readable description in plain text."
                                            }, 
                                            "options": {
                                              "items": {
                                                "type": "object", 
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  }, 
                                                  "name": {
                                                    "type": "string"
                                                  }, 
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                }
                                              }, 
                                              "type": "array", 
                                              "description": "Fence agent options (comma-delimited list of\nkey-value pairs)."
                                            }, 
                                            "order": {
                                              "type": "integer", 
                                              "description": "The order of this agent if used with other agents.", 
                                              "format": "int32"
                                            }, 
                                            "concurrent": {
                                              "type": "boolean", 
                                              "description": "Specifies whether the agent should be used concurrently\nor sequentially."
                                            }, 
                                            "address": {
                                              "type": "string", 
                                              "description": "Fence agent address."
                                            }, 
                                            "id": {
                                              "type": "string", 
                                              "description": "A unique identifier."
                                            }, 
                                            "password": {
                                              "type": "string", 
                                              "description": "Fence agent password."
                                            }, 
                                            "type": {
                                              "type": "string", 
                                              "description": "Fence agent type."
                                            }, 
                                            "port": {
                                              "type": "integer", 
                                              "description": "Fence agent port.", 
                                              "format": "int32"
                                            }, 
                                            "name": {
                                              "type": "string", 
                                              "description": "A human-readable name in plain text."
                                            }
                                          }
                                        }, 
                                        "type": "array", 
                                        "description": "Specifies fence agent options when multiple fences are used.\n\nUse the order sub-element to prioritize the fence agents. Agents are run sequentially according to their\norder until the fence action succeeds. When two or more fence agents have the same order,\nthey are run concurrently. Other sub-elements include type, ip, user, password, and options."
                                      }, 
                                      "address": {
                                        "type": "string", 
                                        "description": "The host name or IP address of the host."
                                      }, 
                                      "password": {
                                        "type": "string", 
                                        "description": "A valid, robust password for power management."
                                      }, 
                                      "type": {
                                        "type": "string", 
                                        "description": "Fencing device code.\n\nA list of valid fencing device codes are available in the `capabilities` collection."
                                      }, 
                                      "options": {
                                        "items": {
                                          "type": "object", 
                                          "properties": {
                                            "type": {
                                              "type": "string"
                                            }, 
                                            "name": {
                                              "type": "string"
                                            }, 
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }, 
                                        "type": "array", 
                                        "description": "Fencing options for the selected type= specified with the option name=\"\" and value=\"\" strings."
                                      }
                                    }
                                  }, 
                                  "name": {
                                    "type": "string", 
                                    "description": "A human-readable name in plain text."
                                  }, 
                                  "max_scheduling_memory": {
                                    "type": "integer", 
                                    "description": "The max scheduling memory on this host in bytes.", 
                                    "format": "int32"
                                  }, 
                                  "summary": {
                                    "type": "object", 
                                    "description": "Type containing information related to virtual machines on a particular host.", 
                                    "properties": {
                                      "active": {
                                        "type": "integer", 
                                        "description": "The number of virtual machines active on the host.", 
                                        "format": "int32"
                                      }, 
                                      "migrating": {
                                        "type": "integer", 
                                        "description": "The number of virtual machines migrating to or from the host.", 
                                        "format": "int32"
                                      }, 
                                      "total": {
                                        "type": "integer", 
                                        "description": "The number of virtual machines present on the host.", 
                                        "format": "int32"
                                      }
                                    }
                                  }, 
                                  "auto_numa_status": {
                                    "enum": [
                                      "disable", 
                                      "enable", 
                                      "unknown"
                                    ], 
                                    "type": "string", 
                                    "description": "The host auto _non uniform memory access_ (NUMA) status."
                                  }, 
                                  "os": {
                                    "type": "object", 
                                    "description": "Information describing the operating system. This is used for both virtual machines and hosts.", 
                                    "properties": {
                                      "kernel": {
                                        "type": "string", 
                                        "description": "Path to custom kernel on ISO storage domain if Linux operating system is used.\n\nFor example `iso://vmlinuz-3.10.0-514.6.1.el7.x86_64`.\n\nNOTE: Not used for hosts."
                                      }, 
                                      "reported_kernel_cmdline": {
                                        "type": "string", 
                                        "description": "The host kernel command line as reported by a running host.\n\nThis is a read-only attribute. Attempts to change this attribute are silently ignored.\n\nNOTE: This attribute is currently only used for hosts."
                                      }, 
                                      "boot": {
                                        "type": "object", 
                                        "description": "Configuration of the boot sequence of a virtual machine.", 
                                        "properties": {
                                          "devices": {
                                            "items": {
                                              "enum": [
                                                "cdrom", 
                                                "hd", 
                                                "network"
                                              ], 
                                              "type": "string"
                                            }, 
                                            "type": "array", 
                                            "description": "Ordered list of boot devices. The virtual machine will try to boot from the given boot devices, in the given\norder."
                                          }
                                        }
                                      }, 
                                      "cmdline": {
                                        "type": "string", 
                                        "description": "Custom kernel parameters for start the virtual machine with if Linux operating system is used.\n\nNOTE: Not used for hosts."
                                      }, 
                                      "initrd": {
                                        "type": "string", 
                                        "description": "Path to custom initial ramdisk on ISO storage domain if Linux operating system is used.\n\nFor example `iso://initramfs-3.10.0-514.6.1.el7.x86_64.img`.\n\nNOTE: Not used for hosts."
                                      }, 
                                      "version": {
                                        "type": "object", 
                                        "properties": {
                                          "comment": {
                                            "type": "string", 
                                            "description": "Free text containing comments about this object."
                                          }, 
                                          "major": {
                                            "type": "integer", 
                                            "format": "int32"
                                          }, 
                                          "description": {
                                            "type": "string", 
                                            "description": "A human-readable description in plain text."
                                          }, 
                                          "full_version": {
                                            "type": "string"
                                          }, 
                                          "name": {
                                            "type": "string", 
                                            "description": "A human-readable name in plain text."
                                          }, 
                                          "build": {
                                            "type": "integer", 
                                            "format": "int32"
                                          }, 
                                          "id": {
                                            "type": "string", 
                                            "description": "A unique identifier."
                                          }, 
                                          "minor": {
                                            "type": "integer", 
                                            "format": "int32"
                                          }, 
                                          "revision": {
                                            "type": "integer", 
                                            "format": "int32"
                                          }
                                        }
                                      }, 
                                      "custom_kernel_cmdline": {
                                        "type": "string", 
                                        "description": "A custom part of the host kernel command line. This will be merged with the existing kernel command line.\n\nYou must reinstall and then reboot the host to apply the changes implemented by this attribute.\n\nDuring each host deploy procedure, kernel parameters that were added\nin the previous host deploy procedure are removed using\n`grubby --update-kernel DEFAULT --remove-args <previous_custom_params>`, and the current\nkernel command line customization is applied using\n`grubby --update-kernel DEFAULT --args <custom_params>`. The Manager internally keeps track of the\nlast-applied kernel parameters customization.\n\nNOTE: This attribute is currently only used for hosts."
                                      }, 
                                      "type": {
                                        "type": "string", 
                                        "description": "Operating system name in human readable form.\n\nFor example `Fedora` or `RHEL`. In general one of the names returned by the <<services/operating_systems,\noperating system>> service.\n\nNOTE: Read only for hosts."
                                      }
                                    }
                                  }, 
                                  "cpu": {
                                    "type": "object", 
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }, 
                                      "level": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }, 
                                      "speed": {
                                        "type": "number", 
                                        "format": "double"
                                      }, 
                                      "cpu_tune": {
                                        "type": "object", 
                                        "properties": {
                                          "vcpu_pins": {
                                            "items": {
                                              "type": "object", 
                                              "properties": {
                                                "cpu_set": {
                                                  "type": "string"
                                                }, 
                                                "vcpu": {
                                                  "type": "integer", 
                                                  "format": "int32"
                                                }
                                              }
                                            }, 
                                            "type": "array"
                                          }
                                        }
                                      }, 
                                      "architecture": {
                                        "enum": [
                                          "ppc64", 
                                          "undefined", 
                                          "x86_64"
                                        ], 
                                        "type": "string"
                                      }, 
                                      "mode": {
                                        "enum": [
                                          "custom", 
                                          "host_model", 
                                          "host_passthrough"
                                        ], 
                                        "type": "string"
                                      }, 
                                      "cores": {
                                        "items": {
                                          "type": "object", 
                                          "properties": {
                                            "index": {
                                              "type": "integer", 
                                              "format": "int32"
                                            }, 
                                            "socket": {
                                              "type": "integer", 
                                              "format": "int32"
                                            }
                                          }
                                        }, 
                                        "type": "array"
                                      }, 
                                      "type": {
                                        "type": "string"
                                      }, 
                                      "topology": {
                                        "type": "object", 
                                        "properties": {
                                          "cores": {
                                            "type": "integer", 
                                            "format": "int32"
                                          }, 
                                          "threads": {
                                            "type": "integer", 
                                            "format": "int32"
                                          }, 
                                          "sockets": {
                                            "type": "integer", 
                                            "format": "int32"
                                          }
                                        }
                                      }
                                    }
                                  }, 
                                  "kdump_status": {
                                    "enum": [
                                      "disabled", 
                                      "enabled", 
                                      "unknown"
                                    ], 
                                    "type": "string", 
                                    "description": "The host KDUMP status.\nKDUMP happens when the host kernel has crashed and it is now going through memory dumping."
                                  }, 
                                  "root_password": {
                                    "type": "string", 
                                    "description": "When creating a new host, a root password is required if the password authentication method is chosen,\nbut this is not subsequently included in the representation."
                                  }
                                }
                              }, 
                              "type": "array", 
                              "description": "Array of hosts serving as DNS servers."
                            }
                          }
                        }
                      }
                    }, 
                    "users": {
                      "items": {
                        "type": "object", 
                        "description": "Represents a user in the system.", 
                        "properties": {
                          "comment": {
                            "type": "string", 
                            "description": "Free text containing comments about this object."
                          }, 
                          "last_name": {
                            "type": "string"
                          }, 
                          "description": {
                            "type": "string", 
                            "description": "A human-readable description in plain text."
                          }, 
                          "name": {
                            "type": "string", 
                            "description": "A human-readable name in plain text."
                          }, 
                          "domain_entry_id": {
                            "type": "string"
                          }, 
                          "namespace": {
                            "type": "string", 
                            "description": "Namespace where the user resides. When using the authorization provider that stores users in the LDAP server,\nthis attribute equals the naming context of the LDAP server.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-ldap for more information.\nWhen using the built-in authorization provider that stores users in the database this attribute is ignored.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-jdbc for more information."
                          }, 
                          "id": {
                            "type": "string", 
                            "description": "A unique identifier."
                          }, 
                          "department": {
                            "type": "string"
                          }, 
                          "logged_in": {
                            "type": "boolean"
                          }, 
                          "password": {
                            "type": "string"
                          }, 
                          "user_name": {
                            "type": "string", 
                            "description": "The user's username. The format depends on authorization provider type. In most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In Active Directory it is the User Principal Name (UPN). `UPN` or\n`uid` must be followed by the authorization provider name. For example, in the case of LDAP's `uid` attribute it is:\n`myuser@myextension-authz`. In the case of Active Directory using `UPN` it is:\n`myuser@mysubdomain.mydomain.com@myextension-authz`. This attribute is a required parameter when adding a new user."
                          }, 
                          "email": {
                            "type": "string"
                          }, 
                          "principal": {
                            "type": "string", 
                            "description": "Similar to `user_name`. The format depends on the LDAP provider. With most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In the case of Active Directory it is the User Principal Name (UPN)."
                          }
                        }
                      }, 
                      "type": "array"
                    }, 
                    "regenerate_ssh_keys": {
                      "type": "boolean"
                    }, 
                    "host": {
                      "type": "object", 
                      "description": "Type representing a host.", 
                      "properties": {
                        "comment": {
                          "type": "string", 
                          "description": "Free text containing comments about this object."
                        }, 
                        "update_available": {
                          "type": "boolean", 
                          "description": "Specifies whether there is an oVirt-related update on this host."
                        }, 
                        "protocol": {
                          "enum": [
                            "stomp", 
                            "xml"
                          ], 
                          "type": "string", 
                          "description": "The protocol that the engine uses to communicate with\nthe host.\n\nWARNING: Since version 4.1 of the engine the protocol\nis always set to `stomp` since `xml` was removed."
                        }, 
                        "version": {
                          "type": "object", 
                          "properties": {
                            "comment": {
                              "type": "string", 
                              "description": "Free text containing comments about this object."
                            }, 
                            "major": {
                              "type": "integer", 
                              "format": "int32"
                            }, 
                            "description": {
                              "type": "string", 
                              "description": "A human-readable description in plain text."
                            }, 
                            "full_version": {
                              "type": "string"
                            }, 
                            "name": {
                              "type": "string", 
                              "description": "A human-readable name in plain text."
                            }, 
                            "build": {
                              "type": "integer", 
                              "format": "int32"
                            }, 
                            "id": {
                              "type": "string", 
                              "description": "A unique identifier."
                            }, 
                            "minor": {
                              "type": "integer", 
                              "format": "int32"
                            }, 
                            "revision": {
                              "type": "integer", 
                              "format": "int32"
                            }
                          }
                        }, 
                        "spm": {
                          "type": "object", 
                          "properties": {
                            "priority": {
                              "type": "integer", 
                              "format": "int32"
                            }, 
                            "status": {
                              "enum": [
                                "contending", 
                                "none", 
                                "spm"
                              ], 
                              "type": "string"
                            }
                          }
                        }, 
                        "hosted_engine": {
                          "type": "object", 
                          "properties": {
                            "active": {
                              "type": "boolean"
                            }, 
                            "local_maintenance": {
                              "type": "boolean"
                            }, 
                            "configured": {
                              "type": "boolean"
                            }, 
                            "score": {
                              "type": "integer", 
                              "format": "int32"
                            }, 
                            "global_maintenance": {
                              "type": "boolean"
                            }
                          }
                        }, 
                        "id": {
                          "type": "string", 
                          "description": "A unique identifier."
                        }, 
                        "external_status": {
                          "enum": [
                            "error", 
                            "failure", 
                            "info", 
                            "ok", 
                            "warning"
                          ], 
                          "type": "string", 
                          "description": "The host external status.\nThis can be used by third-party software to change the host external status\nin case of an issue.\nThis has no effect on the host lifecycle, unless a third-party software checks for this\nstatus and acts accordingly."
                        }, 
                        "certificate": {
                          "type": "object", 
                          "properties": {
                            "comment": {
                              "type": "string", 
                              "description": "Free text containing comments about this object."
                            }, 
                            "description": {
                              "type": "string", 
                              "description": "A human-readable description in plain text."
                            }, 
                            "name": {
                              "type": "string", 
                              "description": "A human-readable name in plain text."
                            }, 
                            "content": {
                              "type": "string"
                            }, 
                            "organization": {
                              "type": "string"
                            }, 
                            "id": {
                              "type": "string", 
                              "description": "A unique identifier."
                            }, 
                            "subject": {
                              "type": "string"
                            }
                          }
                        }, 
                        "display": {
                          "type": "object", 
                          "description": "Represents a graphic console configuration.", 
                          "properties": {
                            "allow_override": {
                              "type": "boolean", 
                              "description": "Indicates if to override the display address per host.\nRelevant only for the `Host.display` attribute.\nIf set, the graphical console address of a virtual machine will be overridden by the host specified display address.\nif not set, the graphical console address of a virtual machine will not be overridden."
                            }, 
                            "disconnect_action": {
                              "type": "string", 
                              "description": "Returns the action that will take place when the graphic console is disconnected.\nThe options are:\n\nnone:: No action is taken.\nlock_screen:: Locks the currently active user session.\nlogout:: Logs out the currently active user session.\nreboot:: Initiates a graceful virtual machine reboot.\nshutdown:: Initiates a graceful virtual machine shutdown.\n\nThis option is only available for the SPICE console type."
                            }, 
                            "certificate": {
                              "type": "object", 
                              "properties": {
                                "comment": {
                                  "type": "string", 
                                  "description": "Free text containing comments about this object."
                                }, 
                                "description": {
                                  "type": "string", 
                                  "description": "A human-readable description in plain text."
                                }, 
                                "name": {
                                  "type": "string", 
                                  "description": "A human-readable name in plain text."
                                }, 
                                "content": {
                                  "type": "string"
                                }, 
                                "organization": {
                                  "type": "string"
                                }, 
                                "id": {
                                  "type": "string", 
                                  "description": "A unique identifier."
                                }, 
                                "subject": {
                                  "type": "string"
                                }
                              }
                            }, 
                            "monitors": {
                              "type": "integer", 
                              "description": "The number of monitors opened for this graphic console.\nThis option is only available for the SPICE console type.\nPossible values are 1, 2 or 4.", 
                              "format": "int32"
                            }, 
                            "single_qxl_pci": {
                              "type": "boolean", 
                              "description": "Indicates if to use one PCI slot for each monitor or to use a single PCI channel for all multiple monitors.\nThis option is only available for the SPICE console type and only for connecting a guest Linux based OS."
                            }, 
                            "copy_paste_enabled": {
                              "type": "boolean", 
                              "description": "Indicates whether a user is able to copy and paste content from an external host into the graphic console.\nThis option is only available for the SPICE console type."
                            }, 
                            "secure_port": {
                              "type": "integer", 
                              "description": "The secured port address on the guest, in case of using TLS, to connect the graphic console client to.\nIf TLS isn't enabled then it won't be reported.", 
                              "format": "int32"
                            }, 
                            "proxy": {
                              "type": "string", 
                              "description": "The proxy IP which will be used by the graphic console client to connect to the guest.\nIt is useful when the client is outside the guest's network.\nThis option is only available for the SPICE console type.\nThis proxy can be set in global configuration, cluster level, virtual machine pool level or disabled\nper virtual machine.\nIf the proxy is set in any of this mentioned places and not disabled for the virtual machine, it will be\nreturned by this method.\nIf the proxy is not set, nothing will be reported."
                            }, 
                            "smartcard_enabled": {
                              "type": "boolean", 
                              "description": "Indicates if to use smart card authentication.\nThis option is only available for the SPICE console type."
                            }, 
                            "file_transfer_enabled": {
                              "type": "boolean", 
                              "description": "Indicates if a user is able to drag and drop files from an external host into the graphic console.\nThis option is only available for the SPICE console type."
                            }, 
                            "keyboard_layout": {
                              "type": "string", 
                              "description": "The keyboard layout to use with this graphic console.\nThis option is only available for the VNC console type.\nIf no keyboard is enabled then it won't be reported."
                            }, 
                            "type": {
                              "enum": [
                                "spice", 
                                "vnc"
                              ], 
                              "type": "string", 
                              "description": "The graphic console protocol type."
                            }, 
                            "port": {
                              "type": "integer", 
                              "description": "The port address on the guest to connect the graphic console client to.", 
                              "format": "int32"
                            }, 
                            "address": {
                              "type": "string", 
                              "description": "The IP address of the guest to connect the graphic console client to."
                            }
                          }
                        }, 
                        "iscsi": {
                          "type": "object", 
                          "properties": {
                            "status": {
                              "type": "string"
                            }, 
                            "username": {
                              "type": "string"
                            }, 
                            "initiator": {
                              "type": "string"
                            }, 
                            "vendor_id": {
                              "type": "string"
                            }, 
                            "volume_group_id": {
                              "type": "string"
                            }, 
                            "paths": {
                              "type": "integer", 
                              "format": "int32"
                            }, 
                            "storage_domain_id": {
                              "type": "string"
                            }, 
                            "disk_id": {
                              "type": "string"
                            }, 
                            "password": {
                              "type": "string"
                            }, 
                            "portal": {
                              "type": "string"
                            }, 
                            "address": {
                              "type": "string"
                            }, 
                            "lun_mapping": {
                              "type": "integer", 
                              "format": "int32"
                            }, 
                            "serial": {
                              "type": "string"
                            }, 
                            "size": {
                              "type": "integer", 
                              "format": "int32"
                            }, 
                            "target": {
                              "type": "string"
                            }, 
                            "port": {
                              "type": "integer", 
                              "format": "int32"
                            }, 
                            "product_id": {
                              "type": "string"
                            }
                          }
                        }, 
                        "port": {
                          "type": "integer", 
                          "description": "The host port.", 
                          "format": "int32"
                        }, 
                        "hardware_information": {
                          "type": "object", 
                          "description": "Represents hardware information of host.\n\nTo get that information send a request like this:\n\n....\nGET /ovirt-engine/api/hosts/123\n....\n\nThe result will be like this:\n\n[source,xml]\n----\n<host href=\"/ovirt-engine/api/hosts/123\" id=\"123\">\n  ...\n  <hardware_information>\n    <family>Red Hat Enterprise Linux</family>\n    <manufacturer>Red Hat</manufacturer>\n    <product_name>RHEV Hypervisor</product_name>\n    <serial_number>01234567-89AB-CDEF-0123-456789ABCDEF</serial_number>\n    <supported_rng_sources>\n      <supported_rng_source>random</supported_rng_source>\n    </supported_rng_sources>\n    <uuid>12345678-9ABC-DEF0-1234-56789ABCDEF0</uuid>\n    <version>1.2-34.5.el7ev</version>\n  </hardware_information>\n  ...\n</application>\n----", 
                          "properties": {
                            "uuid": {
                              "type": "string", 
                              "description": "Unique ID for each host."
                            }, 
                            "family": {
                              "type": "string", 
                              "description": "Type of host's CPU."
                            }, 
                            "supported_rng_sources": {
                              "items": {
                                "enum": [
                                  "hwrng", 
                                  "random", 
                                  "urandom"
                                ], 
                                "type": "string"
                              }, 
                              "type": "array", 
                              "description": "Supported sources of random number generator."
                            }, 
                            "version": {
                              "type": "string", 
                              "description": "Unique name for each of the manufacturer."
                            }, 
                            "serial_number": {
                              "type": "string", 
                              "description": "Unique ID for host's chassis."
                            }, 
                            "product_name": {
                              "type": "string", 
                              "description": "Host's product name (for example `RHEV Hypervisor`)."
                            }, 
                            "manufacturer": {
                              "type": "string", 
                              "description": "Manufacturer of the host's machine and hardware vendor."
                            }
                          }
                        }, 
                        "memory": {
                          "type": "integer", 
                          "description": "The amount of physical memory on this host in bytes.", 
                          "format": "int32"
                        }, 
                        "ksm": {
                          "type": "object", 
                          "properties": {
                            "enabled": {
                              "type": "boolean"
                            }, 
                            "merge_across_nodes": {
                              "type": "boolean"
                            }
                          }
                        }, 
                        "se_linux": {
                          "type": "object", 
                          "description": "Represents SELinux in the system.", 
                          "properties": {
                            "mode": {
                              "enum": [
                                "disabled", 
                                "enforcing", 
                                "permissive"
                              ], 
                              "type": "string", 
                              "description": "SELinux current mode."
                            }
                          }
                        }, 
                        "type": {
                          "enum": [
                            "ovirt_node", 
                            "rhel", 
                            "rhev_h"
                          ], 
                          "type": "string", 
                          "description": "Indicates if the host contains a full installation of the operating system or a scaled-down version intended\nonly to host virtual machines."
                        }, 
                        "status": {
                          "enum": [
                            "connecting", 
                            "down", 
                            "error", 
                            "initializing", 
                            "install_failed", 
                            "installing", 
                            "installing_os", 
                            "kdumping", 
                            "maintenance", 
                            "non_operational", 
                            "non_responsive", 
                            "pending_approval", 
                            "preparing_for_maintenance", 
                            "reboot", 
                            "unassigned", 
                            "up"
                          ], 
                          "type": "string", 
                          "description": "The host status."
                        }, 
                        "description": {
                          "type": "string", 
                          "description": "A human-readable description in plain text."
                        }, 
                        "status_detail": {
                          "type": "string", 
                          "description": "The host status details. Relevant for Gluster hosts."
                        }, 
                        "transparent_hugepages": {
                          "type": "object", 
                          "description": "Type representing a transparent huge pages (THP) support.", 
                          "properties": {
                            "enabled": {
                              "type": "boolean", 
                              "description": "Enable THP support."
                            }
                          }
                        }, 
                        "address": {
                          "type": "string", 
                          "description": "The host address (FQDN/IP)."
                        }, 
                        "override_iptables": {
                          "type": "boolean", 
                          "description": "Specifies whether we should override firewall definitions.\nThis applies only when the host is installed or re-installed."
                        }, 
                        "device_passthrough": {
                          "type": "object", 
                          "properties": {
                            "enabled": {
                              "type": "boolean"
                            }
                          }
                        }, 
                        "ssh": {
                          "type": "object", 
                          "properties": {
                            "comment": {
                              "type": "string", 
                              "description": "Free text containing comments about this object."
                            }, 
                            "description": {
                              "type": "string", 
                              "description": "A human-readable description in plain text."
                            }, 
                            "authentication_method": {
                              "enum": [
                                "password", 
                                "publickey"
                              ], 
                              "type": "string"
                            }, 
                            "id": {
                              "type": "string", 
                              "description": "A unique identifier."
                            }, 
                            "user": {
                              "type": "object", 
                              "description": "Represents a user in the system.", 
                              "properties": {
                                "comment": {
                                  "type": "string", 
                                  "description": "Free text containing comments about this object."
                                }, 
                                "last_name": {
                                  "type": "string"
                                }, 
                                "description": {
                                  "type": "string", 
                                  "description": "A human-readable description in plain text."
                                }, 
                                "name": {
                                  "type": "string", 
                                  "description": "A human-readable name in plain text."
                                }, 
                                "domain_entry_id": {
                                  "type": "string"
                                }, 
                                "namespace": {
                                  "type": "string", 
                                  "description": "Namespace where the user resides. When using the authorization provider that stores users in the LDAP server,\nthis attribute equals the naming context of the LDAP server.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-ldap for more information.\nWhen using the built-in authorization provider that stores users in the database this attribute is ignored.\nSee https://github.com/oVirt/ovirt-engine-extension-aaa-jdbc for more information."
                                }, 
                                "id": {
                                  "type": "string", 
                                  "description": "A unique identifier."
                                }, 
                                "department": {
                                  "type": "string"
                                }, 
                                "logged_in": {
                                  "type": "boolean"
                                }, 
                                "password": {
                                  "type": "string"
                                }, 
                                "user_name": {
                                  "type": "string", 
                                  "description": "The user's username. The format depends on authorization provider type. In most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In Active Directory it is the User Principal Name (UPN). `UPN` or\n`uid` must be followed by the authorization provider name. For example, in the case of LDAP's `uid` attribute it is:\n`myuser@myextension-authz`. In the case of Active Directory using `UPN` it is:\n`myuser@mysubdomain.mydomain.com@myextension-authz`. This attribute is a required parameter when adding a new user."
                                }, 
                                "email": {
                                  "type": "string"
                                }, 
                                "principal": {
                                  "type": "string", 
                                  "description": "Similar to `user_name`. The format depends on the LDAP provider. With most LDAP providers it is the\nvalue of the `uid` LDAP attribute. In the case of Active Directory it is the User Principal Name (UPN)."
                                }
                              }
                            }, 
                            "fingerprint": {
                              "type": "string"
                            }, 
                            "port": {
                              "type": "integer", 
                              "format": "int32"
                            }, 
                            "name": {
                              "type": "string", 
                              "description": "A human-readable name in plain text."
                            }
                          }
                        }, 
                        "numa_supported": {
                          "type": "boolean", 
                          "description": "Specifies whether _non uniform memory access_ (NUMA) is supported on this host."
                        }, 
                        "libvirt_version": {
                          "type": "object", 
                          "properties": {
                            "comment": {
                              "type": "string", 
                              "description": "Free text containing comments about this object."
                            }, 
                            "major": {
                              "type": "integer", 
                              "format": "int32"
                            }, 
                            "description": {
                              "type": "string", 
                              "description": "A human-readable description in plain text."
                            }, 
                            "full_version": {
                              "type": "string"
                            }, 
                            "name": {
                              "type": "string", 
                              "description": "A human-readable name in plain text."
                            }, 
                            "build": {
                              "type": "integer", 
                              "format": "int32"
                            }, 
                            "id": {
                              "type": "string", 
                              "description": "A unique identifier."
                            }, 
                            "minor": {
                              "type": "integer", 
                              "format": "int32"
                            }, 
                            "revision": {
                              "type": "integer", 
                              "format": "int32"
                            }
                          }
                        }, 
                        "power_management": {
                          "type": "object", 
                          "properties": {
                            "status": {
                              "enum": [
                                "off", 
                                "on", 
                                "unknown"
                              ], 
                              "type": "string", 
                              "description": "Determines the power status of the host."
                            }, 
                            "username": {
                              "type": "string", 
                              "description": "A valid user name for power management."
                            }, 
                            "kdump_detection": {
                              "type": "boolean", 
                              "description": "Toggles whether to determine if kdump is running on the host before it is shut down.\nWhen set to `true`, the host will not shut down during a kdump process.\nThis is set to `true` when a host has power management enabled, unless disabled by the user."
                            }, 
                            "automatic_pm_enabled": {
                              "type": "boolean", 
                              "description": "Toggles the automated power control of the host in order to save energy.\nWhen set to true, the host will be automatically powered down if the cluster's load is low,\nand powered on again when required. This is set to true when a host is created, unless disabled by the user."
                            }, 
                            "enabled": {
                              "type": "boolean", 
                              "description": "Indicates whether power management configuration is enabled or disabled."
                            }, 
                            "pm_proxies": {
                              "items": {
                                "type": "object", 
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "cluster", 
                                      "dc", 
                                      "other_dc"
                                    ], 
                                    "type": "string"
                                  }
                                }
                              }, 
                              "type": "array", 
                              "description": "Determines the power management proxy."
                            }, 
                            "agents": {
                              "items": {
                                "type": "object", 
                                "description": "Type representing a fence agent.", 
                                "properties": {
                                  "comment": {
                                    "type": "string", 
                                    "description": "Free text containing comments about this object."
                                  }, 
                                  "username": {
                                    "type": "string", 
                                    "description": "Fence agent user name."
                                  }, 
                                  "encrypt_options": {
                                    "type": "boolean", 
                                    "description": "Specifies whether the options should be encrypted."
                                  }, 
                                  "description": {
                                    "type": "string", 
                                    "description": "A human-readable description in plain text."
                                  }, 
                                  "options": {
                                    "items": {
                                      "type": "object", 
                                      "properties": {
                                        "type": {
                                          "type": "string"
                                        }, 
                                        "name": {
                                          "type": "string"
                                        }, 
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }, 
                                    "type": "array", 
                                    "description": "Fence agent options (comma-delimited list of\nkey-value pairs)."
                                  }, 
                                  "order": {
                                    "type": "integer", 
                                    "description": "The order of this agent if used with other agents.", 
                                    "format": "int32"
                                  }, 
                                  "concurrent": {
                                    "type": "boolean", 
                                    "description": "Specifies whether the agent should be used concurrently\nor sequentially."
                                  }, 
                                  "address": {
                                    "type": "string", 
                                    "description": "Fence agent address."
                                  }, 
                                  "id": {
                                    "type": "string", 
                                    "description": "A unique identifier."
                                  }, 
                                  "password": {
                                    "type": "string", 
                                    "description": "Fence agent password."
                                  }, 
                                  "type": {
                                    "type": "string", 
                                    "description": "Fence agent type."
                                  }, 
                                  "port": {
                                    "type": "integer", 
                                    "description": "Fence agent port.", 
                                    "format": "int32"
                                  }, 
                                  "name": {
                                    "type": "string", 
                                    "description": "A human-readable name in plain text."
                                  }
                                }
                              }, 
                              "type": "array", 
                              "description": "Specifies fence agent options when multiple fences are used.\n\nUse the order sub-element to prioritize the fence agents. Agents are run sequentially according to their\norder until the fence action succeeds. When two or more fence agents have the same order,\nthey are run concurrently. Other sub-elements include type, ip, user, password, and options."
                            }, 
                            "address": {
                              "type": "string", 
                              "description": "The host name or IP address of the host."
                            }, 
                            "password": {
                              "type": "string", 
                              "description": "A valid, robust password for power management."
                            }, 
                            "type": {
                              "type": "string", 
                              "description": "Fencing device code.\n\nA list of valid fencing device codes are available in the `capabilities` collection."
                            }, 
                            "options": {
                              "items": {
                                "type": "object", 
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  }, 
                                  "name": {
                                    "type": "string"
                                  }, 
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              }, 
                              "type": "array", 
                              "description": "Fencing options for the selected type= specified with the option name=\"\" and value=\"\" strings."
                            }
                          }
                        }, 
                        "name": {
                          "type": "string", 
                          "description": "A human-readable name in plain text."
                        }, 
                        "max_scheduling_memory": {
                          "type": "integer", 
                          "description": "The max scheduling memory on this host in bytes.", 
                          "format": "int32"
                        }, 
                        "summary": {
                          "type": "object", 
                          "description": "Type containing information related to virtual machines on a particular host.", 
                          "properties": {
                            "active": {
                              "type": "integer", 
                              "description": "The number of virtual machines active on the host.", 
                              "format": "int32"
                            }, 
                            "migrating": {
                              "type": "integer", 
                              "description": "The number of virtual machines migrating to or from the host.", 
                              "format": "int32"
                            }, 
                            "total": {
                              "type": "integer", 
                              "description": "The number of virtual machines present on the host.", 
                              "format": "int32"
                            }
                          }
                        }, 
                        "auto_numa_status": {
                          "enum": [
                            "disable", 
                            "enable", 
                            "unknown"
                          ], 
                          "type": "string", 
                          "description": "The host auto _non uniform memory access_ (NUMA) status."
                        }, 
                        "os": {
                          "type": "object", 
                          "description": "Information describing the operating system. This is used for both virtual machines and hosts.", 
                          "properties": {
                            "kernel": {
                              "type": "string", 
                              "description": "Path to custom kernel on ISO storage domain if Linux operating system is used.\n\nFor example `iso://vmlinuz-3.10.0-514.6.1.el7.x86_64`.\n\nNOTE: Not used for hosts."
                            }, 
                            "reported_kernel_cmdline": {
                              "type": "string", 
                              "description": "The host kernel command line as reported by a running host.\n\nThis is a read-only attribute. Attempts to change this attribute are silently ignored.\n\nNOTE: This attribute is currently only used for hosts."
                            }, 
                            "boot": {
                              "type": "object", 
                              "description": "Configuration of the boot sequence of a virtual machine.", 
                              "properties": {
                                "devices": {
                                  "items": {
                                    "enum": [
                                      "cdrom", 
                                      "hd", 
                                      "network"
                                    ], 
                                    "type": "string"
                                  }, 
                                  "type": "array", 
                                  "description": "Ordered list of boot devices. The virtual machine will try to boot from the given boot devices, in the given\norder."
                                }
                              }
                            }, 
                            "cmdline": {
                              "type": "string", 
                              "description": "Custom kernel parameters for start the virtual machine with if Linux operating system is used.\n\nNOTE: Not used for hosts."
                            }, 
                            "initrd": {
                              "type": "string", 
                              "description": "Path to custom initial ramdisk on ISO storage domain if Linux operating system is used.\n\nFor example `iso://initramfs-3.10.0-514.6.1.el7.x86_64.img`.\n\nNOTE: Not used for hosts."
                            }, 
                            "version": {
                              "type": "object", 
                              "properties": {
                                "comment": {
                                  "type": "string", 
                                  "description": "Free text containing comments about this object."
                                }, 
                                "major": {
                                  "type": "integer", 
                                  "format": "int32"
                                }, 
                                "description": {
                                  "type": "string", 
                                  "description": "A human-readable description in plain text."
                                }, 
                                "full_version": {
                                  "type": "string"
                                }, 
                                "name": {
                                  "type": "string", 
                                  "description": "A human-readable name in plain text."
                                }, 
                                "build": {
                                  "type": "integer", 
                                  "format": "int32"
                                }, 
                                "id": {
                                  "type": "string", 
                                  "description": "A unique identifier."
                                }, 
                                "minor": {
                                  "type": "integer", 
                                  "format": "int32"
                                }, 
                                "revision": {
                                  "type": "integer", 
                                  "format": "int32"
                                }
                              }
                            }, 
                            "custom_kernel_cmdline": {
                              "type": "string", 
                              "description": "A custom part of the host kernel command line. This will be merged with the existing kernel command line.\n\nYou must reinstall and then reboot the host to apply the changes implemented by this attribute.\n\nDuring each host deploy procedure, kernel parameters that were added\nin the previous host deploy procedure are removed using\n`grubby --update-kernel DEFAULT --remove-args <previous_custom_params>`, and the current\nkernel command line customization is applied using\n`grubby --update-kernel DEFAULT --args <custom_params>`. The Manager internally keeps track of the\nlast-applied kernel parameters customization.\n\nNOTE: This attribute is currently only used for hosts."
                            }, 
                            "type": {
                              "type": "string", 
                              "description": "Operating system name in human readable form.\n\nFor example `Fedora` or `RHEL`. In general one of the names returned by the <<services/operating_systems,\noperating system>> service.\n\nNOTE: Read only for hosts."
                            }
                          }
                        }, 
                        "cpu": {
                          "type": "object", 
                          "properties": {
                            "name": {
                              "type": "string"
                            }, 
                            "level": {
                              "type": "integer", 
                              "format": "int32"
                            }, 
                            "speed": {
                              "type": "number", 
                              "format": "double"
                            }, 
                            "cpu_tune": {
                              "type": "object", 
                              "properties": {
                                "vcpu_pins": {
                                  "items": {
                                    "type": "object", 
                                    "properties": {
                                      "cpu_set": {
                                        "type": "string"
                                      }, 
                                      "vcpu": {
                                        "type": "integer", 
                                        "format": "int32"
                                      }
                                    }
                                  }, 
                                  "type": "array"
                                }
                              }
                            }, 
                            "architecture": {
                              "enum": [
                                "ppc64", 
                                "undefined", 
                                "x86_64"
                              ], 
                              "type": "string"
                            }, 
                            "mode": {
                              "enum": [
                                "custom", 
                                "host_model", 
                                "host_passthrough"
                              ], 
                              "type": "string"
                            }, 
                            "cores": {
                              "items": {
                                "type": "object", 
                                "properties": {
                                  "index": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "socket": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }
                                }
                              }, 
                              "type": "array"
                            }, 
                            "type": {
                              "type": "string"
                            }, 
                            "topology": {
                              "type": "object", 
                              "properties": {
                                "cores": {
                                  "type": "integer", 
                                  "format": "int32"
                                }, 
                                "threads": {
                                  "type": "integer", 
                                  "format": "int32"
                                }, 
                                "sockets": {
                                  "type": "integer", 
                                  "format": "int32"
                                }
                              }
                            }
                          }
                        }, 
                        "kdump_status": {
                          "enum": [
                            "disabled", 
                            "enabled", 
                            "unknown"
                          ], 
                          "type": "string", 
                          "description": "The host KDUMP status.\nKDUMP happens when the host kernel has crashed and it is now going through memory dumping."
                        }, 
                        "root_password": {
                          "type": "string", 
                          "description": "When creating a new host, a root password is required if the password authentication method is chosen,\nbut this is not subsequently included in the representation."
                        }
                      }
                    }, 
                    "timezone": {
                      "type": "string"
                    }
                  }
                }, 
                "regenerate_ssh_keys": {
                  "type": "boolean"
                }, 
                "dns_search": {
                  "type": "string"
                }, 
                "input_locale": {
                  "type": "string"
                }, 
                "windows_license_key": {
                  "type": "string"
                }, 
                "user_locale": {
                  "type": "string"
                }, 
                "root_password": {
                  "type": "string"
                }, 
                "regenerate_ids": {
                  "type": "boolean"
                }, 
                "ui_language": {
                  "type": "string"
                }, 
                "timezone": {
                  "type": "string"
                }, 
                "nic_configurations": {
                  "items": {
                    "type": "object", 
                    "description": "The type describes the configuration of a virtual network interface.", 
                    "properties": {
                      "name": {
                        "type": "string", 
                        "description": "Network interface name."
                      }, 
                      "ipv6_boot_protocol": {
                        "enum": [
                          "autoconf", 
                          "dhcp", 
                          "none", 
                          "static"
                        ], 
                        "type": "string", 
                        "description": "IPv6 boot protocol."
                      }, 
                      "ip": {
                        "type": "object", 
                        "description": "Represents the IP configuration of a network interface.", 
                        "properties": {
                          "netmask": {
                            "type": "string", 
                            "description": "The network mask.\n\nFor IPv6 addresses the value is an integer in the range of 0-128, which represents the subnet prefix."
                          }, 
                          "version": {
                            "enum": [
                              "v4", 
                              "v6"
                            ], 
                            "type": "string", 
                            "description": "The version of the IP protocol.\n\nNOTE: From version 4.1 of the Manager this attribute will be optional, and when a value is not provided, it will\nbe inferred from the value of the `address` attribute."
                          }, 
                          "gateway": {
                            "type": "string", 
                            "description": "The address of the default gateway."
                          }, 
                          "address": {
                            "type": "string", 
                            "description": "The text representation of the IP address.\n\nFor example, an IPv4 address will be represented as follows:\n\n[source,xml]\n----\n<ip>\n  <address>192.168.0.1</address>\n  ...\n</ip>\n----\n\nAn IPv6 address will be represented as follows:\n\n[source,xml]\n----\n<ip>\n  <address>2620:52:0:20f0:4216:7eff:feaa:1b50</address>\n  ...\n</ip>\n----"
                          }
                        }
                      }, 
                      "boot_protocol": {
                        "enum": [
                          "autoconf", 
                          "dhcp", 
                          "none", 
                          "static"
                        ], 
                        "type": "string", 
                        "description": "IPv4 boot protocol."
                      }, 
                      "on_boot": {
                        "type": "boolean", 
                        "description": "Specifies whether the network interface should be activated on the virtual machine guest operating system boot."
                      }, 
                      "ipv6": {
                        "type": "object", 
                        "description": "Represents the IP configuration of a network interface.", 
                        "properties": {
                          "netmask": {
                            "type": "string", 
                            "description": "The network mask.\n\nFor IPv6 addresses the value is an integer in the range of 0-128, which represents the subnet prefix."
                          }, 
                          "version": {
                            "enum": [
                              "v4", 
                              "v6"
                            ], 
                            "type": "string", 
                            "description": "The version of the IP protocol.\n\nNOTE: From version 4.1 of the Manager this attribute will be optional, and when a value is not provided, it will\nbe inferred from the value of the `address` attribute."
                          }, 
                          "gateway": {
                            "type": "string", 
                            "description": "The address of the default gateway."
                          }, 
                          "address": {
                            "type": "string", 
                            "description": "The text representation of the IP address.\n\nFor example, an IPv4 address will be represented as follows:\n\n[source,xml]\n----\n<ip>\n  <address>192.168.0.1</address>\n  ...\n</ip>\n----\n\nAn IPv6 address will be represented as follows:\n\n[source,xml]\n----\n<ip>\n  <address>2620:52:0:20f0:4216:7eff:feaa:1b50</address>\n  ...\n</ip>\n----"
                          }
                        }
                      }
                    }
                  }, 
                  "type": "array"
                }, 
                "configuration": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "string", 
                      "description": "The document describing the virtual machine.\n\nExample of the OVF document:\n\n[source,xml]\n----\n<?xml version='1.0' encoding='UTF-8'?>\n<ovf:Envelope xmlns:ovf=\"http://schemas.dmtf.org/ovf/envelope/1/\"\n  xmlns:rasd=\"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_ResourceAllocationSettingData\"\n  xmlns:vssd=\"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_VirtualSystemSettingData\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  ovf:version=\"3.5.0.0\">\n  <References/>\n  <Section xsi:type=\"ovf:NetworkSection_Type\">\n    <Info>List of networks</Info>\n    <Network ovf:name=\"Network 1\"/>\n  </Section>\n  <Section xsi:type=\"ovf:DiskSection_Type\">\n    <Info>List of Virtual Disks</Info>\n  </Section>\n  <Content ovf:id=\"out\" xsi:type=\"ovf:VirtualSystem_Type\">\n    <CreationDate>2014/12/03 04:25:45</CreationDate>\n    <ExportDate>2015/02/09 14:12:24</ExportDate>\n    <DeleteProtected>false</DeleteProtected>\n    <SsoMethod>guest_agent</SsoMethod>\n    <IsSmartcardEnabled>false</IsSmartcardEnabled>\n    <TimeZone>Etc/GMT</TimeZone>\n    <default_boot_sequence>0</default_boot_sequence>\n    <Generation>1</Generation>\n    <VmType>1</VmType>\n    <MinAllocatedMem>1024</MinAllocatedMem>\n    <IsStateless>false</IsStateless>\n    <IsRunAndPause>false</IsRunAndPause>\n    <AutoStartup>false</AutoStartup>\n    <Priority>1</Priority>\n    <CreatedByUserId>fdfc627c-d875-11e0-90f0-83df133b58cc</CreatedByUserId>\n    <IsBootMenuEnabled>false</IsBootMenuEnabled>\n    <IsSpiceFileTransferEnabled>true</IsSpiceFileTransferEnabled>\n    <IsSpiceCopyPasteEnabled>true</IsSpiceCopyPasteEnabled>\n    <Name>VM_export</Name>\n    <TemplateId>00000000-0000-0000-0000-000000000000</TemplateId>\n    <TemplateName>Blank</TemplateName>\n    <IsInitilized>false</IsInitilized>\n    <Origin>3</Origin>\n    <DefaultDisplayType>1</DefaultDisplayType>\n    <TrustedService>false</TrustedService>\n    <OriginalTemplateId>00000000-0000-0000-0000-000000000000</OriginalTemplateId>\n    <OriginalTemplateName>Blank</OriginalTemplateName>\n    <UseLatestVersion>false</UseLatestVersion>\n    <Section ovf:id=\"70b4d9a7-4f73-4def-89ca-24fc5f60e01a\"\n      ovf:required=\"false\"\n      xsi:type=\"ovf:OperatingSystemSection_Type\">\n      <Info>Guest Operating System</Info>\n      <Description>other</Description>\n    </Section>\n    <Section xsi:type=\"ovf:VirtualHardwareSection_Type\">\n      <Info>1 CPU, 1024 Memory</Info>\n      <System>\n        <vssd:VirtualSystemType>ENGINE 3.5.0.0</vssd:VirtualSystemType>\n      </System>\n      <Item>\n        <rasd:Caption>1 virtual cpu</rasd:Caption>\n        <rasd:Description>Number of virtual CPU</rasd:Description>\n        <rasd:InstanceId>1</rasd:InstanceId>\n        <rasd:ResourceType>3</rasd:ResourceType>\n        <rasd:num_of_sockets>1</rasd:num_of_sockets>\n        <rasd:cpu_per_socket>1</rasd:cpu_per_socket>\n      </Item>\n      <Item>\n        <rasd:Caption>1024 MB of memory</rasd:Caption>\n        <rasd:Description>Memory Size</rasd:Description>\n        <rasd:InstanceId>2</rasd:InstanceId>\n        <rasd:ResourceType>4</rasd:ResourceType>\n        <rasd:AllocationUnits>MegaBytes</rasd:AllocationUnits>\n        <rasd:VirtualQuantity>1024</rasd:VirtualQuantity>\n      </Item>\n      <Item>\n        <rasd:Caption>USB Controller</rasd:Caption>\n        <rasd:InstanceId>3</rasd:InstanceId>\n        <rasd:ResourceType>23</rasd:ResourceType>\n        <rasd:UsbPolicy>DISABLED</rasd:UsbPolicy>\n      </Item>\n    </Section>\n  </Content>\n</ovf:Envelope>\n----"
                    }, 
                    "type": {
                      "enum": [
                        "ovf"
                      ], 
                      "type": "string"
                    }
                  }
                }, 
                "user_name": {
                  "type": "string"
                }, 
                "active_directory_ou": {
                  "type": "string"
                }, 
                "host_name": {
                  "type": "string"
                }
              }
            }, 
            "stop_time": {
              "type": "string", 
              "description": "The date in which the virtual machine was stopped.", 
              "format": "epoch"
            }, 
            "status": {
              "enum": [
                "down", 
                "image_locked", 
                "migrating", 
                "not_responding", 
                "paused", 
                "powering_down", 
                "powering_up", 
                "reboot_in_progress", 
                "restoring_state", 
                "saving_state", 
                "suspended", 
                "unassigned", 
                "unknown", 
                "up", 
                "wait_for_launch"
              ], 
              "type": "string", 
              "description": "The current status of the virtual machine."
            }, 
            "rng_device": {
              "type": "object", 
              "description": "Random number generator (RNG) device model.", 
              "properties": {
                "source": {
                  "enum": [
                    "hwrng", 
                    "random", 
                    "urandom"
                  ], 
                  "type": "string", 
                  "description": "Backend of the random number generator device."
                }, 
                "rate": {
                  "type": "object", 
                  "description": "Determines maximum speed of consumption of bytes from random number generator device.", 
                  "properties": {
                    "bytes": {
                      "type": "integer", 
                      "description": "Number of bytes allowed to consume per period.", 
                      "format": "int32"
                    }, 
                    "period": {
                      "type": "integer", 
                      "description": "Duration of one period in milliseconds.", 
                      "format": "int32"
                    }
                  }
                }
              }
            }, 
            "next_run_configuration_exists": {
              "type": "boolean", 
              "description": "Virtual machine configuration has been changed and requires restart of the virtual machine.\nChanged configuration is applied at processing the virtual machine's _shut down_."
            }, 
            "description": {
              "type": "string", 
              "description": "A human-readable description in plain text."
            }, 
            "start_time": {
              "type": "string", 
              "description": "The date in which the virtual machine was started.", 
              "format": "epoch"
            }, 
            "status_detail": {
              "type": "string", 
              "description": "Human readable detail of current status."
            }, 
            "run_once": {
              "type": "boolean", 
              "description": "If `true`, the virtual machine has been started using the _run once_ command, meaning\nit's configuration might differ from the stored one for the purpose of this single run."
            }, 
            "sso": {
              "type": "object", 
              "properties": {
                "methods": {
                  "items": {
                    "type": "object", 
                    "properties": {
                      "id": {
                        "enum": [
                          "guest_agent"
                        ], 
                        "type": "string"
                      }
                    }
                  }, 
                  "type": "array"
                }
              }
            }, 
            "memory_policy": {
              "type": "object", 
              "description": "Logical grouping of memory related properties of virtual machine-like entities.", 
              "properties": {
                "ballooning": {
                  "type": "boolean"
                }, 
                "max": {
                  "type": "integer", 
                  "description": "Maximum virtual machine's memory, in bytes.\n\nThe user provides the value in bytes, and the engine rounds the value down to the nearest lower MiB value.\n\nFor example, if the user enters a value of 1073741825 (1 GiB + 1 byte), then the {engine-name} will truncate\nthat value to the nearest lower MiB boundary: in this case 1073741824 (1 GiB).", 
                  "format": "int32"
                }, 
                "guaranteed": {
                  "type": "integer", 
                  "format": "int32"
                }, 
                "transparent_hugepages": {
                  "type": "object", 
                  "description": "Type representing a transparent huge pages (THP) support.", 
                  "properties": {
                    "enabled": {
                      "type": "boolean", 
                      "description": "Enable THP support."
                    }
                  }
                }, 
                "over_commit": {
                  "type": "object", 
                  "properties": {
                    "percent": {
                      "type": "integer", 
                      "format": "int32"
                    }
                  }
                }
              }
            }, 
            "soundcard_enabled": {
              "type": "boolean", 
              "description": "If `true`, the sound card is added to the virtual machine."
            }, 
            "use_latest_template_version": {
              "type": "boolean", 
              "description": "If `true`, the virtual machine is reconfigured to the latest version of it's template when it is started."
            }, 
            "stateless": {
              "type": "boolean", 
              "description": "If `true`, the virtual machine is stateless - it's state (disks) are rolled-back after shutdown."
            }, 
            "name": {
              "type": "string", 
              "description": "A human-readable name in plain text."
            }, 
            "stop_reason": {
              "type": "string", 
              "description": "The reason the virtual machine was stopped.\nOptionally set by user when shutting down the virtual machine."
            }, 
            "time_zone": {
              "type": "object", 
              "description": "Time zone representation.", 
              "properties": {
                "utc_offset": {
                  "type": "string", 
                  "description": "Offset from https://en.wikipedia.org/wiki/Coordinated_Universal_Time[UTC]."
                }, 
                "name": {
                  "type": "string", 
                  "description": "Name of the time zone."
                }
              }
            }, 
            "numa_tune_mode": {
              "enum": [
                "interleave", 
                "preferred", 
                "strict"
              ], 
              "type": "string", 
              "description": "How the NUMA topology is applied."
            }, 
            "display": {
              "type": "object", 
              "description": "Represents a graphic console configuration.", 
              "properties": {
                "allow_override": {
                  "type": "boolean", 
                  "description": "Indicates if to override the display address per host.\nRelevant only for the `Host.display` attribute.\nIf set, the graphical console address of a virtual machine will be overridden by the host specified display address.\nif not set, the graphical console address of a virtual machine will not be overridden."
                }, 
                "disconnect_action": {
                  "type": "string", 
                  "description": "Returns the action that will take place when the graphic console is disconnected.\nThe options are:\n\nnone:: No action is taken.\nlock_screen:: Locks the currently active user session.\nlogout:: Logs out the currently active user session.\nreboot:: Initiates a graceful virtual machine reboot.\nshutdown:: Initiates a graceful virtual machine shutdown.\n\nThis option is only available for the SPICE console type."
                }, 
                "certificate": {
                  "type": "object", 
                  "properties": {
                    "comment": {
                      "type": "string", 
                      "description": "Free text containing comments about this object."
                    }, 
                    "description": {
                      "type": "string", 
                      "description": "A human-readable description in plain text."
                    }, 
                    "name": {
                      "type": "string", 
                      "description": "A human-readable name in plain text."
                    }, 
                    "content": {
                      "type": "string"
                    }, 
                    "organization": {
                      "type": "string"
                    }, 
                    "id": {
                      "type": "string", 
                      "description": "A unique identifier."
                    }, 
                    "subject": {
                      "type": "string"
                    }
                  }
                }, 
                "monitors": {
                  "type": "integer", 
                  "description": "The number of monitors opened for this graphic console.\nThis option is only available for the SPICE console type.\nPossible values are 1, 2 or 4.", 
                  "format": "int32"
                }, 
                "single_qxl_pci": {
                  "type": "boolean", 
                  "description": "Indicates if to use one PCI slot for each monitor or to use a single PCI channel for all multiple monitors.\nThis option is only available for the SPICE console type and only for connecting a guest Linux based OS."
                }, 
                "copy_paste_enabled": {
                  "type": "boolean", 
                  "description": "Indicates whether a user is able to copy and paste content from an external host into the graphic console.\nThis option is only available for the SPICE console type."
                }, 
                "secure_port": {
                  "type": "integer", 
                  "description": "The secured port address on the guest, in case of using TLS, to connect the graphic console client to.\nIf TLS isn't enabled then it won't be reported.", 
                  "format": "int32"
                }, 
                "proxy": {
                  "type": "string", 
                  "description": "The proxy IP which will be used by the graphic console client to connect to the guest.\nIt is useful when the client is outside the guest's network.\nThis option is only available for the SPICE console type.\nThis proxy can be set in global configuration, cluster level, virtual machine pool level or disabled\nper virtual machine.\nIf the proxy is set in any of this mentioned places and not disabled for the virtual machine, it will be\nreturned by this method.\nIf the proxy is not set, nothing will be reported."
                }, 
                "smartcard_enabled": {
                  "type": "boolean", 
                  "description": "Indicates if to use smart card authentication.\nThis option is only available for the SPICE console type."
                }, 
                "file_transfer_enabled": {
                  "type": "boolean", 
                  "description": "Indicates if a user is able to drag and drop files from an external host into the graphic console.\nThis option is only available for the SPICE console type."
                }, 
                "keyboard_layout": {
                  "type": "string", 
                  "description": "The keyboard layout to use with this graphic console.\nThis option is only available for the VNC console type.\nIf no keyboard is enabled then it won't be reported."
                }, 
                "type": {
                  "enum": [
                    "spice", 
                    "vnc"
                  ], 
                  "type": "string", 
                  "description": "The graphic console protocol type."
                }, 
                "port": {
                  "type": "integer", 
                  "description": "The port address on the guest to connect the graphic console client to.", 
                  "format": "int32"
                }, 
                "address": {
                  "type": "string", 
                  "description": "The IP address of the guest to connect the graphic console client to."
                }
              }
            }, 
            "start_paused": {
              "type": "boolean", 
              "description": "If `true`, the virtual machine will be initially in 'paused' state after start."
            }, 
            "custom_cpu_model": {
              "type": "string"
            }, 
            "small_icon": {
              "type": "object", 
              "description": "Icon of virtual machine or template.", 
              "properties": {
                "comment": {
                  "type": "string", 
                  "description": "Free text containing comments about this object."
                }, 
                "description": {
                  "type": "string", 
                  "description": "A human-readable description in plain text."
                }, 
                "media_type": {
                  "type": "string", 
                  "description": "Format of icon file.\n\nOne of:\n\n* `image/jpeg`\n* `image/png`\n* `image/gif`"
                }, 
                "data": {
                  "type": "string", 
                  "description": "Base64 encode content of the icon file."
                }, 
                "id": {
                  "type": "string", 
                  "description": "A unique identifier."
                }, 
                "name": {
                  "type": "string", 
                  "description": "A human-readable name in plain text."
                }
              }
            }, 
            "lease": {
              "type": "object", 
              "description": "Represents a lease residing on a storage domain.\n\nA lease is a http://www.ovirt.org/develop/developer-guide/vdsm/sanlock[Sanlock] resource residing on a special\nvolume on the storage domain, this Sanlock resource is used to provide storage base locking.", 
              "properties": {
                "storage_domain": {
                  "type": "object", 
                  "description": "Storage domain.\n\nAn XML representation of a NFS storage domain with identifier `123`:\n\n[source,xml]\n----\n<storage_domain href=\"/ovirt-engine/api/storagedomains/123\" id=\"123\">\n  <name>mydata</name>\n  <description>My data</description>\n  <available>38654705664</available>\n  <committed>1073741824</committed>\n  <critical_space_action_blocker>5</critical_space_action_blocker>\n  <external_status>ok</external_status>\n  <master>true</master>\n  <storage>\n    <address>mynfs.example.com</address>\n    <nfs_version>v3</nfs_version>\n    <path>/exports/mydata</path>\n    <type>nfs</type>\n  </storage>\n  <storage_format>v3</storage_format>\n  <type>data</type>\n  <used>13958643712</used>\n  <warning_low_space_indicator>10</warning_low_space_indicator>\n  <wipe_after_delete>false</wipe_after_delete>\n  <data_centers>\n    <data_center href=\"/ovirt-engine/api/datacenters/456\" id=\"456\"/>\n  </data_centers>\n</storage_domain>\n----", 
                  "properties": {
                    "available": {
                      "type": "integer", 
                      "format": "int32"
                    }, 
                    "comment": {
                      "type": "string", 
                      "description": "Free text containing comments about this object."
                    }, 
                    "supports_discard_zeroes_data": {
                      "type": "boolean", 
                      "description": "Indicates whether a block storage domain supports the property that\ndiscard zeroes the data.\nA <<types/storage_domain,storage domain>> only supports the property that\ndiscard zeroes the data if all of the\n<<types/logical_unit, logical unit>>s that it is built from support it;\nthat is, if each logical unit's `discard_zeroes_data` value is true.\nThis is one of the conditions necessary for a virtual disk in this\nstorage domain to have both `wipe_after_delete` and `pass_discard` attributes enabled.\nSince the engine cannot check if the underlying block device supports\nthe property that discard zeroes the data for file storage domains,\nthis attribute will not be reported for them at all."
                    }, 
                    "description": {
                      "type": "string", 
                      "description": "A human-readable description in plain text."
                    }, 
                    "name": {
                      "type": "string", 
                      "description": "A human-readable name in plain text."
                    }, 
                    "warning_low_space_indicator": {
                      "type": "integer", 
                      "format": "int32"
                    }, 
                    "wipe_after_delete": {
                      "type": "boolean", 
                      "description": "Serves as the default value of `wipe_after_delete` for <<types/disk, disk>>s on this\n<<types/storage_domain, storage domain>>.\n\nThat is, newly created disks will get their `wipe_after_delete` value from their storage domains by default.\nNote that the configuration value `SANWipeAfterDelete` serves as the default value of block storage domains'\n`wipe_after_delete` value."
                    }, 
                    "critical_space_action_blocker": {
                      "type": "integer", 
                      "format": "int32"
                    }, 
                    "storage": {
                      "type": "object", 
                      "properties": {
                        "comment": {
                          "type": "string", 
                          "description": "Free text containing comments about this object."
                        }, 
                        "username": {
                          "type": "string"
                        }, 
                        "description": {
                          "type": "string", 
                          "description": "A human-readable description in plain text."
                        }, 
                        "name": {
                          "type": "string", 
                          "description": "A human-readable name in plain text."
                        }, 
                        "nfs_timeo": {
                          "type": "integer", 
                          "description": "The time in tenths of a second to wait for a response before retrying NFS requests. The value must be in the\nrange of 0 to 65535. For more details see the description of the `timeo` mount option in the `nfs` man page.", 
                          "format": "int32"
                        }, 
                        "logical_units": {
                          "items": {
                            "type": "object", 
                            "properties": {
                              "status": {
                                "enum": [
                                  "free", 
                                  "unusable", 
                                  "used"
                                ], 
                                "type": "string"
                              }, 
                              "username": {
                                "type": "string"
                              }, 
                              "password": {
                                "type": "string"
                              }, 
                              "discard_max_size": {
                                "type": "integer", 
                                "description": "The maximum number of bytes that can be discarded by the logical unit's\nunderlying storage in a single operation.\nA value of 0 means that the device does not support discard functionality.\n\nNOTE: This is the software limit, and not the hardware limit, as noted in the\nhttps://www.kernel.org/doc/Documentation/block/queue-sysfs.txt[documentation] of\n`queue-sysfs` for `discard_max_bytes`.", 
                                "format": "int32"
                              }, 
                              "volume_group_id": {
                                "type": "string"
                              }, 
                              "paths": {
                                "type": "integer", 
                                "format": "int32"
                              }, 
                              "vendor_id": {
                                "type": "string"
                              }, 
                              "disk_id": {
                                "type": "string"
                              }, 
                              "port": {
                                "type": "integer", 
                                "format": "int32"
                              }, 
                              "target": {
                                "type": "string"
                              }, 
                              "portal": {
                                "type": "string"
                              }, 
                              "discard_zeroes_data": {
                                "type": "boolean", 
                                "description": "True, if previously discarded blocks in the logical\nunit's underlying storage are read back as zeros.\nFor more information please see the\nhttps://www.kernel.org/doc/Documentation/block/queue-sysfs.txt[documentation]\nof `queue-sysfs` for `discard_zeroes_data`."
                              }, 
                              "lun_mapping": {
                                "type": "integer", 
                                "format": "int32"
                              }, 
                              "serial": {
                                "type": "string"
                              }, 
                              "size": {
                                "type": "integer", 
                                "format": "int32"
                              }, 
                              "storage_domain_id": {
                                "type": "string"
                              }, 
                              "id": {
                                "type": "string"
                              }, 
                              "address": {
                                "type": "string"
                              }, 
                              "product_id": {
                                "type": "string"
                              }
                            }
                          }, 
                          "type": "array"
                        }, 
                        "nfs_retrans": {
                          "type": "integer", 
                          "description": "The number of times to retry a request before attempting further recovery actions. The value must be in the\nrange of 0 to 65535. For more details see the description of the `retrans` mount option in the `nfs` man page.", 
                          "format": "int32"
                        }, 
                        "port": {
                          "type": "integer", 
                          "format": "int32"
                        }, 
                        "override_luns": {
                          "type": "boolean"
                        }, 
                        "portal": {
                          "type": "string"
                        }, 
                        "mount_options": {
                          "type": "string"
                        }, 
                        "volume_group": {
                          "type": "object", 
                          "properties": {
                            "logical_units": {
                              "items": {
                                "type": "object", 
                                "properties": {
                                  "status": {
                                    "enum": [
                                      "free", 
                                      "unusable", 
                                      "used"
                                    ], 
                                    "type": "string"
                                  }, 
                                  "username": {
                                    "type": "string"
                                  }, 
                                  "password": {
                                    "type": "string"
                                  }, 
                                  "discard_max_size": {
                                    "type": "integer", 
                                    "description": "The maximum number of bytes that can be discarded by the logical unit's\nunderlying storage in a single operation.\nA value of 0 means that the device does not support discard functionality.\n\nNOTE: This is the software limit, and not the hardware limit, as noted in the\nhttps://www.kernel.org/doc/Documentation/block/queue-sysfs.txt[documentation] of\n`queue-sysfs` for `discard_max_bytes`.", 
                                    "format": "int32"
                                  }, 
                                  "volume_group_id": {
                                    "type": "string"
                                  }, 
                                  "paths": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "vendor_id": {
                                    "type": "string"
                                  }, 
                                  "disk_id": {
                                    "type": "string"
                                  }, 
                                  "port": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "target": {
                                    "type": "string"
                                  }, 
                                  "portal": {
                                    "type": "string"
                                  }, 
                                  "discard_zeroes_data": {
                                    "type": "boolean", 
                                    "description": "True, if previously discarded blocks in the logical\nunit's underlying storage are read back as zeros.\nFor more information please see the\nhttps://www.kernel.org/doc/Documentation/block/queue-sysfs.txt[documentation]\nof `queue-sysfs` for `discard_zeroes_data`."
                                  }, 
                                  "lun_mapping": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "serial": {
                                    "type": "string"
                                  }, 
                                  "size": {
                                    "type": "integer", 
                                    "format": "int32"
                                  }, 
                                  "storage_domain_id": {
                                    "type": "string"
                                  }, 
                                  "id": {
                                    "type": "string"
                                  }, 
                                  "address": {
                                    "type": "string"
                                  }, 
                                  "product_id": {
                                    "type": "string"
                                  }
                                }
                              }, 
                              "type": "array"
                            }, 
                            "id": {
                              "type": "string"
                            }, 
                            "name": {
                              "type": "string"
                            }
                          }
                        }, 
                        "address": {
                          "type": "string"
                        }, 
                        "id": {
                          "type": "string", 
                          "description": "A unique identifier."
                        }, 
                        "path": {
                          "type": "string"
                        }, 
                        "vfs_type": {
                          "type": "string"
                        }, 
                        "password": {
                          "type": "string"
                        }, 
                        "type": {
                          "enum": [
                            "cinder", 
                            "fcp", 
                            "glance", 
                            "glusterfs", 
                            "iscsi", 
                            "localfs", 
                            "nfs", 
                            "posixfs"
                          ], 
                          "type": "string"
                        }, 
                        "nfs_version": {
                          "enum": [
                            "auto", 
                            "v3", 
                            "v4", 
                            "v4_1", 
                            "v4_2"
                          ], 
                          "type": "string"
                        }, 
                        "target": {
                          "type": "string"
                        }
                      }
                    }, 
                    "id": {
                      "type": "string", 
                      "description": "A unique identifier."
                    }, 
                    "status": {
                      "enum": [
                        "activating", 
                        "active", 
                        "detaching", 
                        "inactive", 
                        "locked", 
                        "maintenance", 
                        "mixed", 
                        "preparing_for_maintenance", 
                        "unattached", 
                        "unknown"
                      ], 
                      "type": "string"
                    }, 
                    "used": {
                      "type": "integer", 
                      "format": "int32"
                    }, 
                    "master": {
                      "type": "boolean"
                    }, 
                    "discard_after_delete": {
                      "type": "boolean", 
                      "description": "Indicates whether <<types/disk, disk>>s' blocks on block <<types/storage_domain, storage domain>>s will be\ndiscarded right before they are deleted.\n\nIf true, and a disk on this storage domain has its `wipe_after_delete` value enabled, then when the disk is\ndeleted:\n\n. It is first wiped.\n. Then its blocks are discarded.\n. Finally it is deleted.\n\nNote that:\n\n* Discard after delete will always be `false` for non block storage types.\n\n* Discard after delete can be set to `true` only if the storage domain\n<<types/storage_domain/attributes/supports_discard, supports discard>>."
                    }, 
                    "committed": {
                      "type": "integer", 
                      "format": "int32"
                    }, 
                    "import": {
                      "type": "boolean"
                    }, 
                    "external_status": {
                      "enum": [
                        "error", 
                        "failure", 
                        "info", 
                        "ok", 
                        "warning"
                      ], 
                      "type": "string"
                    }, 
                    "type": {
                      "enum": [
                        "data", 
                        "export", 
                        "image", 
                        "iso", 
                        "volume"
                      ], 
                      "type": "string"
                    }, 
                    "storage_format": {
                      "enum": [
                        "v1", 
                        "v2", 
                        "v3", 
                        "v4"
                      ], 
                      "type": "string"
                    }, 
                    "supports_discard": {
                      "type": "boolean", 
                      "description": "Indicates whether a block storage domain supports discard operations.\nA <<types/storage_domain,storage domain>> only supports discard\nif all of the <<types/logical_unit, logical unit>>s that it is built\nfrom support discard; that is, if each logical unit's `discard_max_size` value\nis greater than 0.\nThis is one of the conditions necessary for a virtual disk in this\nstorage domain to have its `pass_discard` attribute enabled.\nSince the engine cannot check if the underlying block device supports\ndiscard for file storage domains, this attribute will not be reported\nfor them at all."
                    }
                  }
                }
              }
            }, 
            "os": {
              "type": "object", 
              "description": "Information describing the operating system. This is used for both virtual machines and hosts.", 
              "properties": {
                "kernel": {
                  "type": "string", 
                  "description": "Path to custom kernel on ISO storage domain if Linux operating system is used.\n\nFor example `iso://vmlinuz-3.10.0-514.6.1.el7.x86_64`.\n\nNOTE: Not used for hosts."
                }, 
                "reported_kernel_cmdline": {
                  "type": "string", 
                  "description": "The host kernel command line as reported by a running host.\n\nThis is a read-only attribute. Attempts to change this attribute are silently ignored.\n\nNOTE: This attribute is currently only used for hosts."
                }, 
                "boot": {
                  "type": "object", 
                  "description": "Configuration of the boot sequence of a virtual machine.", 
                  "properties": {
                    "devices": {
                      "items": {
                        "enum": [
                          "cdrom", 
                          "hd", 
                          "network"
                        ], 
                        "type": "string"
                      }, 
                      "type": "array", 
                      "description": "Ordered list of boot devices. The virtual machine will try to boot from the given boot devices, in the given\norder."
                    }
                  }
                }, 
                "cmdline": {
                  "type": "string", 
                  "description": "Custom kernel parameters for start the virtual machine with if Linux operating system is used.\n\nNOTE: Not used for hosts."
                }, 
                "initrd": {
                  "type": "string", 
                  "description": "Path to custom initial ramdisk on ISO storage domain if Linux operating system is used.\n\nFor example `iso://initramfs-3.10.0-514.6.1.el7.x86_64.img`.\n\nNOTE: Not used for hosts."
                }, 
                "version": {
                  "type": "object", 
                  "properties": {
                    "comment": {
                      "type": "string", 
                      "description": "Free text containing comments about this object."
                    }, 
                    "major": {
                      "type": "integer", 
                      "format": "int32"
                    }, 
                    "description": {
                      "type": "string", 
                      "description": "A human-readable description in plain text."
                    }, 
                    "full_version": {
                      "type": "string"
                    }, 
                    "name": {
                      "type": "string", 
                      "description": "A human-readable name in plain text."
                    }, 
                    "build": {
                      "type": "integer", 
                      "format": "int32"
                    }, 
                    "id": {
                      "type": "string", 
                      "description": "A unique identifier."
                    }, 
                    "minor": {
                      "type": "integer", 
                      "format": "int32"
                    }, 
                    "revision": {
                      "type": "integer", 
                      "format": "int32"
                    }
                  }
                }, 
                "custom_kernel_cmdline": {
                  "type": "string", 
                  "description": "A custom part of the host kernel command line. This will be merged with the existing kernel command line.\n\nYou must reinstall and then reboot the host to apply the changes implemented by this attribute.\n\nDuring each host deploy procedure, kernel parameters that were added\nin the previous host deploy procedure are removed using\n`grubby --update-kernel DEFAULT --remove-args <previous_custom_params>`, and the current\nkernel command line customization is applied using\n`grubby --update-kernel DEFAULT --args <custom_params>`. The Manager internally keeps track of the\nlast-applied kernel parameters customization.\n\nNOTE: This attribute is currently only used for hosts."
                }, 
                "type": {
                  "type": "string", 
                  "description": "Operating system name in human readable form.\n\nFor example `Fedora` or `RHEL`. In general one of the names returned by the <<services/operating_systems,\noperating system>> service.\n\nNOTE: Read only for hosts."
                }
              }
            }, 
            "cpu": {
              "type": "object", 
              "properties": {
                "name": {
                  "type": "string"
                }, 
                "level": {
                  "type": "integer", 
                  "format": "int32"
                }, 
                "speed": {
                  "type": "number", 
                  "format": "double"
                }, 
                "cpu_tune": {
                  "type": "object", 
                  "properties": {
                    "vcpu_pins": {
                      "items": {
                        "type": "object", 
                        "properties": {
                          "cpu_set": {
                            "type": "string"
                          }, 
                          "vcpu": {
                            "type": "integer", 
                            "format": "int32"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }, 
                "architecture": {
                  "enum": [
                    "ppc64", 
                    "undefined", 
                    "x86_64"
                  ], 
                  "type": "string"
                }, 
                "mode": {
                  "enum": [
                    "custom", 
                    "host_model", 
                    "host_passthrough"
                  ], 
                  "type": "string"
                }, 
                "cores": {
                  "items": {
                    "type": "object", 
                    "properties": {
                      "index": {
                        "type": "integer", 
                        "format": "int32"
                      }, 
                      "socket": {
                        "type": "integer", 
                        "format": "int32"
                      }
                    }
                  }, 
                  "type": "array"
                }, 
                "type": {
                  "type": "string"
                }, 
                "topology": {
                  "type": "object", 
                  "properties": {
                    "cores": {
                      "type": "integer", 
                      "format": "int32"
                    }, 
                    "threads": {
                      "type": "integer", 
                      "format": "int32"
                    }, 
                    "sockets": {
                      "type": "integer", 
                      "format": "int32"
                    }
                  }
                }
              }
            }, 
            "cpu_shares": {
              "type": "integer", 
              "format": "int32"
            }
          }
        }, 
        "sso": {
          "type": "object", 
          "properties": {
            "methods": {
              "items": {
                "type": "object", 
                "properties": {
                  "id": {
                    "enum": [
                      "guest_agent"
                    ], 
                    "type": "string"
                  }
                }
              }, 
              "type": "array"
            }
          }
        }, 
        "memory_policy": {
          "type": "object", 
          "description": "Logical grouping of memory related properties of virtual machine-like entities.", 
          "properties": {
            "ballooning": {
              "type": "boolean"
            }, 
            "max": {
              "type": "integer", 
              "description": "Maximum virtual machine's memory, in bytes.\n\nThe user provides the value in bytes, and the engine rounds the value down to the nearest lower MiB value.\n\nFor example, if the user enters a value of 1073741825 (1 GiB + 1 byte), then the {engine-name} will truncate\nthat value to the nearest lower MiB boundary: in this case 1073741824 (1 GiB).", 
              "format": "int32"
            }, 
            "guaranteed": {
              "type": "integer", 
              "format": "int32"
            }, 
            "transparent_hugepages": {
              "type": "object", 
              "description": "Type representing a transparent huge pages (THP) support.", 
              "properties": {
                "enabled": {
                  "type": "boolean", 
                  "description": "Enable THP support."
                }
              }
            }, 
            "over_commit": {
              "type": "object", 
              "properties": {
                "percent": {
                  "type": "integer", 
                  "format": "int32"
                }
              }
            }
          }
        }, 
        "soundcard_enabled": {
          "type": "boolean", 
          "description": "If `true`, the sound card is added to the virtual machine."
        }, 
        "stateless": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine is stateless - it's state (disks) are rolled-back after shutdown."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }, 
        "custom_cpu_model": {
          "type": "string"
        }, 
        "time_zone": {
          "type": "object", 
          "description": "Time zone representation.", 
          "properties": {
            "utc_offset": {
              "type": "string", 
              "description": "Offset from https://en.wikipedia.org/wiki/Coordinated_Universal_Time[UTC]."
            }, 
            "name": {
              "type": "string", 
              "description": "Name of the time zone."
            }
          }
        }, 
        "display": {
          "type": "object", 
          "description": "Represents a graphic console configuration.", 
          "properties": {
            "allow_override": {
              "type": "boolean", 
              "description": "Indicates if to override the display address per host.\nRelevant only for the `Host.display` attribute.\nIf set, the graphical console address of a virtual machine will be overridden by the host specified display address.\nif not set, the graphical console address of a virtual machine will not be overridden."
            }, 
            "disconnect_action": {
              "type": "string", 
              "description": "Returns the action that will take place when the graphic console is disconnected.\nThe options are:\n\nnone:: No action is taken.\nlock_screen:: Locks the currently active user session.\nlogout:: Logs out the currently active user session.\nreboot:: Initiates a graceful virtual machine reboot.\nshutdown:: Initiates a graceful virtual machine shutdown.\n\nThis option is only available for the SPICE console type."
            }, 
            "certificate": {
              "type": "object", 
              "properties": {
                "comment": {
                  "type": "string", 
                  "description": "Free text containing comments about this object."
                }, 
                "description": {
                  "type": "string", 
                  "description": "A human-readable description in plain text."
                }, 
                "name": {
                  "type": "string", 
                  "description": "A human-readable name in plain text."
                }, 
                "content": {
                  "type": "string"
                }, 
                "organization": {
                  "type": "string"
                }, 
                "id": {
                  "type": "string", 
                  "description": "A unique identifier."
                }, 
                "subject": {
                  "type": "string"
                }
              }
            }, 
            "monitors": {
              "type": "integer", 
              "description": "The number of monitors opened for this graphic console.\nThis option is only available for the SPICE console type.\nPossible values are 1, 2 or 4.", 
              "format": "int32"
            }, 
            "single_qxl_pci": {
              "type": "boolean", 
              "description": "Indicates if to use one PCI slot for each monitor or to use a single PCI channel for all multiple monitors.\nThis option is only available for the SPICE console type and only for connecting a guest Linux based OS."
            }, 
            "copy_paste_enabled": {
              "type": "boolean", 
              "description": "Indicates whether a user is able to copy and paste content from an external host into the graphic console.\nThis option is only available for the SPICE console type."
            }, 
            "secure_port": {
              "type": "integer", 
              "description": "The secured port address on the guest, in case of using TLS, to connect the graphic console client to.\nIf TLS isn't enabled then it won't be reported.", 
              "format": "int32"
            }, 
            "proxy": {
              "type": "string", 
              "description": "The proxy IP which will be used by the graphic console client to connect to the guest.\nIt is useful when the client is outside the guest's network.\nThis option is only available for the SPICE console type.\nThis proxy can be set in global configuration, cluster level, virtual machine pool level or disabled\nper virtual machine.\nIf the proxy is set in any of this mentioned places and not disabled for the virtual machine, it will be\nreturned by this method.\nIf the proxy is not set, nothing will be reported."
            }, 
            "smartcard_enabled": {
              "type": "boolean", 
              "description": "Indicates if to use smart card authentication.\nThis option is only available for the SPICE console type."
            }, 
            "file_transfer_enabled": {
              "type": "boolean", 
              "description": "Indicates if a user is able to drag and drop files from an external host into the graphic console.\nThis option is only available for the SPICE console type."
            }, 
            "keyboard_layout": {
              "type": "string", 
              "description": "The keyboard layout to use with this graphic console.\nThis option is only available for the VNC console type.\nIf no keyboard is enabled then it won't be reported."
            }, 
            "type": {
              "enum": [
                "spice", 
                "vnc"
              ], 
              "type": "string", 
              "description": "The graphic console protocol type."
            }, 
            "port": {
              "type": "integer", 
              "description": "The port address on the guest to connect the graphic console client to.", 
              "format": "int32"
            }, 
            "address": {
              "type": "string", 
              "description": "The IP address of the guest to connect the graphic console client to."
            }
          }
        }, 
        "start_paused": {
          "type": "boolean", 
          "description": "If `true`, the virtual machine will be initially in 'paused' state after start."
        }, 
        "small_icon": {
          "type": "object", 
          "description": "Icon of virtual machine or template.", 
          "properties": {
            "comment": {
              "type": "string", 
              "description": "Free text containing comments about this object."
            }, 
            "description": {
              "type": "string", 
              "description": "A human-readable description in plain text."
            }, 
            "media_type": {
              "type": "string", 
              "description": "Format of icon file.\n\nOne of:\n\n* `image/jpeg`\n* `image/png`\n* `image/gif`"
            }, 
            "data": {
              "type": "string", 
              "description": "Base64 encode content of the icon file."
            }, 
            "id": {
              "type": "string", 
              "description": "A unique identifier."
            }, 
            "name": {
              "type": "string", 
              "description": "A human-readable name in plain text."
            }
          }
        }, 
        "os": {
          "type": "object", 
          "description": "Information describing the operating system. This is used for both virtual machines and hosts.", 
          "properties": {
            "kernel": {
              "type": "string", 
              "description": "Path to custom kernel on ISO storage domain if Linux operating system is used.\n\nFor example `iso://vmlinuz-3.10.0-514.6.1.el7.x86_64`.\n\nNOTE: Not used for hosts."
            }, 
            "reported_kernel_cmdline": {
              "type": "string", 
              "description": "The host kernel command line as reported by a running host.\n\nThis is a read-only attribute. Attempts to change this attribute are silently ignored.\n\nNOTE: This attribute is currently only used for hosts."
            }, 
            "boot": {
              "type": "object", 
              "description": "Configuration of the boot sequence of a virtual machine.", 
              "properties": {
                "devices": {
                  "items": {
                    "enum": [
                      "cdrom", 
                      "hd", 
                      "network"
                    ], 
                    "type": "string"
                  }, 
                  "type": "array", 
                  "description": "Ordered list of boot devices. The virtual machine will try to boot from the given boot devices, in the given\norder."
                }
              }
            }, 
            "cmdline": {
              "type": "string", 
              "description": "Custom kernel parameters for start the virtual machine with if Linux operating system is used.\n\nNOTE: Not used for hosts."
            }, 
            "initrd": {
              "type": "string", 
              "description": "Path to custom initial ramdisk on ISO storage domain if Linux operating system is used.\n\nFor example `iso://initramfs-3.10.0-514.6.1.el7.x86_64.img`.\n\nNOTE: Not used for hosts."
            }, 
            "version": {
              "type": "object", 
              "properties": {
                "comment": {
                  "type": "string", 
                  "description": "Free text containing comments about this object."
                }, 
                "major": {
                  "type": "integer", 
                  "format": "int32"
                }, 
                "description": {
                  "type": "string", 
                  "description": "A human-readable description in plain text."
                }, 
                "full_version": {
                  "type": "string"
                }, 
                "name": {
                  "type": "string", 
                  "description": "A human-readable name in plain text."
                }, 
                "build": {
                  "type": "integer", 
                  "format": "int32"
                }, 
                "id": {
                  "type": "string", 
                  "description": "A unique identifier."
                }, 
                "minor": {
                  "type": "integer", 
                  "format": "int32"
                }, 
                "revision": {
                  "type": "integer", 
                  "format": "int32"
                }
              }
            }, 
            "custom_kernel_cmdline": {
              "type": "string", 
              "description": "A custom part of the host kernel command line. This will be merged with the existing kernel command line.\n\nYou must reinstall and then reboot the host to apply the changes implemented by this attribute.\n\nDuring each host deploy procedure, kernel parameters that were added\nin the previous host deploy procedure are removed using\n`grubby --update-kernel DEFAULT --remove-args <previous_custom_params>`, and the current\nkernel command line customization is applied using\n`grubby --update-kernel DEFAULT --args <custom_params>`. The Manager internally keeps track of the\nlast-applied kernel parameters customization.\n\nNOTE: This attribute is currently only used for hosts."
            }, 
            "type": {
              "type": "string", 
              "description": "Operating system name in human readable form.\n\nFor example `Fedora` or `RHEL`. In general one of the names returned by the <<services/operating_systems,\noperating system>> service.\n\nNOTE: Read only for hosts."
            }
          }
        }, 
        "cpu": {
          "type": "object", 
          "properties": {
            "name": {
              "type": "string"
            }, 
            "level": {
              "type": "integer", 
              "format": "int32"
            }, 
            "speed": {
              "type": "number", 
              "format": "double"
            }, 
            "cpu_tune": {
              "type": "object", 
              "properties": {
                "vcpu_pins": {
                  "items": {
                    "type": "object", 
                    "properties": {
                      "cpu_set": {
                        "type": "string"
                      }, 
                      "vcpu": {
                        "type": "integer", 
                        "format": "int32"
                      }
                    }
                  }, 
                  "type": "array"
                }
              }
            }, 
            "architecture": {
              "enum": [
                "ppc64", 
                "undefined", 
                "x86_64"
              ], 
              "type": "string"
            }, 
            "mode": {
              "enum": [
                "custom", 
                "host_model", 
                "host_passthrough"
              ], 
              "type": "string"
            }, 
            "cores": {
              "items": {
                "type": "object", 
                "properties": {
                  "index": {
                    "type": "integer", 
                    "format": "int32"
                  }, 
                  "socket": {
                    "type": "integer", 
                    "format": "int32"
                  }
                }
              }, 
              "type": "array"
            }, 
            "type": {
              "type": "string"
            }, 
            "topology": {
              "type": "object", 
              "properties": {
                "cores": {
                  "type": "integer", 
                  "format": "int32"
                }, 
                "threads": {
                  "type": "integer", 
                  "format": "int32"
                }, 
                "sockets": {
                  "type": "integer", 
                  "format": "int32"
                }
              }
            }
          }
        }, 
        "cpu_shares": {
          "type": "integer", 
          "format": "int32"
        }
      }
    }, 
    "file": {
      "type": "object", 
      "properties": {
        "comment": {
          "type": "string", 
          "description": "Free text containing comments about this object."
        }, 
        "description": {
          "type": "string", 
          "description": "A human-readable description in plain text."
        }, 
        "content": {
          "type": "string"
        }, 
        "type": {
          "type": "string"
        }, 
        "id": {
          "type": "string", 
          "description": "A unique identifier."
        }, 
        "name": {
          "type": "string", 
          "description": "A human-readable name in plain text."
        }
      }
    }, 
    "id": {
      "type": "string", 
      "description": "A unique identifier."
    }, 
    "name": {
      "type": "string", 
      "description": "A human-readable name in plain text."
    }
  }
}